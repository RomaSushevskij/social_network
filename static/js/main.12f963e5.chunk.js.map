{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navbar/NavLink/CustomNavLink.tsx","components/generic/Button/Button.tsx","components/Navbar/Navbar.tsx","underConstruction.png","components/generic/UnderConstruction/UnderConstruction.tsx","components/Music/Music.tsx","components/News/News.tsx","hoc/withAuthRedirect.tsx","components/Settings/Settings.tsx","main-logo.png","redux/redusers/dialogsReducer/dialogsReducer.ts","usersAvatars/user.png","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Mesage/Message.tsx","components/generic/Textarea/Textarea.tsx","components/forms/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/Profile/MyPosts/Posts/Post.tsx","components/forms/AddPostForm/AddPostForm.tsx","api/api.ts","components/Profile/MyPosts/MyPosts.tsx","components/Users/User/User.tsx","components/generic/Paginator/Paginator.tsx","components/generic/Preloader/Preloader.tsx","components/Users/Users.tsx","redux/redusers/usersReducer/usersReducer.ts","redux/redusers/profileReducer/profileReducer.ts","components/Users/UsersContainer.tsx","hoc/withRouter.tsx","redux/redusers/auth/authReducer.ts","top-wallpaper.jpg","components/generic/InputText/InputText.tsx","components/generic/EditableSpan/EditableSpan.tsx","components/Profile/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/generic/Checkbox/Checkbox.tsx","components/forms/LoginForm/Login.tsx","components/Login/Login.tsx","App.tsx","redux/redux-store.ts","index.tsx","components/Dialogs/Mesage/Message.module.css","components/Navbar/Navbar.module.css","components/Header/Header.module.css","components/generic/Paginator/Paginator.module.css","components/generic/EditableSpan/EditableSpan.module.css","components/forms/LoginForm/LoginForm.module.css","components/generic/InputText/InputText.module.css","components/Dialogs/Dialogs.module.css","components/Users/User/User.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/generic/Checkbox/Checkbox.module.css","components/Dialogs/Dialog/Dialog.module.css","components/forms/AddMessageForm/AddMessageForm.module.css","components/forms/AddPostForm/AddPostForm.module.css","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/generic/Preloader/Preloader.module.css","components/generic/Button/Button.module.css","components/generic/UnderConstruction/UnderConstruction.module.css","components/generic/Textarea/Textarea.module.css","components/Login/Login.module.css"],"names":["module","exports","CustomNavLink","path","title","iconTitle","resultClassName","styleModule","item","users","className","to","nav","isActive","active","icon","JSON","parse","Button","React","memo","name","onClick","disabled","type","props","ButtonWithBefore","styled","button","backgroundHover","background","colorHover","style","NavbarContainer","navigate","useNavigate","navLinksArr","stringify","faUserAlt","withAuthRedirect","faCommentDots","faNewspaper","faHeadphonesAlt","faUsers","faSlidersH","useState","navLinks","resultNavLinks","isAuth","filter","customNavLinks","map","navLink","buttonBlock","Navbar","connect","state","auth","UnderConstruction","container","src","logo","alt","Music","News","mapStateToPropsAuth","WrappedComponent","SettingsContainer","initialState","dialogsData","id","image","messagesData","userId","message","time","Dialog","color","DialogWrapper","div","ContactAvatar","dialog","contactAvatar","userLogo","dialogActive","Message","meBackground","meColor","MessageBlock","Avatar","messageWrapperStyle","messageWrapper","meMessageWrapper","messageBlockStyle","messageBlock","meMessageBlock","avatar","messageAva","Textarea","textareaValue","setTextareaValue","reference","placeholder","onAddWithEnter","field","styles","form","meta","textarea","onChange","onKeyPress","value","ref","AddMessageForm","addMessage","initialValues","newMessageText","onSubmit","values","setSubmitting","resetForm","trim","isSubmitting","handleSubmit","writeAndSendMessage","e","shiftKey","key","preventDefault","onAddMessageWithEnter","writeMessage","component","TextAreaField","sendMessage","MESSAGE_STYLE","DIALOG_STYLE","Dialogs","dialogs","heading","dialogs_items","dialogsPage","messagesBlock","messages","DialogsContainer","compose","payload","Post","likes","isLike","removePost","likePost","PostWrapper","LikesDiv","postWrapper","avaBlock","ava_post","faTimes","onCrossClick","onLikeClick","likesBlock","likeCount","AddPostForm","addPost","newPostText","formWrapper","onAddPostWithEnter","writePost","addPostButton","FOLLOW_UNFOLLOW_RESULT_CODES","RESPONSE_RESULT_CODES","BUTTON_STYLE","POST_STYLE","MyPosts","myPosts","posts","postsData","post","User","UserWrapper","Img","img","isFollowingButtonDisabled","followingInProcessUsersId","includes","userWrapper","photos","small","userPhotoDefault","fullName","status","followed","stopBeingFollower","becomeFollower","Paginator","portionSize","useMemo","pageCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionNumber","setPortionNumber","portionCount","leftPortionPageNumber","rightPortionPageNumber","paginator","firstPage","pagesToBack","threeDots","page","currentPage","selectedPage","onChangePage","pagesToForward","lastPage","Preloader","size","preloaderBlock","fontSize","preloaderIcon","faSpinner","Users","usersTotalCount","isFetching","toggleFollowingInProcess","userElements","user","usersWrapper","usersBlock","USERS_ACTIONS_TYPES","instance_1","axios","create","baseURL","withCredentials","headers","usersAPI","get","then","response","data","delete","profileAPI","put","authMeAPI","PROFILE_ACTIONS_TYPES","setUsers","SET_USERS","setIsFetchingValue","SET_IS_FETCHING_VALUE","followingInProcess","TOGGLE_FOLLOWING_IN_PROCESS","UsersApiContainer","pageNumber","repeatGetUsers","this","getUsers","nextProps","nextState","Component","UsersContainer","usersPage","dispatch","userID","resultCode","success","FOLLOW","UNFOLLOW","items","totalCount","SET_USERS_TOTAL_COUNT","SET_CURRENT_PAGE","AUTH_ACTIONS_TYPES","profile","setStatus","SET_STATUS","InputText","onChangeText","onEnter","error","spanClassName","customStyle","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","inputWrapper","currentTarget","EditableSpan","editMode","onEnterCallback","setState","onBlurCallback","onBlur","onDoubleClickCallBack","onDoubleClick","spanProps","autoFocus","children","restSpanProps","editSpan","editableSpanWrapper","CSSTransition","in","timeout","classNames","unmountOnExit","mountOnEnter","inputStyle","spanWrapper","editPen","faPencilAlt","ProfileStatus","onBlurEnterCallback","updateStatus","prevProps","prevState","snapshot","profileStatus","undefined","PureComponent","ProfileInfo","profileInfo","top_wallpaper","avatarAndFullName","large","logo_avatar","description","wrapper_description","aboutMe","lookingForAJob","statusJob","faCheck","iconYes","iconNot","descriptionJob","lookingForAJobDescription","MyPostsContainer","profilePage","ADD_POST","REMOVE_POST","LIKE_POST","Profile","content","params","ProfileAPIContainer","refreshProfile","getProfile","getStatus","Number","ProfileContainer","SET_PROFILE","useParams","Header","header","TitleDescription","logoAndDescription","main_logo","title_description","loginStatus","loginAndAvatar","loginValue","email","login","HeaderAPIContainer","render","HEADER_STYLE","getAuthorizationInfo","HeaderContainer","getState","SET_AUTH_USER_DATA","setAuthUserData","SET_FULL_NAME_AND_AVATAR","setFullNameAndAvatar","Checkbox","onChangeChecked","bgColor","FakeFlagSpan","span","InputCheckbox","input","Label","label","checkbox","checked","fakeFlag","LoginForm","wrapperLoginForm","password","rememberMe","console","log","formElement","checkMark","CheckBoxField","Login","wrapperLogin","PATH","App","element","rootReducer","combineReducers","action","newPost","length","p","newMessage","Date","toLocaleTimeString","slice","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,kBAAoB,uCAAuC,MAAQ,2BAA2B,SAAW,8BAA8B,cAAgB,mCAAmC,YAAc,iCAAiC,QAAU,6BAA6B,eAAiB,oCAAoC,UAAY,+BAA+B,QAAU,6BAA6B,QAAU,6BAA6B,QAAU,6BAA6B,eAAiB,sC,mKCK1iBC,EAAgB,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,UAClCC,EAA4B,UAAVF,EAAA,UACjBG,IAAYC,KADK,YACGD,IAAYE,OACnCF,IAAYC,KAChB,OACI,qBAAKE,UAAWJ,EAAhB,SACI,eAAC,IAAD,CAASK,GAAIR,EACJO,UAAW,SAAAE,GAAG,OAAIA,EAAIC,SAAWN,IAAYO,OAAS,IAD/D,UAEI,cAAC,IAAD,CAAiBC,KAAMC,KAAKC,MAAMZ,GAAYK,UAAWH,IAAYQ,OAAQX,Q,6ECChFc,EAASC,IAAMC,MAAK,YAKyB,IAJpBC,EAImB,EAJnBA,KACAC,EAGmB,EAHnBA,QACAC,EAEmB,EAFnBA,SACAC,EACmB,EADnBA,KAASC,EACU,iBAC/CC,EAAmBC,IAAOC,OAAV,qJAEVH,EAAMI,gBAAkBJ,EAAMI,gBAAkB,UACvDJ,EAAMI,gBAAkBJ,EAAMI,gBAAkB,UACtCJ,EAAMK,WAAaL,EAAMK,WAAa,UAG3CL,EAAMI,gBAAkBJ,EAAMI,gBAAkB,UAGrDJ,EAAMM,WAAaN,EAAMM,WAAa,WAQ3C,OACI,cAACL,EAAD,CAAkBJ,QALA,WAClBA,GAAWA,KAKOZ,UAAWsB,IAAMJ,OACjBL,SAAUA,EACVC,KAAMA,EAHxB,SAIKH,O,OClBAY,EAAkBd,IAAMC,MAAK,SAACK,GACvC,IAAMS,EAAWC,cAEXC,EAA6B,CAC/B,CAAChC,MAAO,UAAWD,KAAM,WAAYE,UAAWW,KAAKqB,UAAUC,KAAYC,kBAAkB,GAC7F,CAACnC,MAAO,WAAYD,KAAM,WAAYE,UAAWW,KAAKqB,UAAUG,KAAgBD,kBAAkB,GAClG,CAACnC,MAAO,OAAQD,KAAM,QAASE,UAAWW,KAAKqB,UAAUI,KAAcF,kBAAkB,GACzF,CAACnC,MAAO,QAASD,KAAM,SAAUE,UAAWW,KAAKqB,UAAUK,KAAkBH,kBAAkB,GAC/F,CAACnC,MAAO,QAASD,KAAM,SAAUE,UAAWW,KAAKqB,UAAUM,KAAUJ,kBAAkB,GACvF,CAACnC,MAAO,WAAYD,KAAM,YAAaE,UAAWW,KAAKqB,UAAUO,KAAaL,kBAAkB,IAEpG,EAAgCM,mBAAwBT,GAAxD,mBAAOU,EAAP,KAEIC,GAFJ,KAEqBD,GAChBrB,EAAMuB,SACPD,EAAiBD,EAASG,QAAO,SAAArC,GAAG,OAAKA,EAAI2B,qBAGjD,IAAMW,EAAiBH,EAAeI,KAAI,SAAAC,GAClC,OACI,cAAC,EAAD,eAAuCA,GAAnBA,EAAQhD,UAIxC,OACI,mCACI,sBAAKM,UAAWH,IAAYK,IAA5B,UACKsC,GACCzB,EAAMuB,QAAU,qBAAKtC,UAAWH,IAAY8C,YAA5B,SACd,cAACnC,EAAD,CAAQG,KAAM,QAASC,QAAS,kBAAIY,EAAS,uBAepDoB,EAASC,aAPE,SAACC,GAAD,MAA0B,CAC9CR,OAAQQ,EAAMC,KAAKT,UAMDO,CAAyBtB,GCtEhC,MAA0B,8C,iBCE5ByB,EAAoB,WAC7B,OACI,qBAAKhD,UAAWH,IAAYoD,UAA5B,SACI,qBAAKC,IAAKC,EAAMC,IAAI,0BCAzB,SAASC,EAAMtC,GAClB,OACI,8BACG,cAAC,EAAD,MCHJ,SAASuC,EAAKvC,GACjB,OACI,8BACI,cAAC,EAAD,MCFZ,IAAMwC,EAAsB,SAACT,GAAD,MAAuD,CAC/ER,OAAOQ,EAAMC,KAAKT,SAMTT,EAAmB,SAAC2B,GAU7B,OAAOX,YAAQU,EAARV,EAR2B,SAAC9B,GAC/B,OAAIA,EAAMuB,OAIN,cAACkB,EAAD,eAAsBzC,IAHf,cAAC,IAAD,CAAUd,GAAI,eCJ1B,I,QAAMwD,EAAoB5B,GARjC,SAAkBd,GACX,OACC,8BACI,cAAC,EAAD,SCRG,MAA0B,sC,QC6BnC2C,EAAe,CACjBC,YAAa,CACT,CACIC,GAAI,EACJjD,KAAM,SACNkD,MAAO,qKAEX,CAACD,GAAI,EAAGjD,KAAM,SAAUkD,MAAO,MAC/B,CACID,GAAI,EACJjD,KAAM,UACNkD,MAAO,uJAEX,CAACD,GAAI,EAAGjD,KAAM,OAAQkD,MAAO,MAC7B,CAACD,GAAI,EAAGjD,KAAM,SAAUkD,MAAO,OAEnCC,aAAc,CACV,CACIF,GAAI,EACJG,OAAQ,EACRpD,KAAM,SACNqD,QAAS,qEACTH,MAAO,oKACPI,KAAM,SAGV,CAACL,GAAI,EAAGG,OAAQ,MAAOpD,KAAM,KAAMqD,QAAS,sBAAuBH,MAAO,KAAMI,KAAM,SACtF,CAACL,GAAI,EAAGjD,KAAM,SAAUoD,OAAQ,EAAGC,QAAS,6BAA8BH,MAAO,KAAMI,KAAM,SAC7F,CACIL,GAAI,EACJjD,KAAM,OACNoD,OAAQ,EACRC,QAAS,4DACTH,MAAO,sJACPI,KAAM,SAEV,CACIL,GAAI,EACJG,OAAQ,MACRpD,KAAM,KACNqD,QAAS,4DACTH,MAAO,KACPI,KAAM,SAEV,CAACL,GAAI,EAAGjD,KAAM,SAAUoD,OAAQ,EAAGC,QAAS,sBAAuBH,MAAO,KAAMI,KAAM,SACtF,CAACL,GAAI,EAAGjD,KAAM,KAAMqD,QAAS,oBAAqBH,MAAO,KAAMI,KAAM,SACrE,CACIL,GAAI,EACJjD,KAAM,KACNoD,OAAQ,MACRC,QAAS,wFACTH,MAAO,KACPI,KAAM,SAEV,CACIL,GAAI,EACJjD,KAAM,SACNoD,OAAQ,EACRC,QAAS,8CACTH,MAAO,KACPI,KAAM,W,iBCzFH,MAA0B,iC,6CCS5BC,EAASzD,IAAMC,MAAK,YAMc,IALpBkD,EAKmB,EALnBA,GACAjD,EAImB,EAJnBA,KACAkD,EAGmB,EAHnBA,MACAzC,EAEmB,EAFnBA,WACA+C,EACmB,EADnBA,MAEjBC,GADoC,iBACpBnD,IAAOoD,IAAV,8GAELjD,GAA0B,UAG/B+C,GAAgB,YAInBG,EAAgBrD,IAAOoD,IAAV,+EAECF,GAAgB,WAGpC,OACI,eAACC,EAAD,CAAepE,UAAWH,IAAY0E,OAAtC,UACI,cAACD,EAAD,CAAetE,UAAWH,IAAY2E,cAAtC,SACI,qBAAKtB,IAAKW,GAAgBY,EAAUrB,IAAK,qBAE7C,cAAC,IAAD,CAASpD,UAAW,SAAAuE,GAAM,OAAIA,EAAOpE,SAAWN,IAAY6E,aAAe,IAAIzE,GAAE,mBAAc2D,GAA/F,SAAsGjD,U,iHCLrGgE,EAAUlE,IAAMC,MAAK,YAYyB,EAXpBkD,GAWqB,IAVrBG,EAUoB,EAVpBA,OACApD,EASoB,EATpBA,KACAqD,EAQoB,EARpBA,QACAH,EAOoB,EAPpBA,MACAI,EAMoB,EANpBA,KACAE,EAKoB,EALpBA,MACA/C,EAIoB,EAJpBA,WACAwD,EAGoB,EAHpBA,aACAC,EAEoB,EAFpBA,QAG7BC,GADiD,iBAClC7D,IAAOoD,IAAV,4LAEO,QAAXN,EAAmBa,EAAexD,EAC5B,QAAX2C,EAAmBc,EAAUV,EAGwC,QAAXJ,EAAmBa,EAAexD,IAG/F2D,EAAS9D,IAAOoD,IAAV,sEAEIjD,GAKV4D,EAAiC,QAAXjB,EAAA,UACrBlE,IAAYoF,eADS,YACSpF,IAAYqF,kBAC7CrF,IAAYoF,eACVE,EAA+B,QAAXpB,EAAA,UAEnBlE,IAAYuF,aAFO,YAESvF,IAAYwF,gBAC3CxF,IAAYuF,aAChB,OACI,sBAAKpF,UAAWgF,EAAhB,UACI,eAACF,EAAD,CAAc9E,UAAWmF,EAAzB,UACI,qBAAKnF,UAAWH,IAAYc,KAA5B,SACKA,IAEL,qBAAKX,UAAWH,IAAYmE,QAA5B,SACKA,IAEL,qBAAKhE,UAAWH,IAAYoE,KAA5B,SACKA,OAGT,cAACc,EAAD,CAAQ/E,UAAWH,IAAYyF,OAA/B,SACI,qBAAKpC,IAAKW,GAAgB0B,Y,iMChE7BC,GAAW/E,IAAMC,MAAK,YAY2B,IAXtB+E,EAWqB,EAXrBA,cACAC,EAUqB,EAVrBA,iBACAC,EASqB,EATrBA,UACAC,EAQqB,EARrBA,YACAC,EAOqB,EAPrBA,eACAzE,EAMqB,EANrBA,WACA+C,EAKqB,EALrBA,MACA2B,EAIqB,EAJrBA,MAK9BC,GADmD,EAHrBC,KAGqB,EAFrBC,KAEqB,kBAC1C,CACX7E,WAAYA,EACZ+C,MAAOA,IAEX,OACI,sCAAUyB,YAAaA,EACb5F,UAAWsB,KAAM4E,SACjBC,SAAUT,EACVU,WAAYP,EACZQ,MAAOZ,EACPa,IAAKX,EACLrE,MAAOyE,GACHD,OCtBf,SAASS,GAAT,GAAgE,IAAvCC,EAAsC,EAAtCA,WAe5B,OACI,cAAC,KAAD,CACIC,cAAe,CAACC,eAAgB,IAChCC,SAhBgB,SAACC,EAAD,GAAoF,IAAnDC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,UACpEF,EAAOF,eAAeK,QAAUP,EAAWI,EAAOF,gBAClDG,GAAc,GACdC,KAWA,SAGK,gBAAEE,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,aAAhB,OACG,eAAC,KAAD,CAAMjH,UAAWH,KAAYqH,oBACvBP,SAAUM,EACVb,WAAY,SAACe,GAAD,OAfA,SAACA,EACAF,GACtBE,EAAEC,UAAsB,UAAVD,EAAEE,MACjBF,EAAEG,iBACFL,KAW6BM,CAAsBJ,EAAGF,IAFlD,UAGI,qBAAKjH,UAAWH,KAAY2H,aAA5B,SACI,cAAC,KAAD,CAAO7G,KAAK,iBAAiB8G,UAAWC,OAE5C,qBAAK1H,UAAWH,KAAY8H,YAA5B,SACI,cAACnH,EAAD,CAAQG,KAAM,OACNG,KAAM,SACND,SAAUmG,YAW1C,I,MAAMU,GAAgB,SAAC3G,GACnB,OACI,cAACyE,GAAD,2BAAczE,GAAd,IACU6E,YAAa,qBACbxE,WAAY,UACZ+C,MAAO,cCxDnByD,GACU,UADVA,GAEK,UAFLA,GAGY,UAHZA,GAIO,UAEPC,GACU,UADVA,GAEK,UAGEC,GAAUrH,IAAMC,MAAK,SAACK,GAC/B,OACI,sBAAKf,UAAWH,KAAYkI,QAA5B,UACI,qBAAK/H,UAAWH,KAAYmI,QAA5B,qBAGA,qBAAKhI,UAAWH,KAAYoI,cAA5B,SACKlH,EAAMmH,YAAYvE,YAAYlB,KAAI,SAAA8B,GAAM,OAAI,cAACL,EAAD,aACQ9C,WAAYyG,GACZ1D,MAAO0D,IACHtD,GAHCA,EAAOX,SAKrE,sBAAK5D,UAAWH,KAAYsI,cAA5B,UACI,qBAAKnI,UAAWH,KAAYuI,SAA5B,SACKrH,EAAMmH,YAAYpE,aAAarB,KAAI,SAAAuB,GAAO,OAAI,cAACW,EAAD,aACSvD,WAAYwG,GACZzD,MAAOyD,GACPhD,aAAcgD,GACd/C,QAAS+C,IACL5D,GALCA,EAAQJ,SAOzE,cAAC2C,GAAD,CAAgBC,WAAYzF,EAAMyF,sB,SCdrC6B,GAAmBC,aAC5BzG,EACAgB,aAToB,SAACC,GACrB,MAAO,CACHoF,YAAapF,EAAMoF,YACnB5F,OAAQQ,EAAMC,KAAKT,UAME,CAACkE,WPsFJ,SAACE,GAAD,MAA6B,CACnD5F,KAAM,6BACNyH,QAAS,CAAC7B,sBO1FkB4B,CAG9BR,I,qNCdWU,GAAO/H,IAAMC,MAAK,YAYuB,IAXlBkD,EAWiB,EAXjBA,GACAjD,EAUiB,EAVjBA,KACAqD,EASiB,EATjBA,QACAyE,EAQiB,EARjBA,MACAC,EAOiB,EAPjBA,OACA7E,EAMiB,EANjBA,MACAzC,EAKiB,EALjBA,WACA+C,EAIiB,EAJjBA,MACAwE,EAGiB,EAHjBA,WACAC,EAEiB,EAFjBA,SAG1BC,GAD2C,kBAC7B5H,IAAOoD,IAAV,kGAECjD,GAA0B,UAC9B+C,GAAgB,YAGxB2E,EAAW7H,IAAOoD,IAAV,uEACLqE,EAAS,UAAY,UACjBA,EAAS,OAAS,UAU/B,OACI,eAACG,EAAD,CAAa7I,UAAWH,KAAYkJ,YAApC,UACI,sBAAK/I,UAAWH,KAAYmJ,SAA5B,UACI,qBAAK9F,IAAKW,GAAgBoF,EAAU7F,IAAI,aACxC,+BAAOzC,IACP,cAAC,IAAD,CAAiBN,KAAM6I,IAASlJ,UAAWH,KAAY8I,WAAY/H,QAAS,kBAZnE,SAACgD,GAClB+E,EAAW/E,GAW+EuF,CAAavF,SAEnG,qBAAK5D,UAAWH,KAAYuF,aAA5B,SACKpB,IAEL,cAAC8E,EAAD,UACI,sBAAMlI,QAAS,kBAfP,SAACgD,GACjBgF,EAAShF,GAcoBwF,CAAYxF,IAC3B5D,UAAWH,KAAYwJ,WAD7B,mBAEQZ,EAAMpI,KAFd,YAEsBoI,EAAMa,qB,oBCxCrC,SAASC,GAAT,GAAuD,IAAjCC,EAAgC,EAAhCA,QAezB,OACI,cAAC,KAAD,CACI/C,cAAe,CAACgD,YAAa,IAC7B9C,SAhBgB,SAACC,EAAD,GAAoF,IAAnDC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,UACpEF,EAAO6C,YAAY1C,QAAUyC,EAAQ5C,EAAO6C,aAC5C5C,GAAc,GACdC,KAWA,SAIK,gBAAEE,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,aAAhB,OACG,eAAC,KAAD,CAAMjH,UAAWH,KAAY6J,YACvB/C,SAAUM,EACVb,WAAY,SAACe,GAAD,OAhBH,SAACA,EACAF,GACnBE,EAAEC,UAAsB,UAAVD,EAAEE,MACjBF,EAAEG,iBACFL,KAY6B0C,CAAmBxC,EAAGF,IAF/C,UAGI,qBAAKjH,UAAWH,KAAY+J,UAA5B,SACI,cAAC,KAAD,CAAOjJ,KAAK,cAAc8G,UAAWC,OAEzC,qBAAK1H,UAAWH,KAAYgK,cAA5B,SACI,cAACrJ,EAAD,CAAQM,KAAM,SACNH,KAAM,WACNE,SAAUmG,YAS1C,I,MCvCY8C,GA0BAC,GDaNrC,GAAgB,SAAC3G,GACnB,OACI,cAACyE,GAAD,2BAAczE,GAAd,IACU6E,YAAa,+BACbxE,WAAY,UACZ+C,MAAO,cExDZ6F,GACS,UADTA,GAEG,UAFHA,GAGI,UAEJC,GACG,UADHA,GAEF,UAGEC,GAAUzJ,IAAMC,MAAK,SAACK,GAE/B,OACI,sBAAKf,UAAWH,KAAYsK,QAA5B,UACI,yCACA,cAACZ,GAAD,CAAaC,QAASzI,EAAMyI,UAC5B,qBAAKxJ,UAAWH,KAAYuK,MAA5B,SACKrJ,EAAMsJ,UAAU5H,KAAI,SAAA6H,GAAI,OACrB,cAAC9B,GAAD,aAEIpH,WAAY6I,GACZ9F,MAAO8F,GACPtB,WAAY5H,EAAM4H,WAClBC,SAAU7H,EAAM6H,UACZ0B,GALCA,EAAK1G,eCDrB2G,GAAO9J,IAAMC,MAAK,SAACK,GAC5B,IAAMyJ,EAAcvJ,IAAOoD,IAAV,uFAEHtD,EAAMK,WAAaL,EAAMK,WAAa,SAC3CL,EAAMoD,MAAQpD,EAAMoD,MAAQ,SAG/BsG,EAAMxJ,IAAOyJ,IAAV,wEAEO3J,EAAMoD,MAAQpD,EAAMoD,MAAQ,SAKtCwG,EAA4B5J,EAAM6J,0BAA0BC,SAAS9J,EAAM6C,IAEjF,OACI,eAAC4G,EAAD,CAAaxK,UAAWH,KAAYiL,YAApC,UACI,qBAAK9K,UAAWH,KAAYyF,OAA5B,SACI,cAAC,IAAD,CAASrF,GAAE,mBAAcc,EAAM6C,IAA/B,SACI,cAAC6G,EAAD,CAAKvH,IAA4B,OAAvBnC,EAAMgK,OAAOC,MAAiBjK,EAAMgK,OAAOC,MAAQC,EAAkB7H,IAAI,SAG3F,qBAAKpD,UAAWH,KAAYqL,SAA5B,SACKnK,EAAMJ,OAEX,qBAAKX,UAAWH,KAAYsL,OAA5B,SACI,+BAAOpK,EAAMoK,WAEjB,qBAAKnL,UAAWH,KAAYuL,SAA5B,SACKrK,EAAMqK,SACH,cAAC5K,EAAD,CAAQG,KAAM,WACNC,QAAS,kBAAKG,EAAMsK,kBAAkBtK,EAAM6C,KAC5CzC,gBAAiB6I,GACjB5I,WAAY4I,GACZ3I,WAAY2I,GACZnJ,SAAU8J,IAClB,cAACnK,EAAD,CAAQG,KAAM,SACNC,QAAS,kBAAMG,EAAMuK,eAAevK,EAAM6C,KAC1CzC,gBAAiB6I,GACjB5I,WAAY4I,GACZ3I,WAAY2I,GACZnJ,SAAU8J,Y,uCCxDzBY,GAAY9K,IAAMC,MAAK,YAAuD,IAAD,IAApD8K,mBAAoD,MAAtC,GAAsC,EAA/BzK,EAA+B,kBAEtF,EAAwE0K,mBAAQ,WAG5E,IAFA,IAAMC,EAAYC,KAAKC,KAAK7K,EAAM8K,gBAAkB9K,EAAM+K,UACtDC,EAAuB,GAClBC,EAAI,EAAGA,GAAKN,EAAWM,IAC5BD,EAAME,KAAKD,GAEf,MAAO,CAACN,YAAWK,WACpB,CAAChL,EAAM8K,gBAAiB9K,EAAM+K,WAP1BJ,EAAP,EAAOA,UAAWK,EAAlB,EAAkBA,MAUlB,EAAwC5J,mBAAiB,GAAzD,mBAAK+J,EAAL,KAAoBC,EAApB,KACMC,EAAuBT,KAAKC,KAAKF,EAAYF,GAE7Ca,EAAgCZ,mBAAQ,WAC1C,OAAOD,GAAeU,EAAgB,GAAK,IAC5C,CAACV,EACAU,IACEI,EAAiCb,mBAAQ,WAC3C,OAAOD,EAAcU,IACtB,CAACV,EAAaU,IACjB,OACI,sBAAKlM,UAAWH,KAAY0M,UAA5B,UACKL,EAAgB,GAAK,wBAAQlM,UAAWH,KAAY2M,UAAW5L,QAAS,WACrEuL,EAAiB,IADC,SAElB,UACHD,EAAgB,GAAK,wBAAQlM,UAAWH,KAAY4M,YAAa7L,QAAS,WACvEuL,EAAiBD,EAAgB,IADf,SAElB,SACHA,EAAgB,GAAK,sBAAMlM,UAAWH,KAAY6M,UAA7B,SAAyC,UAE9DX,EAAMxJ,QAAO,SAAAoK,GAAI,OAAIA,GAAQN,GAAyBM,GAAQL,KAC1D7J,KAAI,SAAAkK,GAAI,OAAI,sBAAiB3M,UAAWe,EAAM6L,cAAgBD,EAAO9M,KAAYgN,aAAe,GAC9EjM,QAAS,WACLG,EAAM+L,aAAaH,IAF7B,SAGUA,GAHCA,MAM3BT,EAAgBE,GAAgB,sBAAMpM,UAAWH,KAAY6M,UAA7B,SAAyC,UACzER,EAAgBE,GAAgB,wBAAQpM,UAAWH,KAAYkN,eAAgBnM,QAAS,WACrFuL,EAAiBD,EAAgB,IADJ,SAE7B,SACHA,EAAgBE,GAAgB,wBAAQpM,UAAWH,KAAYmN,SAAUpM,QAAS,WAC/EuL,EAAiBD,EAAgBE,IADJ,SAE7B,e,oBC7CHa,GAAY,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,KAAM/I,EAA+B,EAA/BA,MAC7B,OACI,qBAAKnE,UAAWH,KAAYsN,eAA5B,SACI,cAAC,IAAD,CAAiB7L,MAAO,CAAC8L,SAAUF,EAAM/I,MAAOA,GAAQnE,UAAWH,KAAYwN,cAC9DhN,KAAMiN,SCHtBC,GAAQ9M,IAAMC,MAAK,SAACK,GAE7B,IACIhB,EAUAgB,EAVAhB,MACAuL,EASAvK,EATAuK,eACAD,EAQAtK,EARAsK,kBACAmC,EAOAzM,EAPAyM,gBACA1B,EAMA/K,EANA+K,SACAc,EAKA7L,EALA6L,YACAE,EAIA/L,EAJA+L,aACAW,EAGA1M,EAHA0M,WACA7C,EAEA7J,EAFA6J,0BACA8C,EACA3M,EADA2M,yBAGAC,EAAe5N,EAAM0C,KAAI,SAAAmL,GAAI,OAAI,cAACrD,GAAD,2BAAUqD,GAAV,IACMtC,eAAgBA,EAChBD,kBAAmBA,EACnBT,0BAA2BA,EAC3B8C,yBAA0BA,QACrE,OACI,sBAAK1N,UAAWH,KAAYgO,aAA5B,UACI,8BACI,cAACtC,GAAD,CAAWC,YAAa,GACboB,YAAaA,EACbd,SAAUA,EACVD,gBAAiB2B,EACjBV,aAAcA,MAE5BW,EAAa,cAAC,GAAD,CAAWP,KAAM,QAAS/I,MAAO,YAC3C,qBAAKnE,UAAWH,KAAYiO,WAA5B,SACKH,U,8BLxBT7D,O,qBAAAA,I,kBAAAA,Q,cA0BAC,O,qBAAAA,I,kBAAAA,Q,KAQZ,IMlDYgE,GNkDNC,GAAaC,KAAMC,OAAO,CAC5BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACL,UAAW,0CAINC,GAAW,SACXxC,EAAkBc,GACvB,OAAOoB,GAAWO,IAAX,sBAAgDzC,EAAhD,iBAAiEc,IACnE4B,MAAK,SAAAC,GACF,OAAOA,EAASC,SAJnBJ,GAAW,SAOLvK,GACX,OAAOiK,GAAW1D,KAAX,iBAA8CvG,IAChDyK,MAAK,SAAAC,GACF,OAAOA,EAASC,SAVnBJ,GAAW,SAaFvK,GACd,OAAOiK,GAAWW,OAAX,iBAAkD5K,IACpDyK,MAAK,SAAAC,GACF,OAAOA,EAASC,SAMnBE,GAAa,SACX7K,GACP,OAAOiK,GAAWO,IAAX,kBAA8CxK,IAChDyK,MAAK,SAAAC,GACF,OAAOA,EAASC,SAJnBE,GAAa,SAOZ7K,GACN,OAAOiK,GAAWO,IAAX,yBAAyCxK,IAC3CyK,MAAK,SAAAC,GACF,OAAOA,EAASC,SAVnBE,GAAa,SAaTzD,GACT,OAAO6C,GAAWa,IAAX,kBAAwD,CAAC1D,WAC3DqD,MAAK,SAAAC,GACF,OAAOA,MAKZK,GAAY,WAEf,OAAOd,GAAWO,IAAX,WACFC,MAAK,SAAAC,GACF,OAAOA,EAASC,U,SMzGpBX,K,6BAAAA,E,iCAAAA,E,mCAAAA,E,iDAAAA,E,2DAAAA,E,2DAAAA,E,wEAAAA,Q,KAuCZ,ICvCYgB,GDuCNrL,GAAe,CACjB3D,MAAO,GACPyN,gBAAiB,EACjB1B,SAAU,GACVc,YAAa,EACba,YAAY,EACZ7C,0BAA2B,IAiDlBoE,GAAW,SAACjP,GAAD,MAAwB,CAACe,KAAMiN,GAAoBkB,UAAW1G,QAAS,CAACxI,WASnFmP,GAAqB,SAACzB,GAAD,MAA0B,CACxD3M,KAAMiN,GAAoBoB,sBAAuB5G,QAAS,CAACkF,gBAElDC,GAA2B,SAAC3J,EAAgBqL,GAAjB,MAAkD,CACtFtO,KAAMiN,GAAoBsB,4BAC1B9G,QAAS,CAACxE,SAAQqL,wBEjGhBE,G,+MAeFxC,aAAe,SAACyC,GACZ,MAAmC,EAAKxO,MAAjC+K,EAAP,EAAOA,UACP0D,EADA,EAAgBA,gBACD1D,EAAUyD,I,wDAf7B,WACI,MAA0CE,KAAK1O,MAAxC6L,EAAP,EAAOA,YAAad,EAApB,EAAoBA,UAEpB4D,EAFA,EAA8BA,UAErB5D,EAAUc,K,mCAKvB,SAAsB+C,EAAiDC,GACnE,OAAOD,IAAcF,KAAK1O,OAAS6O,IAAcH,KAAK3M,Q,oBAS1D,WACI,OACI,cAACyK,GAAD,2BAAWkC,KAAK1O,OAAhB,IACO+L,aAAc2C,KAAK3C,oB,GAvBNrM,IAAMoP,WA4DzBC,GAAiBjN,aAXN,SAACC,GACrB,MAAO,CACH/C,MAAO+C,EAAMiN,UAAUhQ,MACvByN,gBAAiB1K,EAAMiN,UAAUvC,gBACjC1B,SAAUhJ,EAAMiN,UAAUjE,SAC1Bc,YAAa9J,EAAMiN,UAAUnD,YAC7Ba,WAAY3K,EAAMiN,UAAUtC,WAC5B7C,0BAA2B9H,EAAMiN,UAAUnF,6BAII,CACnDU,eFgD0B,SAAC1H,GAAD,OAA0B,SAAAoM,GACpDA,EAAStC,GAAyB9J,GAAI,IACtC0K,GAAwB1K,GAAI4K,MAAK,SAAAE,GA9Bf,IAACuB,EA+BXvB,EAAKwB,aAAepG,GAA6BqG,SACjDH,GAhCWC,EAgCKrM,EAhCe,CAAC9C,KAAMiN,GAAoBqC,OAAQ7H,QAAS,CAAC0H,aAkChFD,EAAStC,GAAyB9J,GAAI,SErD1CyH,kBFiE6B,SAACzH,GAAD,OAAyB,SAAAoM,GACtDA,EAAStC,GAAyB9J,GAAI,IACtC0K,GAA2B1K,GAAI4K,MAAK,SAAAE,GA/ChB,IAACuB,EAgDbvB,EAAKwB,aAAepG,GAA6BqG,SACjDH,GAjDaC,EAiDKrM,EAjDe,CAAC9C,KAAMiN,GAAoBsC,SAAU9H,QAAS,CAAC0H,aAmDpFD,EAAStC,GAAyB9J,GAAI,SEtE1C8J,4BACAgC,SFoCoB,SAAC5D,EAAkBc,GAAnB,OAAqD,SAAAoD,GACzEA,EAASd,IAAmB,IAC5BZ,GAAkBxC,EAAUc,GACvB4B,MAAK,SAAAE,GAfoB,IAAClB,EAgBvBwC,EAASd,IAAmB,IAC5Bc,EAAShB,GAASN,EAAK4B,QACvBN,GAlBuBxC,EAkBKkB,EAAK6B,WAlBmB,CAC5DzP,KAAMiN,GAAoByC,sBAC1BjI,QAAS,CAACiF,2BEzBVgC,eFqD0B,SAAC1D,EAAkByD,GAAnB,OAAoD,SAAAS,GAlCpD,IAACpD,EAmC3BoD,GAnC2BpD,EAmCH2C,EAnC4B,CACpDzO,KAAMiN,GAAoB0C,iBAC1BlI,QAAS,CAACqE,kBAkCVoD,EAASd,IAAmB,IAC5BZ,GAAkBxC,EAAUyD,GAAYf,MAAK,SAAAE,GACzCsB,EAASd,IAAmB,IAC5Bc,EAAShB,GAASN,EAAK4B,cE/DDzN,CAMDyM,K,SD7EjBP,K,mCAAAA,E,yCAAAA,E,qCAAAA,E,yCAAAA,E,wCAAAA,Q,KAiDZ,IEhD2BvL,G,MCCfkN,GH+CNhN,GAAe,CACjB2G,UAAW,CACP,CACIzG,GAAI,EACJjD,KAAM,SACNqD,QAAS,2EACTyE,MAAO,CACHpI,KAAM,SACNiJ,UAAW,GAEfZ,QAAQ,EACR7E,MAAO,qKAEX,CACID,GAAI,EACJjD,KAAM,SACNqD,QAAS,0JACTyE,MAAO,CACHpI,KAAM,SACNiJ,UAAW,GAEfZ,QAAQ,EACR7E,MAAO,MAEX,CACID,GAAI,EACJjD,KAAM,OACNqD,QAAS,yGACTyE,MAAO,CACHpI,KAAM,SACNiJ,UAAW,IAEfZ,QAAQ,EACR7E,MAAO,wJAGf8M,QAAS,KACTxF,OAAQ,IA0DCyF,GAAY,SAACzF,GAAD,MAAqB,CAC1CrK,KAAMiO,GAAsB8B,WAC5BtI,QAAS,CAAC4C,Y,wCIrJC,OAA0B,0C,0NC2D1B2F,GA1CiC,SAAC,GAW3C,IATEhQ,EASH,EATGA,KACAqF,EAQH,EARGA,SAAU4K,EAQb,EARaA,aACV3K,EAOH,EAPGA,WAAY4K,EAOf,EAPeA,QACZC,EAMH,EANGA,MACAjR,EAKH,EALGA,UAAWkR,EAKd,EALcA,cAAevQ,EAK7B,EAL6BA,KAC1BwQ,GAIH,EALmCzR,MAKnC,EAJGyR,aAAarL,EAIhB,EAJgBA,MAEVsL,GAEN,EAJuBpL,KAIvB,EAJ6BC,KAI7B,mBAUKoL,EAAkB,UAAMC,KAAEL,MAAR,YAAiBC,GAAgC,IACnEK,EAAmB,UAAMN,EAAK,UAAMK,KAAEE,WAAR,YAAsBF,KAAEG,YAAeH,KAAEG,WAApD,YAAkEzR,EAAYsR,KAAEtR,GAAaA,GAEtH,OACI,sBAAKA,UAAWmR,EAAW,UAAMA,EAAN,YAAqBG,KAAEI,cAAiBJ,KAAEI,aAArE,UACI,+CAAO/Q,KAAMA,EACNG,KAAMA,EACNqF,SAhBU,SAACgB,GACtBhB,GAAYA,EAASgB,GACrB4J,GAAgBA,EAAa5J,EAAEwK,cAActL,QAelCD,WAbY,SAACe,GACxBf,GAAcA,EAAWe,GACzB6J,GAAqB,UAAV7J,EAAEE,KAAmB2J,KAYrBhR,UAAWuR,GACPzL,GACAsL,IAIVH,GAAS,qBAAKjR,UAAWqR,EAAhB,SAAqCJ,Q,4EC/BrDW,G,+MACF9O,MAAmB,CACf+O,UAAU,G,EAEdC,gBAAkB,WACd,IAAOd,EAAW,EAAKjQ,MAAhBiQ,QACP,EAAKe,SAAS,CACVF,UAAU,IAEdb,GAAWA,K,EAEfgB,eAAiB,SAAC7K,GACd,IAAO8K,EAAU,EAAKlR,MAAfkR,OACP,EAAKF,SAAS,CACVF,UAAU,IAEdI,GAAUA,EAAO9K,I,EAErB+K,sBAAwB,SAAC/K,GACrB,IAAOgL,GAAiB,EAAKpR,MAAMqR,WAAa,IAAzCD,cACP,EAAKJ,SAAS,CACVF,UAAU,IAEdM,GAAiBA,EAAchL,I,6CAGnC,WACI,MAMIsI,KAAK1O,MAFLqR,GAJJ,EACIC,UADJ,EAEIJ,OAFJ,EAGIjB,QAHJ,EAIIoB,WACGhB,EALP,kBAOA,EAAgDgB,GAAa,GAAtDE,EAAP,EAAOA,SAAUtS,EAAjB,EAAiBA,UAAcuS,EAA/B,kBACMrB,EAAa,UAAM5P,KAAMkR,SAAZ,YAAwBxS,GAE3C,OACI,sBAAKA,UAAWsB,KAAMmR,oBAAtB,UACI,cAACC,GAAA,EAAD,CAAeC,GAAIlD,KAAK3M,MAAM+O,SACfe,QAAS,IACTC,WAAYvR,KACZwR,eAAa,EACbC,cAAY,EAJ3B,SAKI,qBAAK/S,UAAWsB,KAAMoQ,aAAtB,SACI,cAAC,GAAD,aACI1R,UAAW,YACXqS,WAAS,EACTJ,OAAQxC,KAAKuC,eACbhB,QAASvB,KAAKqC,gBACdK,cAAe1C,KAAKyC,sBACpBjB,MAAOG,EAAUH,MACjBE,YAAa7P,KAAM0R,YACf5B,QAGhB,cAACsB,GAAA,EAAD,CAAeC,IAAKlD,KAAK3M,MAAM+O,SAChBe,QAAS,IACTC,WAAYvR,KACZwR,eAAa,EACbC,cAAY,EAJ3B,SAKI,qBAAK/S,UAAWsB,KAAM2R,YAAtB,SACA,+CAAMd,cAAe1C,KAAKyC,sBACpBlS,UAAWkR,GACPqB,GAFV,cAGKD,GAAYlB,EAAU/K,MACvB,cAAC,IAAD,CAAiBrG,UAAWsB,KAAM4R,QAAS7S,KAAM8S,qB,GAlE9C1S,IAAMoP,WA2ElB+B,MCxFFwB,GAAb,+MACItQ,MAAQ,CACJqI,OAAQ,EAAKpK,MAAMoK,QAF3B,EAaI4F,aAAe,SAAC5F,GACZ,EAAK4G,SAAS,CACV5G,YAfZ,EAkBIkI,oBAAsB,WAClB,EAAKtS,MAAMuS,aAAa,EAAKxQ,MAAMqI,SAnB3C,yDAKI,SAAmBoI,EAA6CC,EAAyBC,GACjFF,EAAUpI,SAAWsE,KAAK1O,MAAMoK,QAChCsE,KAAKsC,SAAS,CACV5G,OAAQsE,KAAK1O,MAAMoK,WARnC,oBAsBI,WAEI,OACI,qBAAKnL,UAAWH,KAAY6T,cAA5B,SACI,cAAC,GAAD,CACIrN,MAAOoJ,KAAK3M,MAAMqI,OAClB4F,aAActB,KAAKsB,aACnBqB,UAAW,CAACE,SAAU7C,KAAK1O,MAAMoK,YAASwI,EAAY,mBACtD1B,OAAQxC,KAAK4D,oBACbrC,QAASvB,KAAK4D,4BA/BlC,GAAmC5S,IAAMmT,eCE5BC,GAAcpT,IAAMC,MAAK,YAI8B,IAHzBiQ,EAGwB,EAHxBA,QACAxF,EAEwB,EAFxBA,OACAmI,EACwB,EADxBA,aAGvC,OACI,sBAAKtT,UAAWH,KAAYiU,YAA5B,UACI,qBAAK9T,UAAWH,KAAYkU,cAA5B,SACI,qBAAK7Q,IAAK6Q,GAAe3Q,IAAI,oBAEjC,sBAAKpD,UAAWH,KAAYmU,kBAA5B,UACI,qBAAKhU,UAAWH,KAAYgE,MAA5B,SACI,qBAAKX,KAAY,OAAPyN,QAAO,IAAPA,OAAA,EAAAA,EAAS5F,OAAOkJ,QAASC,MAEvC,qBAAKlU,UAAWH,KAAYqL,SAA5B,gBAAuCyF,QAAvC,IAAuCA,OAAvC,EAAuCA,EAASzF,cAepD,qBAAKlL,UAAWH,KAAYsU,YAA5B,SAII,sBAAKnU,UAAWH,KAAYuU,oBAA5B,UAII,cAAC,GAAD,CAAejJ,OAAQA,EAAQmI,aAAcA,IAC7C,qBAAKtT,UAAWH,KAAYwU,QAA5B,gBAAsC1D,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAS0D,UAE/C,sBAAKrU,UAAWH,KAAYyU,eAA5B,UACI,sBAAKtU,UAAWH,KAAY0U,UAA5B,UACI,qBAAKvU,UAAWH,KAAYmI,QAA5B,2BACA,qBAAKhI,UAAWH,KAAYsD,KAA5B,UAA0C,OAAPwN,QAAO,IAAPA,OAAA,EAAAA,EAAS2D,gBACxC,cAAC,IAAD,CAAiBjU,KAAMmU,IAASxU,UAAWH,KAAY4U,UACvD,cAAC,IAAD,CAAiBpU,KAAM6I,IAASlJ,UAAWH,KAAY6U,eAG/D,qBAAK1U,UAAWH,KAAY8U,eAA5B,gBAA6ChE,QAA7C,IAA6CA,OAA7C,EAA6CA,EAASiE,0CCjCjEC,GAAmBhS,aALR,SAACC,GACrB,MAAO,CACHuH,UAAWvH,EAAMgS,YAAYzK,aAGoB,CACrDb,QT6GmB,SAACC,GAAD,MAA0B,CAC7C3I,KAAMiO,GAAsBgG,SAC5BxM,QAAS,CAACkB,iBS9GVd,WTgHsB,SAAC/E,GAAD,MAAiB,CAAC9C,KAAMiO,GAAsBiG,YAAazM,QAAS,CAAC3E,QS/G3FgF,STgHoB,SAAChF,GAAD,MAAiB,CAAC9C,KAAMiO,GAAsBkG,UAAW1M,QAAS,CAAC3E,SSnH3Df,CAIHqH,ICvBhBgL,GAAUzU,IAAMC,MAAK,SAACK,GAC/B,OACI,sBAAKf,UAAWH,KAAYsV,QAA5B,UACI,cAACtB,GAAD,eAAiB9S,IACjB,cAAC8T,GAAD,CAAkBO,OAAQrU,EAAMqU,eCDtCC,G,+MAEFC,eAAiB,WACb,MAAyC,EAAKvU,MAAvCwU,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,UACfzR,EADJ,EAA+BqR,OACX,KACfrR,GAAqB,MAAXA,IACXA,EAAS,SAEbwR,EAAWE,OAAO1R,IAClByR,EAAUC,OAAO1R,K,wDAGrB,WACI0L,KAAK6F,mB,gCAIT,SAAmB/B,EAAmDC,EAAyBC,GACvFF,EAAU6B,SAAW3F,KAAK1O,MAAMqU,QAChC3F,KAAK6F,mB,oBAIb,WACI,OAAO7F,KAAK1O,MAAM4P,QACV,cAACuE,GAAD,eAAazF,KAAK1O,QACrB,cAAC,GAAD,CAAWmM,KAAM,QAAS/I,MAAO,gB,GA1BZ1D,IAAMoP,WAsD3B6F,GAAmB7T,EAAiBgB,aAPzB,SAACC,GAAD,MAA+C,CACnE6N,QAAS7N,EAAMgS,YAAYnE,QAC3BrO,OAAQQ,EAAMC,KAAKT,OACnB6I,OAAQrI,EAAMgS,YAAY3J,UAI4C,CAACoK,WXwFjD,SAACxR,GAAD,OAA8B,SAAAiM,GACpDpB,GAAsB7K,GACjByK,MAAK,SAAAE,GAZY,IAACiC,EAafX,GAbeW,EAaKjC,EAbqB,CACjD5N,KAAMiO,GAAsB4G,YAC5BpN,QAAS,CAACoI,mBWhFyE6E,UX8F9D,SAACzR,GAAD,OAA8B,SAAAiM,GACnDpB,GAAqB7K,GAChByK,MAAK,SAAAE,GACFsB,EAASY,GAAUlC,SWjGmE4E,aXoGtE,SAACnI,GAAD,OAA8B,SAAA6E,GACtDpB,GAAwBzD,GACnBqD,MAAK,SAAAC,GACEA,EAASC,KAAKwB,aAAenG,GAAsBoG,SACnDH,EAASY,GAAUzF,UWxGctI,ET7DtBW,GS6D2H6R,GT5DtH,SAACtU,GACzB,IAAMqU,EAASQ,cACf,OACI,cAACpS,GAAD,2BAAsBzC,GAAtB,IAA6BqU,OAAQA,S,oBUQpCS,GAASpV,IAAMC,MAAK,SAACK,GAC9B,IACIrB,EAQAqB,EARArB,MACAyU,EAOApT,EAPAoT,YACA/S,EAMAL,EANAK,WACA+C,EAKApD,EALAoD,MACAhB,EAIApC,EAJAoC,KACAmC,EAGAvE,EAHAuE,OACA4F,EAEAnK,EAFAmK,SACAnI,EACAhC,EADAgC,KAEE8S,EAAS5U,IAAO6U,OAAV,+DAEE1U,GAER2U,EAAmB9U,IAAOoD,IAAV,mEAEbF,GAGT,OACI,eAAC0R,EAAD,CAAQ7V,UAAWH,KAAYiW,OAA/B,UACI,sBAAK9V,UAAWH,KAAYmW,mBAA5B,UACI,qBAAKhW,UAAWH,KAAYsD,KAA5B,SACI,qBAAKD,IAAKC,EAAMnD,UAAWH,KAAYoW,cAE3C,eAACF,EAAD,CAAkB/V,UAAWH,KAAYqW,kBAAzC,UACI,4BAAIxW,IACJ,4BAAIyU,UAGZ,qBAAKnU,UAAWH,KAAYsW,YAA5B,SAEKpT,EAAKT,OACF,sBAAKtC,UAAWH,KAAYuW,eAA5B,UACI,qBAAKpW,UAAWH,KAAYyF,OAA5B,SACI,qBAAKpC,IAAKoC,GAAkB4O,MAEhC,qBAAKlU,UAAWH,KAAYwW,WAA5B,SAAyCnL,OAK7C,cAAC,IAAD,CAASjL,GAAI,SAAb,4B,STtDRyQ,K,oDAAAA,E,iEAAAA,Q,KAOZ,I,SAAMhN,GAAe,CACjBE,GAAI,KACJ0S,MAAO,KACPC,MAAO,KACPjU,QAAQ,EACR4I,SAAU,KACV5F,OAAQ,MUENkR,G,+MAMFC,OAAS,WACL,OACI,cAAC,GAAD,aAAQ/W,MAAO,aACPyU,YAAa,qBACb/S,WAAYsV,GAAatV,WACzB+C,MAAOuS,GAAavS,MACpBhB,KAAMuT,GAAavT,MACf,EAAKpC,S,wDAZzB,YAEI4V,EAD+BlH,KAAK1O,MAA7B4V,4B,GAFkBlW,IAAMoP,WAqC1B+G,GAAkB/T,aART,SAACC,GACnB,MAAO,CACHC,KAAMD,EAAMC,KACZmI,SAAUpI,EAAMC,KAAKmI,SACrB5F,OAAQxC,EAAMC,KAAKuC,UAI6B,CACpDqR,qBVZgC,kBAAgB,SAAC3G,EAAU6G,GAC3D/H,KACKN,MAAK,SAAAE,GACEA,EAAKwB,aAAenG,GAAsBoG,SAC1CH,EAZe,SAAC,GAAD,IAAEpM,EAAF,EAAEA,GAAI0S,EAAN,EAAMA,MAAOC,EAAb,EAAaA,MAAb,MAA2C,CACtEzV,KAAM4P,GAAmBoG,mBACzBvO,QAAS,CAAC3E,KAAI0S,QAAOC,UAUAQ,CAAgBrI,EAAKA,UAEnCF,MAAK,WACJ,IAAM5K,EAAKiT,IAAW9T,KAAKa,GAC3BA,GAAMgL,GAAsBhL,GACvB4K,MAAK,SAAAE,GACF,IAAMxD,EAAWwD,EAAKxD,SAChB5F,EAASoJ,EAAK3D,OAAOC,MAC3BgF,EAhBgB,SAAC9E,EAAkB5F,GAAnB,MAA8C,CAC9ExE,KAAM4P,GAAmBsG,yBACzBzO,QAAS,CAAC2C,WAAU5F,WAcK2R,CAAqB/L,EAAU5F,aUD7BzC,CAEF2T,I,kLCCdU,GA7CoC,SAAC,GAW/C,EATGpW,KASF,IAREqF,EAQH,EARGA,SAAUgR,EAQb,EARaA,gBACVnX,EAOH,EAPGA,UACAsS,GAMH,EAPcpB,cAOd,EANGoB,UACA8E,EAKH,EALGA,QACKtR,GAIR,EAJGQ,IAIH,EAJQR,OAEFsL,GAEN,EAJepL,KAIf,EAJqBC,KAIrB,mBACKoR,EAAepW,IAAOqW,KAAV,4BACZC,EAAgBtW,IAAOuW,MAAV,4BACbC,EAAQxW,IAAOyW,MAAV,sPACEH,EAA+BF,EAChBD,GAAoB,UACxBA,GAAoB,UAEzBG,EAA+BF,EACpBD,GAAoB,WAS5C7F,EAAmB,UAAMD,KAAEqG,SAAR,YAAoB3X,GAAwB,IACrE,OACI,eAACyX,EAAD,CAAOzX,UAAWsR,KAAEoG,MAApB,UACI,cAACH,EAAD,yBACIzW,KAAM,WACNqF,SATa,SAACgB,GACtBhB,GAAYA,EAASgB,GACrBgQ,GAAmBA,EAAgBhQ,EAAEwK,cAAciG,UAQ3C5X,UAAWuR,GACPH,GACAtL,IAER,cAACuR,EAAD,CAAcrX,UAAWsR,KAAEuG,WAC1BvF,GAAY,sBAAMtS,UAAWsR,KAAEJ,cAAnB,SAAmCoB,QC1CrD,SAASwF,KAKZ,OACI,sBAAK9X,UAAWH,KAAYkY,iBAA5B,UACI,qBAAK/X,UAAWH,KAAYH,MAA5B,mBACA,cAAC,KAAD,CACI+G,cAAe,CAAC6P,MAAO,GAAI0B,SAAU,GAAIC,YAAY,GACrDtR,SATa,SAACC,EAAD,GAAuG,IAAxEC,EAAuE,EAAvEA,cACpDqR,QAAQC,IAAIvR,GACZC,GAAc,IAKV,SAGK,gBAAEG,EAAF,EAAEA,aAAF,OACG,eAAC,KAAD,CAAMhH,UAAWH,KAAY6J,YAA7B,UACI,qBAAK1J,UAAWH,KAAYuY,YAA5B,SACI,cAAC,KAAD,CAAOtX,KAAK,QACLH,KAAK,QACL8G,UAAWqJ,GACXlL,YAAa,YAGxB,qBAAK5F,UAAWH,KAAYuY,YAA5B,SACI,cAAC,KAAD,CAAOtX,KAAK,WACLH,KAAK,WACL8G,UAAWqJ,GACXlL,YAAa,eAExB,qBAAK5F,UAAS,UAAKH,KAAYuY,YAAjB,YAAgCvY,KAAYwY,WAA1D,SACI,cAAC,KAAD,CAAOvX,KAAK,WACLH,KAAK,aACL8G,UAAW6Q,OAEtB,qBAAKtY,UAAWH,KAAYuY,YAA5B,SACI,cAAC5X,EAAD,CAAQG,KAAM,QACNE,SAAUmG,eAS9C,IAAMsR,GAAgB,SAACvX,GACnB,OACI,cAAC,GAAD,2BAAcA,GAAd,IAAqB6C,GAAI,cACfwT,QAAS,UADnB,SAEK,kBCtDN,SAASmB,GAAMxX,GAElB,OACI,qBAAKf,UAAWH,KAAY2Y,aAA5B,SACI,cAACV,GAAD,MCeL,IAAMW,GACA,aADAA,GAEA,aAFAA,GAGF,SAHEA,GAIH,QAJGA,GAKF,SALEA,GAMC,YANDA,GAOF,SAGE/B,GAAe,CACxBtV,WAAY,UACZ+C,MAAO,UACPhB,KAAMA,GAyBKuV,OAtBf,WAEI,OACQ,sBAAK1Y,UAAU,cAAf,UACI,cAAC4W,GAAD,IACA,cAAChU,EAAD,IACA,qBAAK5C,UAAU,sBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOP,KAAK,IAAIkZ,QAAS,cAAC,IAAD,CAAU1Y,GAAIwY,OACvC,cAAC,IAAD,CAAOhZ,KAAMgZ,GAAcE,QAAS,cAACjD,GAAD,MACpC,cAAC,IAAD,CAAOjW,KAAMgZ,GAAcE,QAAS,cAACtQ,GAAD,MACpC,cAAC,IAAD,CAAO5I,KAAMgZ,GAAYE,QAAS,cAACtV,EAAD,MAClC,cAAC,IAAD,CAAO5D,KAAMgZ,GAAWE,QAAS,cAACrV,EAAD,MACjC,cAAC,IAAD,CAAO7D,KAAMgZ,GAAYE,QAAS,cAAC7I,GAAD,MAClC,cAAC,IAAD,CAAOrQ,KAAMgZ,GAAeE,QAAS,cAAClV,EAAD,MACrC,cAAC,IAAD,CAAOhE,KAAMgZ,GAAYE,QAAS,cAACJ,GAAD,e,SC/C7CK,GAAcC,aAAgB,CACnC/D,YlBmFsB,WAAwG,IAAvGhS,EAAsG,uDAArEY,GAAcoV,EAAuD,uCACjI,OAAQA,EAAOhY,MACX,KAAKiO,GAAsBgG,SACvB,IAAMgE,EAAU,CACZnV,GAAId,EAAMuH,UAAU2O,OAAS,EAC7BrY,KAAM,UACNqD,QAAS8U,EAAOvQ,QAAQkB,YACxBhB,MAAO,CACHpI,KAAM,SACNiJ,UAAW,GAEfZ,QAAQ,EACR7E,MAAO,MAEX,OAAO,2BAAIf,GAAX,IAAkBuH,UAAU,CAAE0O,GAAH,mBAAejW,EAAMuH,cACpD,KAAK0E,GAAsB4G,YAC3B,KAAK5G,GAAsB8B,WACvB,OAAO,2BAAI/N,GAAUgW,EAAOvQ,SAChC,KAAKwG,GAAsBiG,YACvB,OAAO,YAAC,eACAlS,GADR,IACeuH,UAAWvH,EAAMuH,UAAU9H,QAAO,SAAA0W,GAAC,OAAIA,EAAErV,KAAOkV,EAAOvQ,QAAQ3E,QAElF,KAAKmL,GAAsBkG,UACvB,OAAO,YAAC,eAEGnS,GAFX,IAEkBuH,UAAWvH,EAAMuH,UAAU5H,KAAI,SAAAwW,GAAC,OAAIA,EAAErV,KAAOkV,EAAOvQ,QAAQ3E,GAAxB,2BAEnCqV,GAFmC,IAEhCvQ,QAASuQ,EAAEvQ,OAAQD,MAAM,2BACvBwQ,EAAExQ,OADoB,IACba,UAAW2P,EAAEvQ,OAASuQ,EAAExQ,MAAMa,UAAY,EAAI2P,EAAExQ,MAAMa,UAAY,MACnF2P,OAGpB,QACI,OAAOnW,IkBnHXoF,YnCoFsB,WAAwG,IAAvGpF,EAAsG,uDAArEY,EAAcoV,EAAuD,uCACjI,GACS,+BADDA,EAAOhY,KACX,CACI,IAAMoY,EAA0B,CAC5BtV,GAAId,EAAMgB,aAAakV,OAAS,EAChCjV,OAAQ,MACRpD,KAAM,KACNqD,QAAS8U,EAAOvQ,QAAQ7B,eACxB7C,MAAO,KACPI,MAAM,IAAIkV,MAAOC,qBAAqBC,MAAM,EAAG,IAEnD,OAAO,2BAAIvW,GAAX,IAAkBgB,aAAa,GAAD,mBAAMhB,EAAMgB,cAAZ,CAA0BoV,MAExD,OAAOpW,GmChGXiN,UnByCoB,WAAkG,IAAjGjN,EAAgG,uDAAjEY,GAAcoV,EAAmD,uCACzH,OAAQA,EAAOhY,MACX,KAAKiN,GAAoBkB,UACrB,OAAO,2BACAnM,GADP,IACc/C,MAAO+Y,EAAOvQ,QAAQxI,QAExC,KAAKgO,GAAoBqC,OACrB,OAAO,2BACAtN,GADP,IAEI/C,MAAO+C,EAAM/C,MAAM0C,KAAI,SAAAmL,GAAI,OAAIA,EAAKhK,KAAOkV,EAAOvQ,QAAQ0H,OAA3B,2BAAwCrC,GAAxC,IAA8CxC,UAAU,IAAQwC,OAEvG,KAAKG,GAAoBsC,SACrB,OAAO,2BACAvN,GADP,IAEI/C,MAAO+C,EAAM/C,MAAM0C,KAAI,SAAAmL,GAAI,OAAIA,EAAKhK,KAAOkV,EAAOvQ,QAAQ0H,OAA3B,2BAAwCrC,GAAxC,IAA8CxC,UAAU,IAASwC,OAExG,KAAKG,GAAoB0C,iBACzB,KAAK1C,GAAoByC,sBACzB,KAAKzC,GAAoBoB,sBACrB,OAAO,2BACArM,GAAUgW,EAAOvQ,SAE5B,KAAKwF,GAAoBsB,4BACrB,OAAO,2BACAvM,GADP,IACc8H,0BAA2BkO,EAAOvQ,QAAQ6G,mBAAf,sBAC7BtM,EAAM8H,2BADuB,CACIkO,EAAOvQ,QAAQxE,SACpDjB,EAAM8H,0BAA0BrI,QAAO,SAAAqB,GAAE,OAAIA,IAAOkV,EAAOvQ,QAAQxE,YAE/E,QACI,OAAOjB,ImBrEXC,KfSmB,WAAyE,IAAxED,EAAuE,uDAAzCY,GAAcoV,EAA2B,uCAC/F,OAAQA,EAAOhY,MACX,KAAK4P,GAAmBoG,mBACxB,KAAKpG,GAAmBsG,yBACpB,OAAO,2BACAlU,GADP,IACcR,QAAQ,GAASwW,EAAOvQ,SAE1C,QACI,OAAOzF,MePNwW,GAAQC,aAAYX,GAAaY,aAAgBC,OAU9DC,OAAOJ,MAAQA,GCvBfK,IAASlD,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAU6C,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRM,SAASC,eAAe,U,mBCd5Bva,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,iBAAmB,kCAAkC,aAAe,8BAA8B,eAAiB,gCAAgC,KAAO,sBAAsB,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,0B,mBCA5TD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,KAAO,qBAAqB,OAAS,uBAAuB,MAAQ,sBAAsB,YAAc,8B,mBCAhLD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,mBAAqB,mCAAmC,UAAY,0BAA0B,kBAAoB,kCAAkC,KAAO,qBAAqB,YAAc,4BAA4B,eAAiB,+BAA+B,WAAa,2BAA2B,aAAe,6BAA6B,OAAS,yB,mBCAzZD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,YAAc,+BAA+B,eAAiB,kCAAkC,UAAY,6BAA6B,SAAW,4BAA4B,aAAe,gCAAgC,UAAY,+B,mBCAtSD,EAAOC,QAAU,CAAC,oBAAsB,0CAA0C,aAAe,mCAAmC,YAAc,kCAAkC,SAAW,+BAA+B,aAAe,mCAAmC,QAAU,8BAA8B,MAAQ,4BAA4B,YAAc,kCAAkC,KAAO,2BAA2B,WAAa,mC,mBCA3bD,EAAOC,QAAU,CAAC,iBAAmB,oCAAoC,MAAQ,yBAAyB,YAAc,+BAA+B,YAAc,+BAA+B,UAAY,+B,mBCAhND,EAAOC,QAAU,CAAC,aAAe,gCAAgC,WAAa,8BAA8B,WAAa,8BAA8B,UAAY,6BAA6B,MAAQ,2B,mBCAxMD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,cAAgB,+BAA+B,cAAgB,+BAA+B,SAAW,0BAA0B,WAAa,8B,mBCAxOD,EAAOC,QAAU,CAAC,YAAc,0BAA0B,OAAS,qBAAqB,OAAS,qBAAqB,SAAW,uBAAuB,SAAW,yB,mBCAnKD,EAAOC,QAAU,CAAC,YAAc,0BAA0B,SAAW,uBAAuB,aAAe,2BAA2B,WAAa,yBAAyB,WAAa,2B,mBCAzLD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,SAAW,6B,mBCAnGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,cAAgB,8BAA8B,aAAe,+B,mBCA/GD,EAAOC,QAAU,CAAC,aAAe,qCAAqC,oBAAsB,4CAA4C,YAAc,sC,mBCAtJD,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,UAAY,iC,mBCAjFD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,aAAe,4BAA4B,YAAc,2BAA2B,aAAe,8B,mBCA5JD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,UAAY,6B,mBCAhHD,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,cAAgB,iCAAiC,gBAAgB,mC,mBCAtID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,gBAAgB,gC,mBCAlED,EAAOC,QAAU,CAAC,UAAY,uC,mBCA9BD,EAAOC,QAAU,CAAC,SAAW,6B,6DCA7BD,EAAOC,QAAU,CAAC,aAAe,8B","file":"static/js/main.12f963e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__7ylqO\",\"avatarAndFullName\":\"ProfileInfo_avatarAndFullName__5j74l\",\"image\":\"ProfileInfo_image__19lBH\",\"fullName\":\"ProfileInfo_fullName__15UDG\",\"top_wallpaper\":\"ProfileInfo_top_wallpaper__1_yd0\",\"description\":\"ProfileInfo_description__3f-6U\",\"aboutMe\":\"ProfileInfo_aboutMe__AeW_S\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__h-vFk\",\"statusJob\":\"ProfileInfo_statusJob__2KhXS\",\"heading\":\"ProfileInfo_heading__1KCBL\",\"iconYes\":\"ProfileInfo_iconYes__3682c\",\"iconNot\":\"ProfileInfo_iconNot__1bYWv\",\"descriptionJob\":\"ProfileInfo_descriptionJob__omSRg\"};","import styleModule from \"../Navbar.module.css\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {NavLinkItem} from \"../Navbar\";\r\n\r\nexport const CustomNavLink = ({path, title, iconTitle}: NavLinkItem) => {\r\n    const resultClassName = title === 'Users' ?\r\n        `${styleModule.item} ${styleModule.users}` :\r\n        styleModule.item\r\n    return (\r\n        <div className={resultClassName}>\r\n            <NavLink to={path}\r\n                     className={nav => nav.isActive ? styleModule.active : ''}>\r\n                <FontAwesomeIcon icon={JSON.parse(iconTitle)} className={styleModule.icon}/>{title}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport style from './Button.module.css'\r\nimport styled from \"styled-components\";\r\n\r\ntype ButtonPropsType = {\r\n    name: string\r\n    onClick?: () => void\r\n    backgroundHover?: string\r\n    background?: string\r\n    colorHover?: string\r\n    disabled?: boolean\r\n    type?: \"button\" | \"submit\" | \"reset\" | undefined\r\n}\r\n\r\n\r\nexport const Button = React.memo(({\r\n                                      name,\r\n                                      onClick,\r\n                                      disabled,\r\n                                      type, ...props\r\n                                  }: ButtonPropsType) => {\r\n    const ButtonWithBefore = styled.button`\r\n& {\r\nborder-color: ${props.backgroundHover ? props.backgroundHover : '#ffbf47'};\r\ncolor: ${props.backgroundHover ? props.backgroundHover : '#ffbf47'};\r\nbackground-color:${props.background ? props.background : '#ffe1a9'}\r\n}\r\n&:before {\r\nbackground: ${props.backgroundHover ? props.backgroundHover : '#ffbf47'};\r\n}\r\n&:hover {\r\ncolor: ${props.colorHover ? props.colorHover : '#ffffff'}\r\n}\r\n`;\r\n\r\n    const onClickButton = () => {\r\n        onClick && onClick()\r\n    };\r\n\r\n    return (\r\n        <ButtonWithBefore onClick={onClickButton}\r\n                          className={style.button}\r\n                          disabled={disabled}\r\n                          type={type}>\r\n            {name}\r\n        </ButtonWithBefore>\r\n    )\r\n})","import React, {useState} from \"react\";\nimport './Navbar.module.css';\nimport styleModule from './Navbar.module.css';\nimport {\n    faCommentDots,\n    faHeadphonesAlt,\n    faNewspaper,\n    faSlidersH,\n    faUserAlt,\n    faUsers\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {CustomNavLink} from \"./NavLink/CustomNavLink\";\nimport {Button} from \"../generic/Button/Button\";\nimport {Navigate,useNavigate} from 'react-router-dom';\n\n\nexport type NavLinkItem = {\n    title: string\n    path: string\n    iconTitle: string\n    withAuthRedirect: boolean\n}\n\n\nexport const NavbarContainer = React.memo((props: MapStateToPropsType) => {\n    const navigate = useNavigate()\n\n    const navLinksArr: NavLinkItem[] = [\n        {title: 'Profile', path: '/profile', iconTitle: JSON.stringify(faUserAlt), withAuthRedirect: true,},\n        {title: 'Messages', path: '/dialogs', iconTitle: JSON.stringify(faCommentDots), withAuthRedirect: true,},\n        {title: 'News', path: '/news', iconTitle: JSON.stringify(faNewspaper), withAuthRedirect: false,},\n        {title: 'Music', path: '/music', iconTitle: JSON.stringify(faHeadphonesAlt), withAuthRedirect: false,},\n        {title: 'Users', path: '/users', iconTitle: JSON.stringify(faUsers), withAuthRedirect: false,},\n        {title: 'Settings', path: '/settings', iconTitle: JSON.stringify(faSlidersH), withAuthRedirect: true,},\n    ]\n    const [navLinks, setNavLinks] = useState<NavLinkItem[]>(navLinksArr)\n\n    let resultNavLinks = navLinks\n    if (!props.isAuth) {\n        resultNavLinks = navLinks.filter(nav => !nav.withAuthRedirect)\n    }\n\n    const customNavLinks = resultNavLinks.map(navLink => {\n            return (\n                <CustomNavLink key={navLink.title} {...navLink}/>\n            )\n\n    })\n    return (\n        <>\n            <nav className={styleModule.nav}>\n                {customNavLinks}\n                {!props.isAuth && <div className={styleModule.buttonBlock}>\n                    <Button name={'Login'} onClick={()=>navigate('/login')}/>\n                </div>}\n            </nav>\n\n        </>\n    )\n})\n\nconst mapStateToProps = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth\n})\ntype MapStateToPropsType = {\n    isAuth: boolean\n}\n\nexport const Navbar = connect(mapStateToProps)(NavbarContainer)\n","export default __webpack_public_path__ + \"static/media/underConstruction.9d99f69c.png\";","import logo from './../../../underConstruction.png'\r\nimport styleModule from './UnderConstruction.module.css'\r\nexport const UnderConstruction = () => {\r\n    return (\r\n        <div className={styleModule.container}>\r\n            <img src={logo} alt=\"Under Construction\"/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport styleModule from './Music.module.css';\nimport {UnderConstruction} from \"../generic/UnderConstruction/UnderConstruction\";\n\n\nexport function Music(props:any) {\n    return (\n        <div>\n           <UnderConstruction/>\n        </div>\n    );\n}\n\n\n\n","import React from \"react\";\nimport styleModule from './News.module.css';\nimport {UnderConstruction} from \"../generic/UnderConstruction/UnderConstruction\";\n\n\nexport function News(props:any) {\n    return (\n        <div>\n            <UnderConstruction/>\n        </div>\n    );\n}\n\n","import React from 'react';\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom'\r\n\r\n\r\nconst mapStateToPropsAuth = (state:AppStateType):WithAuthRedirectComponentType => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\ntype WithAuthRedirectComponentType = {\r\n    isAuth:boolean\r\n}\r\n\r\nexport const withAuthRedirect = (WrappedComponent: typeof React.Component | React.FC) => {\r\n\r\n    const WithAuthRedirectComponent = (props:WithAuthRedirectComponentType) => {\r\n        if(!props.isAuth) {\r\n            return <Navigate to={'/login'}/>\r\n        }\r\n        return (\r\n            <WrappedComponent {...props}/>\r\n        )\r\n    }\r\n    return connect(mapStateToPropsAuth)(WithAuthRedirectComponent)\r\n}","import React from \"react\";\nimport styleModule from './Settings.module.css';\nimport {UnderConstruction} from \"../generic/UnderConstruction/UnderConstruction\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\nfunction Settings(props:any) {\n       return (\n        <div>\n            <UnderConstruction/>\n        </div>\n    );\n}\n\nexport const SettingsContainer = withAuthRedirect(Settings)\n\n","export default __webpack_public_path__ + \"static/media/main-logo.8de3ea88.png\";","export type DialogType = {\r\n    id: number\r\n    /**\r\n     * Name of contact/friend\r\n     */\r\n    name: string\r\n    /**\r\n     * Image of contact/friend\r\n     */\r\n    image: string | null\r\n    /**\r\n     * Optional background color of component\r\n     */\r\n    background?: string\r\n    /**\r\n     * Optional color text of component\r\n     */\r\n    color?: string\r\n};\r\nexport type MessageType = {\r\n    id: number\r\n    userId: number\r\n    name: string\r\n    message: string\r\n    image: string | null\r\n    time: string\r\n};\r\nexport type InitialStateDialogsType = typeof initialState\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album'\r\n        },\r\n        {id: 2, name: 'Dmitry', image: null},\r\n        {\r\n            id: 3,\r\n            name: 'Aleksey',\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album'\r\n        },\r\n        {id: 4, name: 'Ivan', image: null},\r\n        {id: 5, name: 'Mother', image: null}\r\n    ] as Array<DialogType>,\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            userId: 1,\r\n            name: 'Ruslan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. In, rem!',\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album',\r\n            time: '12:03'\r\n        },\r\n\r\n        {id: 2, userId: 20392, name: 'Me', message: 'Lorem ipsum dolor !', image: null, time: '12:10'},\r\n        {id: 3, name: 'Dmitry', userId: 2, message: 'Lorem ipsum dolor sit amet', image: null, time: '13:01'},\r\n        {\r\n            id: 4,\r\n            name: 'Ivan',\r\n            userId: 3,\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album',\r\n            time: '13:08'\r\n        },\r\n        {\r\n            id: 5,\r\n            userId: 20392,\r\n            name: 'Me',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',\r\n            image: null,\r\n            time: '13:49'\r\n        },\r\n        {id: 6, name: 'Mother', userId: 4, message: 'Lorem ipsum dolor !', image: null, time: '14:05'},\r\n        {id: 7, name: 'Me', message: 'Lorem ipsum dolor', image: null, time: '14:08'},\r\n        {\r\n            id: 8,\r\n            name: 'Me',\r\n            userId: 20392,\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit dolor sit amet, consectetur.',\r\n            image: null,\r\n            time: '14:10'\r\n        },\r\n        {\r\n            id: 9,\r\n            name: 'Mother',\r\n            userId: 5,\r\n            message: 'Lorem  consectetur adipisicin ipsum dolor !',\r\n            image: null,\r\n            time: '14:23'\r\n        },\r\n    ] as Array<MessageType>,\r\n};\r\n\r\nexport const dialogsReducer = (state: InitialStateDialogsType = initialState, action: DialogsActionType): InitialStateDialogsType => {\r\n    switch (action.type) {\r\n        case \"social/dialogs/ADD-MESSAGE\":\r\n            const newMessage: MessageType = {\r\n                id: state.messagesData.length + 1,\r\n                userId: 20392,\r\n                name: 'Me',\r\n                message: action.payload.newMessageText,\r\n                image: null,\r\n                time: new Date().toLocaleTimeString().slice(0, 5)\r\n            };\r\n            return {...state, messagesData: [...state.messagesData, newMessage]}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport type DialogsActionType =\r\n    ReturnType<typeof addMessage>\r\n\r\nexport const addMessage = (newMessageText: string) => ({\r\n    type: 'social/dialogs/ADD-MESSAGE',\r\n    payload: {newMessageText}\r\n} as const);","export default __webpack_public_path__ + \"static/media/user.cb380ae4.png\";","import React from \"react\";\nimport styleModule from './Dialog.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport userLogo from '../../../usersAvatars/user.png'\nimport {DialogType} from \"../../../redux/redusers/dialogsReducer/dialogsReducer\";\nimport styled from \"styled-components\";\n\nexport type DialogPropsType = DialogType\n\nexport const Dialog = React.memo(({\n                           id,\n                           name,\n                           image,\n                           background,\n                           color, ...props\n                       }: DialogPropsType) => {\n    const DialogWrapper = styled.div`\n    & {\n    background: ${background ? background : '#FF6347'};\n    }\n    & a {\n    color: ${color ? color : '#ffffff'};\n    }\n    \n    `;\n    const ContactAvatar = styled.div`\n    & img {\n    border: 1px solid ${color ? color : '#ffffff'};\n    }\n    `\n    return (\n        <DialogWrapper className={styleModule.dialog}>\n            <ContactAvatar className={styleModule.contactAvatar}>\n                <img src={image ? image : userLogo} alt={'message avatar'}/>\n            </ContactAvatar>\n            <NavLink className={dialog => dialog.isActive ? styleModule.dialogActive : ''} to={`/dialogs/${id}`}>{name}</NavLink>\n        </DialogWrapper>\n    )\n})\n\n","import React, {useEffect} from \"react\";\nimport styleModule from './Message.module.css';\nimport messageAva from '../../../usersAvatars/user.png'\nimport styled from \"styled-components\";\n\nexport type MessagePropsType = {\n    id: number,\n    /**\n     * Name of the interlocutor\n     */\n    userId: number\n    name: string,\n    /**\n     * Text of message\n     */\n    message: string,\n    /**\n     * Image of the interlocutor\n     */\n    image: string | null,\n    /**\n     * Time of sending message\n     */\n    time: string\n    background: string\n    color: string\n    meBackground: string\n    meColor: string\n}\n\nexport const Message = React.memo(({\n                                       id,\n                                       userId,\n                                       name,\n                                       message,\n                                       image,\n                                       time,\n                                       color,\n                                       background,\n                                       meBackground,\n                                       meColor,\n                                       ...props\n                                   }: MessagePropsType) => {\n    const MessageBlock = styled.div`\n    & {\n    background: ${userId === 20392 ? meBackground : background};\n    color: ${userId === 20392 ? meColor : color}\n    }\n    &:before {\n    background: radial-gradient(circle at top left, transparent 50%, ${userId === 20392 ? meBackground : background} 50%);\n    }\n    `;\n    const Avatar = styled.div`\n    & {\n    border-color: ${background}\n    }\n    `;\n\n    // if the message is mine, then one style, if not, then another\n    const messageWrapperStyle = userId === 20392 ?\n        `${styleModule.messageWrapper} ${styleModule.meMessageWrapper}` :\n        styleModule.messageWrapper\n    const messageBlockStyle = userId === 20392\n        ?\n        `${styleModule.messageBlock} ${styleModule.meMessageBlock}` :\n        styleModule.messageBlock\n    return (\n        <div className={messageWrapperStyle}>\n            <MessageBlock className={messageBlockStyle}>\n                <div className={styleModule.name}>\n                    {name}\n                </div>\n                <div className={styleModule.message}>\n                    {message}\n                </div>\n                <div className={styleModule.time}>\n                    {time}\n                </div>\n            </MessageBlock>\n            <Avatar className={styleModule.avatar}>\n                <img src={image ? image : messageAva}/>\n            </Avatar>\n\n        </div>\n    )\n})\n\n","import React, {ChangeEvent, KeyboardEvent, LegacyRef} from \"react\";\r\nimport style from './Textarea.module.css'\r\n\r\ntype TextareaPropsType = {\r\n    textareaValue?: string\r\n    setTextareaValue?: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n    onAddWithEnter?: (e: KeyboardEvent<HTMLTextAreaElement>) => void\r\n    reference?: LegacyRef<HTMLTextAreaElement>\r\n    placeholder?: string\r\n    background: string\r\n    color: string\r\n    field?: any\r\n    form?: any\r\n    meta?: any\r\n}\r\n\r\nexport const Textarea = React.memo(({\r\n                                        textareaValue,\r\n                                        setTextareaValue,\r\n                                        reference,\r\n                                        placeholder,\r\n                                        onAddWithEnter,\r\n                                        background,\r\n                                        color,\r\n                                        field,\r\n                                        form,\r\n                                        meta,\r\n                                        ...restProps\r\n                                    }: TextareaPropsType) => {\r\n    const styles = {\r\n        background: background,\r\n        color: color\r\n    };\r\n    return (\r\n        <textarea placeholder={placeholder}\r\n                  className={style.textarea}\r\n                  onChange={setTextareaValue}\r\n                  onKeyPress={onAddWithEnter}\r\n                  value={textareaValue}\r\n                  ref={reference}\r\n                  style={styles}\r\n                  {...field}\r\n        />\r\n    )\r\n})","import React, {FormEvent, KeyboardEvent} from \"react\";\nimport styleModule from './AddMessageForm.module.css';\nimport {Button} from \"../../generic/Button/Button\";\nimport {Field, Form, Formik, FormikState} from \"formik\";\nimport {Textarea} from '../../generic/Textarea/Textarea';\n\ntype AddPostFormValuesType = {\n    newMessageText: string\n}\n\ntype AddMessageFormPropsType = {\n    addMessage: (newMessageText: string) => void\n}\n\ntype OnSubmitParamsType = {\n    setSubmitting: (isSubmitting: boolean) => void\n    resetForm: (nextState?: Partial<FormikState<{ newMessageText: string; }>> | undefined) => void\n}\n\nexport function AddMessageForm({addMessage}: AddMessageFormPropsType) {\n\n    const onSubmitHandler = (values: AddPostFormValuesType, {setSubmitting, resetForm}: OnSubmitParamsType) => {\n        values.newMessageText.trim() && addMessage(values.newMessageText);\n        setSubmitting(false)\n        resetForm()\n    }\n    const onAddMessageWithEnter = (e: KeyboardEvent<HTMLFormElement>,\n                                   handleSubmit: (e?: FormEvent<HTMLFormElement> | undefined) => void) => {\n        if (!e.shiftKey && e.key === 'Enter') {\n            e.preventDefault();\n            handleSubmit()\n        }\n    };\n\n    return (\n        <Formik\n            initialValues={{newMessageText: '',}}\n            onSubmit={onSubmitHandler}>\n            {({isSubmitting, handleSubmit}) => (\n                <Form className={styleModule.writeAndSendMessage}\n                      onSubmit={handleSubmit}\n                      onKeyPress={(e) => onAddMessageWithEnter(e, handleSubmit)}>\n                    <div className={styleModule.writeMessage}>\n                        <Field name=\"newMessageText\" component={TextAreaField}/>\n                    </div>\n                    <div className={styleModule.sendMessage}>\n                        <Button name={'Send'}\n                                type={'submit'}\n                                disabled={isSubmitting}/>\n                    </div>\n                </Form>\n\n\n            )}\n        </Formik>\n    );\n}\n\n\nconst TextAreaField = (props: any) => {\n    return (\n        <Textarea {...props}\n                  placeholder={'Enter your message'}\n                  background={'#ffffff'}\n                  color={'#60575A'}/>\n    )\n}\n\n\n\n\n\n","import React from \"react\";\nimport {Dialog} from \"./Dialog/Dialog\";\nimport {Message} from \"./Mesage/Message\";\nimport styleModule from './Dialogs.module.css';\nimport {DialogsPropsType} from \"./DialogsContainer\";\nimport {AddMessageForm} from '../forms/AddMessageForm/AddMessageForm';\n\n\nconst MESSAGE_STYLE = {\n    background: '#e8e8e8',\n    color: '#757575',\n    meBackground: '#FFE1A9',\n    meColor: '#757575',\n};\nconst DIALOG_STYLE = {\n    background: 'inherit',\n    color: '#ffffff'\n};\n\nexport const Dialogs = React.memo((props: DialogsPropsType) => {\n    return (\n        <div className={styleModule.dialogs}>\n            <div className={styleModule.heading}>\n                DIALOGS\n            </div>\n            <div className={styleModule.dialogs_items}>\n                {props.dialogsPage.dialogsData.map(dialog => <Dialog key={dialog.id}\n                                                                     background={DIALOG_STYLE.background}\n                                                                     color={DIALOG_STYLE.color}\n                                                                     {...dialog}/>)}\n            </div>\n            <div className={styleModule.messagesBlock}>\n                <div className={styleModule.messages}>\n                    {props.dialogsPage.messagesData.map(message => <Message key={message.id}\n                                                                            background={MESSAGE_STYLE.background}\n                                                                            color={MESSAGE_STYLE.color}\n                                                                            meBackground={MESSAGE_STYLE.meBackground}\n                                                                            meColor={MESSAGE_STYLE.meColor}\n                                                                            {...message}/>)}\n                </div>\n                <AddMessageForm addMessage={props.addMessage}/>\n            </div>\n        </div>\n    );\n})\n\n","import React, {ComponentType} from \"react\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {addMessage, InitialStateDialogsType,} from \"../../redux/redusers/dialogsReducer/dialogsReducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\nexport type MapStateToPropsType = {\n    dialogsPage: InitialStateDialogsType\n    isAuth: boolean\n}\n\nexport type MapDispatchToPropsType = {\n    addMessage: (newMessageText: string) => void\n}\n\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const DialogsContainer = compose<ComponentType>(\n    withAuthRedirect,\n    connect(mapStateToProps, {addMessage} as MapDispatchToPropsType),\n)(Dialogs)\n\n\n","import React from \"react\";\nimport styleModule from './Post.module.css'\nimport ava_post from '../../../../usersAvatars/user.png'\nimport {PostType} from \"../../../../redux/redusers/profileReducer/profileReducer\";\nimport styled from \"styled-components\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\n\ntype PostPropsType = PostType &\n    {\n        removePost: (id: number) => void\n        likePost: (id: number) => void\n    };\n\nexport const Post = React.memo(({\n                                    id,\n                                    name,\n                                    message,\n                                    likes,\n                                    isLike,\n                                    image,\n                                    background,\n                                    color,\n                                    removePost,\n                                    likePost,\n                                    ...props\n                                }: PostPropsType) => {\n    const PostWrapper = styled.div`\n     & {\n        background: ${background ? background : '#FF6347'};\n        color:  ${color ? color : '#ffffff'};\n    }\n    `;\n    const LikesDiv = styled.div`\n    color: ${isLike ? '#FFCC03' : '#ffffff'};\n    fontWeight:${isLike ? 'bold' : 'normal'};\n    `\n\n    const onCrossClick = (id: number) => {\n        removePost(id);\n    };\n    const onLikeClick = (id: number) => {\n        likePost(id)\n    }\n\n    return (\n        <PostWrapper className={styleModule.postWrapper}>\n            <div className={styleModule.avaBlock}>\n                <img src={image ? image : ava_post} alt=\"ava_post\"/>\n                <span>{name}</span>\n                <FontAwesomeIcon icon={faTimes} className={styleModule.removePost} onClick={() => onCrossClick(id)}/>\n            </div>\n            <div className={styleModule.messageBlock}>\n                {message}\n            </div>\n            <LikesDiv>\n                <span onClick={() => onLikeClick(id)}\n                      className={styleModule.likesBlock}>\n                    {`${likes.icon} ${likes.likeCount}`}\n                </span>\n            </LikesDiv>\n        </PostWrapper>\n\n    );\n});\n\n","import React, {FormEvent, KeyboardEvent} from \"react\";\nimport styleModule from './AddPostForm.module.css';\nimport {Button} from \"../../generic/Button/Button\";\nimport {Field, Form, Formik, FormikState} from \"formik\";\nimport {Textarea} from '../../generic/Textarea/Textarea';\n\ntype AddPostFormValuesType = {\n    newPostText: string\n}\n\ntype AddPostFormPropsType = {\n    addPost: (newPostText: string) => void\n}\n\ntype OnSubmitParamsType = {\n    setSubmitting: (isSubmitting: boolean) => void\n    resetForm: (nextState?: Partial<FormikState<{ newPostText: string; }>> | undefined) => void\n}\n\nexport function AddPostForm({addPost}: AddPostFormPropsType) {\n\n    const onSubmitHandler = (values: AddPostFormValuesType, {setSubmitting, resetForm}: OnSubmitParamsType) => {\n        values.newPostText.trim() && addPost(values.newPostText);\n        setSubmitting(false)\n        resetForm()\n    }\n    const onAddPostWithEnter = (e: KeyboardEvent<HTMLFormElement>,\n                                handleSubmit: (e?: FormEvent<HTMLFormElement> | undefined) => void) => {\n        if (!e.shiftKey && e.key === 'Enter') {\n            e.preventDefault();\n            handleSubmit()\n        }\n    };\n\n    return (\n        <Formik\n            initialValues={{newPostText: '',}}\n            onSubmit={onSubmitHandler}\n        >\n            {({isSubmitting, handleSubmit}) => (\n                <Form className={styleModule.formWrapper}\n                      onSubmit={handleSubmit}\n                      onKeyPress={(e) => onAddPostWithEnter(e, handleSubmit)}>\n                    <div className={styleModule.writePost}>\n                        <Field name=\"newPostText\" component={TextAreaField}/>\n                    </div>\n                    <div className={styleModule.addPostButton}>\n                        <Button type={'submit'}\n                                name={'Add post'}\n                                disabled={isSubmitting}/>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    );\n}\n\n\nconst TextAreaField = (props: any) => {\n    return (\n        <Textarea {...props}\n                  placeholder={'Here you can leave your post'}\n                  background={'#ffffff'}\n                  color={'#60575A'}/>\n    )\n}\n\n\n\n","import axios from 'axios'\r\nimport {UserType} from \"../redux/redusers/usersReducer/usersReducer\";\r\nimport {ProfileType} from \"../redux/redusers/profileReducer/profileReducer\";\r\n\r\n//types------------------------------------------types\r\n//↓\r\n//USERS---\r\ntype GetUsersDataType = {\r\n    error: string | null\r\n    items: Array<UserType>\r\n    totalCount: number\r\n}\r\nexport type PostFollowDataType = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    data: object\r\n    fieldsErrors: Array<any>\r\n}\r\nexport type DeleteFollowDataType = PostFollowDataType\r\nexport enum FOLLOW_UNFOLLOW_RESULT_CODES {\r\n    success = 0,\r\n    error = 1,\r\n}\r\n\r\n//PROFILE---\r\ntype GetProfileDataType = ProfileType\r\ntype UpdateStatusDataType = {\r\n    data: {}\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    resultCode: number\r\n}\r\n\r\n//AUTH---\r\nexport type AuthUserDataType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n}\r\nexport type GetAuthUserDataType = {\r\n    data: AuthUserDataType\r\n    fieldsErrors: Array<any>\r\n    messages: Array<string>\r\n    resultCode: number\r\n}\r\nexport enum RESPONSE_RESULT_CODES {\r\n    success = 0,\r\n    error = 1,\r\n}\r\n\r\n//↑\r\n//types------------------------------------------types\r\n\r\nconst instance_1 = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"10732160-f45a-4879-8e6f-b2819bc13c24\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(pageSize: number, currentPage: number) {\r\n        return instance_1.get<GetUsersDataType>(`users?count=${pageSize}&page=${currentPage}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    becomeFollower(userId: number) {\r\n        return instance_1.post<PostFollowDataType>(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    stopBeingFollower(userId: number) {\r\n        return instance_1.delete<DeleteFollowDataType>(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string | number) {\r\n        return instance_1.get<GetProfileDataType>(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getStatus(userId:number) {\r\n        return instance_1.get<string>(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status:string) {\r\n        return instance_1.put<UpdateStatusDataType>(`/profile/status`, {status})\r\n            .then(response => {\r\n                return response\r\n            })\r\n    }\r\n}\r\n\r\nexport let authMeAPI = {\r\n    getAuthorizationInfo() {\r\n        return instance_1.get<GetAuthUserDataType>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n}\r\n","import React from \"react\";\nimport styleModule from './MyPosts.module.css'\nimport {Post} from \"./Posts/Post\";\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\nimport {AddPostForm} from '../../forms/AddPostForm/AddPostForm';\n\n\nexport const BUTTON_STYLE = {\n    BACKGROUND_HOVER: '#ffbf47',\n    BACKGROUND: '#ffe1a9',\n    COLOR_HOVER: '#ffffff'\n};\nexport const POST_STYLE = {\n    background: 'inherit',\n    color: '#ffffff'\n};\n\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\n\n    return (\n        <div className={styleModule.myPosts}>\n            <p>My posts</p>\n            <AddPostForm addPost={props.addPost}/>\n            <div className={styleModule.posts}>\n                {props.postsData.map(post =>\n                    <Post\n                        key={post.id}\n                        background={POST_STYLE.background}\n                        color={POST_STYLE.color}\n                        removePost={props.removePost}\n                        likePost={props.likePost}\n                        {...post}/>\n                )}\n            </div>\n        </div>\n    );\n})\n","import React from \"react\";\nimport styleModule from \"./User.module.css\";\nimport userPhotoDefault from \"./../../../usersAvatars/user.png\";\nimport {NavLink} from \"react-router-dom\";\nimport {UserType} from \"../../../redux/redusers/usersReducer/usersReducer\";\nimport {Button} from \"../../generic/Button/Button\";\nimport {BUTTON_STYLE} from \"../../Profile/MyPosts/MyPosts\";\nimport styled from \"styled-components\";\n\n\ntype UserPropsType = {\n    /**\n     * Callbock that add someone user in followers\n     */\n    becomeFollower: (userID: number) => void\n    /**\n     * Callbock that remove someone user from followers\n     */\n    stopBeingFollower: (userID: number) => void\n    followingInProcessUsersId: number[]\n    toggleFollowingInProcess: (userId: number, followingInProcess: boolean) => void\n    background?: string\n    color?: string\n} & UserType\n\nexport const User = React.memo((props: UserPropsType) => {\n    const UserWrapper = styled.div`\n    & {\n    background: ${props.background ? props.background : 'tomato'};\n    color: ${props.color ? props.color : 'white'}\n    }\n    `\n    const Img = styled.img`\n    & {\n    border-color: ${props.color ? props.color : 'white'}\n    }\n    `\n\n    //is follow button disabled?\n    const isFollowingButtonDisabled = props.followingInProcessUsersId.includes(props.id)\n\n    return (\n        <UserWrapper className={styleModule.userWrapper}>\n            <div className={styleModule.avatar}>\n                <NavLink to={`/profile/${props.id}`}>\n                    <Img src={props.photos.small !== null ? props.photos.small : userPhotoDefault} alt=\"\"/>\n                </NavLink>\n            </div>\n            <div className={styleModule.fullName}>\n                {props.name}\n            </div>\n            <div className={styleModule.status}>\n                <span>{props.status}</span>\n            </div>\n            <div className={styleModule.followed}>\n                {props.followed ?\n                    <Button name={'Unfollow'}\n                            onClick={()=> props.stopBeingFollower(props.id)}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}\n                            disabled={isFollowingButtonDisabled}/> :\n                    <Button name={'Follow'}\n                            onClick={() => props.becomeFollower(props.id)}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}\n                            disabled={isFollowingButtonDisabled}/>\n                }\n            </div>\n        </UserWrapper>\n    )\n})\n","import React, {useMemo, useState} from \"react\";\nimport styleModule from './Paginator.module.css';\n\nexport type PaginatorPropsType = {\n    portionSize: number\n    currentPage: number\n    pageSize: number\n    totalItemsCount: number\n    onChangePage: (pageNumber: number) => void\n}\n\nexport const Paginator = React.memo(({portionSize = 12, ...props}: PaginatorPropsType) => {\n\n    const {pageCount, pages}: { pageCount: number, pages: Array<number> } = useMemo(() => {\n        const pageCount = Math.ceil(props.totalItemsCount / props.pageSize)\n        let pages: Array<number> = [];\n        for (let i = 1; i <= pageCount; i++) {\n            pages.push(i)\n        }\n        return {pageCount, pages}\n    }, [props.totalItemsCount, props.pageSize])\n\n\n    let [portionNumber, setPortionNumber] = useState<number>(1);\n    const portionCount: number = Math.ceil(pageCount / portionSize);\n\n    const leftPortionPageNumber: number = useMemo(() => {\n        return portionSize * (portionNumber - 1) + 1\n    }, [portionSize,\n        portionNumber])\n    const rightPortionPageNumber: number = useMemo(() => {\n        return portionSize * portionNumber;\n    }, [portionSize, portionNumber])\n    return (\n        <div className={styleModule.paginator}>\n            {portionNumber > 1 && <button className={styleModule.firstPage} onClick={() => {\n                setPortionNumber(1)\n            }}>{\"First\"}</button>}\n            {portionNumber > 1 && <button className={styleModule.pagesToBack} onClick={() => {\n                setPortionNumber(portionNumber - 1)\n            }}>{\"Prev\"}</button>}\n            {portionNumber > 1 && <span className={styleModule.threeDots}>{\". . .\"}</span>}\n\n            {pages.filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\n                .map(page => <span key={page} className={props.currentPage === page ? styleModule.selectedPage : ''}\n                                   onClick={() => {\n                                       props.onChangePage(page)\n                                   }}>{page}</span>\n                )}\n\n            {portionNumber < portionCount && <span className={styleModule.threeDots}>{\". . .\"}</span>}\n            {portionNumber < portionCount && <button className={styleModule.pagesToForward} onClick={() => {\n                setPortionNumber(portionNumber + 1)\n            }}>{\"Next\"}</button>}\n            {portionNumber < portionCount && <button className={styleModule.lastPage} onClick={() => {\n                setPortionNumber(portionNumber = portionCount)\n            }}>{\"Last\"}</button>}\n        </div>\n    );\n});\n","import React from \"react\";\nimport styleModule from './Preloader.module.css';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSpinner} from \"@fortawesome/free-solid-svg-icons\";\n\ntype PreloaderPropsType = {\n    size: string\n    color: string\n}\n\n\nexport const Preloader = ({size, color}: PreloaderPropsType) => {\n    return (\n        <div className={styleModule.preloaderBlock}>\n            <FontAwesomeIcon style={{fontSize: size, color: color}} className={styleModule.preloaderIcon}\n                             icon={faSpinner}/>\n        </div>\n    );\n}\n\n\n\n","import React from \"react\";\nimport styleModule from './Users.module.css';\nimport {User} from \"./User/User\";\nimport {Paginator} from \"../generic/Paginator/Paginator\";\nimport {Preloader} from \"../generic/Preloader/Preloader\";\nimport {UsersApiContainerPropsType} from \"./UsersContainer\";\n\n\ntype UsersPropsType = UsersApiContainerPropsType & {\n    onChangePage: (pageNumber: number) => void\n}\n\nexport const Users = React.memo((props: UsersPropsType) => {\n\n    const {\n        users,\n        becomeFollower,\n        stopBeingFollower,\n        usersTotalCount,\n        pageSize,\n        currentPage,\n        onChangePage,\n        isFetching,\n        followingInProcessUsersId,\n        toggleFollowingInProcess,\n    } = props\n\n    let userElements = users.map(user => <User {...user}\n                                               becomeFollower={becomeFollower}\n                                               stopBeingFollower={stopBeingFollower}\n                                               followingInProcessUsersId={followingInProcessUsersId}\n                                               toggleFollowingInProcess={toggleFollowingInProcess}/>);\n    return (\n        <div className={styleModule.usersWrapper}>\n            <div>\n                <Paginator portionSize={10}\n                           currentPage={currentPage}\n                           pageSize={pageSize}\n                           totalItemsCount={usersTotalCount}\n                           onChangePage={onChangePage}/>\n            </div>\n            {isFetching ? <Preloader size={'100px'} color={'#ffffff'}/> :\n                <div className={styleModule.usersBlock}>\n                    {userElements}\n                </div>}\n        </div>\n    )\n})\n\n\n\n","import {AppThunk} from \"../../redux-store\";\r\nimport {FOLLOW_UNFOLLOW_RESULT_CODES, usersAPI} from \"../../../api/api\";\r\n\r\nexport enum USERS_ACTIONS_TYPES {\r\n    FOLLOW = 'social/users/FOLLOW',\r\n    UNFOLLOW = 'social/users/UNFOLLOW',\r\n    SET_USERS = 'social/users/SET_USERS',\r\n    SET_CURRENT_PAGE = 'social/users/SET_CURRENT_PAGE',\r\n    SET_USERS_TOTAL_COUNT = 'social/users/SET_USERS_TOTAL_COUNT',\r\n    SET_IS_FETCHING_VALUE = 'social/users/SET_IS_FETCHING_VALUE',\r\n    TOGGLE_FOLLOWING_IN_PROCESS = 'social/users/TOGGLE_FOLLOWING_IN_PROCESS',\r\n\r\n}\r\n\r\nexport type UserPhotoType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type UserType = {\r\n    /**\r\n     * User name\r\n     */\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string | null\r\n    /**\r\n     * User photos\r\n     */\r\n    photos: UserPhotoType\r\n    /**\r\n     * User status\r\n     */\r\n    status: null | string,\r\n    /**\r\n     * Value that indicates if you are following this user\r\n     */\r\n    followed: boolean\r\n}\r\n\r\nexport type InitialStateUsersType = typeof initialState\r\n\r\nconst initialState = {\r\n    users: [] as UserType[],\r\n    usersTotalCount: 0,\r\n    pageSize: 12,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProcessUsersId: [] as Array<number>\r\n}\r\n\r\n\r\nexport const usersReducer = (state: InitialStateUsersType = initialState, action: UsersActionType): InitialStateUsersType => {\r\n    switch (action.type) {\r\n        case USERS_ACTIONS_TYPES.SET_USERS:\r\n            return {\r\n                ...state, users: action.payload.users\r\n            }\r\n        case USERS_ACTIONS_TYPES.FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id === action.payload.userID ? {...user, followed: true} : user)\r\n            }\r\n        case USERS_ACTIONS_TYPES.UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id === action.payload.userID ? {...user, followed: false} : user)\r\n            }\r\n        case USERS_ACTIONS_TYPES.SET_CURRENT_PAGE:\r\n        case USERS_ACTIONS_TYPES.SET_USERS_TOTAL_COUNT:\r\n        case USERS_ACTIONS_TYPES.SET_IS_FETCHING_VALUE:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        case USERS_ACTIONS_TYPES.TOGGLE_FOLLOWING_IN_PROCESS:\r\n            return {\r\n                ...state, followingInProcessUsersId: action.payload.followingInProcess ?\r\n                    [...state.followingInProcessUsersId, action.payload.userId] :\r\n                    state.followingInProcessUsersId.filter(id => id !== action.payload.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type UsersActionType =\r\n    ReturnType<typeof follow> |\r\n    ReturnType<typeof unfollow> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setUsersTotalCount> |\r\n    ReturnType<typeof setIsFetchingValue> |\r\n    ReturnType<typeof toggleFollowingInProcess>\r\n\r\n\r\nexport const follow = (userID: number) => ({type: USERS_ACTIONS_TYPES.FOLLOW, payload: {userID}} as const)\r\nexport const unfollow = (userID: number) => ({type: USERS_ACTIONS_TYPES.UNFOLLOW, payload: {userID}} as const)\r\nexport const setUsers = (users: UserType[]) => ({type: USERS_ACTIONS_TYPES.SET_USERS, payload: {users}} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_CURRENT_PAGE,\r\n    payload: {currentPage}\r\n} as const)\r\nexport const setUsersTotalCount = (usersTotalCount: number) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_USERS_TOTAL_COUNT,\r\n    payload: {usersTotalCount}\r\n} as const)\r\nexport const setIsFetchingValue = (isFetching: boolean) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_IS_FETCHING_VALUE, payload: {isFetching}\r\n} as const)\r\nexport const toggleFollowingInProcess = (userId: number, followingInProcess: boolean) => ({\r\n    type: USERS_ACTIONS_TYPES.TOGGLE_FOLLOWING_IN_PROCESS,\r\n    payload: {userId, followingInProcess}\r\n} as const)\r\n\r\nexport const getUsers = (pageSize: number, currentPage: number): AppThunk => dispatch => {\r\n    dispatch(setIsFetchingValue(true))\r\n    usersAPI.getUsers(pageSize, currentPage)\r\n        .then(data => {\r\n            dispatch(setIsFetchingValue(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setUsersTotalCount(data.totalCount))\r\n        })\r\n}\r\nexport const becomeFollower = (id: number): AppThunk => dispatch => {\r\n    dispatch(toggleFollowingInProcess(id, true))\r\n    usersAPI.becomeFollower(id).then(data => {\r\n        if (data.resultCode === FOLLOW_UNFOLLOW_RESULT_CODES.success) {\r\n            dispatch(follow(id))\r\n        }\r\n        dispatch(toggleFollowingInProcess(id, false))\r\n    })\r\n}\r\nexport const repeatGetUsers = (pageSize: number, pageNumber: number): AppThunk => dispatch => {\r\n    dispatch(setCurrentPage(pageNumber))\r\n    dispatch(setIsFetchingValue(true))\r\n    usersAPI.getUsers(pageSize, pageNumber).then(data => {\r\n        dispatch(setIsFetchingValue(false))\r\n        dispatch(setUsers(data.items))\r\n    })\r\n}\r\n\r\nexport const stopBeingFollower = (id: number):AppThunk => dispatch => {\r\n    dispatch(toggleFollowingInProcess(id, true))\r\n    usersAPI.stopBeingFollower(id).then(data => {\r\n        if (data.resultCode === FOLLOW_UNFOLLOW_RESULT_CODES.success) {\r\n            dispatch(unfollow(id))\r\n        }\r\n        dispatch(toggleFollowingInProcess(id, false))\r\n    })\r\n\r\n}\r\n\r\n","import {profileAPI, RESPONSE_RESULT_CODES} from \"../../../api/api\";\r\nimport {AppThunk} from \"../../redux-store\";\r\n\r\nexport enum PROFILE_ACTIONS_TYPES {\r\n    ADD_POST = 'social/profile/ADD-POST',\r\n    REMOVE_POST = \"social/profile/REMOVE_POST\",\r\n    LIKE_POST = 'social/profile/LIKE_POST',\r\n    SET_PROFILE = 'social/profile/SET_PROFILE',\r\n    SET_STATUS = 'social/profile/SET_STATUS',\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    name: string\r\n    message: string\r\n    likes: {\r\n        icon: string\r\n        likeCount: number\r\n    }\r\n    isLike: boolean\r\n    image: string | null\r\n    background?: string\r\n    color?: string\r\n}\r\n\r\nexport type ContactsType = {\r\n    facebook: string | null,\r\n    website: string | null,\r\n    vk: string | null,\r\n    twitter: string | null,\r\n    instagram: string | null,\r\n    youtube: string | null,\r\n    github: string | null,\r\n    mainLink: string | null,\r\n}\r\nexport type PhotosType = {\r\n    small: string | null,\r\n    large: string | null,\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string | null,\r\n    contacts: ContactsType\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: PhotosType\r\n}\r\nexport type InitialStateProfileType = typeof initialState\r\n\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti, eum.',\r\n            likes: {\r\n                icon: '❤',\r\n                likeCount: 3,\r\n            },\r\n            isLike: false,\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Mariya',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur cumque harum illo inventore maiores minus mollitia, quaerat quis rem voluptatibus.',\r\n            likes: {\r\n                icon: '❤',\r\n                likeCount: 3,\r\n            },\r\n            isLike: false,\r\n            image: null\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ivan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis est, et labore laborum nemo nisi.',\r\n            likes: {\r\n                icon: '❤',\r\n                likeCount: 87,\r\n            },\r\n            isLike: true,\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album'\r\n        }\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n};\r\n\r\nexport const profileReducer = (state: InitialStateProfileType = initialState, action: ProfileActionType): InitialStateProfileType => {\r\n    switch (action.type) {\r\n        case PROFILE_ACTIONS_TYPES.ADD_POST:\r\n            const newPost = {\r\n                id: state.postsData.length + 1,\r\n                name: 'Someone',\r\n                message: action.payload.newPostText,\r\n                likes: {\r\n                    icon: '❤',\r\n                    likeCount: 0,\r\n                },\r\n                isLike: false,\r\n                image: null\r\n            };\r\n            return {...state, postsData: [newPost, ...state.postsData]}\r\n        case PROFILE_ACTIONS_TYPES.SET_PROFILE:\r\n        case PROFILE_ACTIONS_TYPES.SET_STATUS:\r\n            return {...state, ...action.payload}\r\n        case PROFILE_ACTIONS_TYPES.REMOVE_POST:\r\n            return (\r\n                {...state, postsData: state.postsData.filter(p => p.id !== action.payload.id)}\r\n            );\r\n        case PROFILE_ACTIONS_TYPES.LIKE_POST:\r\n            return (\r\n                {\r\n                    ...state, postsData: state.postsData.map(p => p.id === action.payload.id ?\r\n                        {\r\n                            ...p, isLike: !p.isLike, likes:\r\n                                {...p.likes, likeCount: p.isLike ? p.likes.likeCount - 1 : p.likes.likeCount + 1}\r\n                        } : p)\r\n                }\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport type ProfileActionType =\r\n    ReturnType<typeof addPost> |\r\n    ReturnType<typeof removePost> |\r\n    ReturnType<typeof likePost> |\r\n    ReturnType<typeof setProfile> |\r\n    ReturnType<typeof setStatus>\r\n\r\n//A C T I O N S   C R E A T O R S\r\nexport const addPost = (newPostText: string) => ({\r\n    type: PROFILE_ACTIONS_TYPES.ADD_POST,\r\n    payload: {newPostText}\r\n} as const);\r\nexport const removePost = (id: number) => ({type: PROFILE_ACTIONS_TYPES.REMOVE_POST, payload: {id}} as const);\r\nexport const likePost = (id: number) => ({type: PROFILE_ACTIONS_TYPES.LIKE_POST, payload: {id}} as const);\r\nexport const setProfile = (profile: ProfileType) => ({\r\n    type: PROFILE_ACTIONS_TYPES.SET_PROFILE,\r\n    payload: {profile}\r\n} as const);\r\nexport const setStatus = (status: string) => ({\r\n    type: PROFILE_ACTIONS_TYPES.SET_STATUS,\r\n    payload: {status}\r\n} as const);\r\n\r\n//T H U N K S\r\nexport const getProfile = (userId: number): AppThunk => dispatch => {\r\n    profileAPI.getProfile(userId)\r\n        .then(data => {\r\n            dispatch(setProfile(data))\r\n        })\r\n}\r\nexport const getStatus = (userId: number): AppThunk => dispatch => {\r\n    profileAPI.getStatus(userId)\r\n        .then(data => {\r\n            dispatch(setStatus(data))\r\n        })\r\n}\r\nexport const updateStatus = (status: string): AppThunk => dispatch => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === RESPONSE_RESULT_CODES.success) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n}","import {connect} from \"react-redux\";\nimport {Users} from \"./Users\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {\n    becomeFollower,\n    getUsers,\n    repeatGetUsers,\n    stopBeingFollower,\n    toggleFollowingInProcess,\n    UserType\n} from \"../../redux/redusers/usersReducer/usersReducer\";\nimport React from \"react\";\n\n\nclass UsersApiContainer extends React.Component<UsersApiContainerPropsType> {\n\n    componentDidMount(): void {\n        const {currentPage, pageSize, getUsers} = this.props\n        //get request for getting users (with thunk)\n        getUsers(pageSize, currentPage)\n\n    }\n\n    //optimization of unnecessary rendering. Alternative of React.memo\n    shouldComponentUpdate(nextProps: Readonly<UsersApiContainerPropsType>, nextState: Readonly<{}>): boolean {\n        return nextProps !== this.props || nextState !== this.state\n    }\n\n    // action for pressing on page number\n    onChangePage = (pageNumber: number) => {\n        const {pageSize,repeatGetUsers,} = this.props\n        repeatGetUsers(pageSize, pageNumber)\n    }\n\n    render() {\n        return (\n            <Users {...this.props}\n                   onChangePage={this.onChangePage}\n            />\n        )\n    }\n}\n\n//functionality for redux\n\ntype MapStateToPropsType = {\n    users: UserType[],\n    usersTotalCount: number,\n    pageSize: number,\n    currentPage: number\n    isFetching: boolean\n    followingInProcessUsersId: number[]\n}\ntype MapDispatchToPropsType = {\n    becomeFollower: (userID: number) => void\n    stopBeingFollower: (userID: number) => void\n    toggleFollowingInProcess: (userId: number, followingInProcess: boolean) => void\n    getUsers: (pageSize: number, currentPage: number) => void\n    repeatGetUsers: (pageSize:number, pageNumber:number) => void\n}\n\nexport type UsersApiContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        users: state.usersPage.users,\n        usersTotalCount: state.usersPage.usersTotalCount,\n        pageSize: state.usersPage.pageSize,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProcessUsersId: state.usersPage.followingInProcessUsersId,\n    }\n}\n\nexport const UsersContainer = connect(mapStateToProps, {\n    becomeFollower,\n    stopBeingFollower,\n    toggleFollowingInProcess,\n    getUsers,\n    repeatGetUsers,\n} as MapDispatchToPropsType)(UsersApiContainer)","//hoc for getting params\r\nimport React from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const withRouter = (WrappedComponent: typeof React.Component | React.FC) => {\r\n    const ComponentWithRouter = (props: object) => {\r\n        const params = useParams<'*'>() //... <= profile/*\r\n        return (\r\n            <WrappedComponent {...props} params={params}/>\r\n        )\r\n    }\r\n    return ComponentWithRouter\r\n}","import {RESPONSE_RESULT_CODES, authMeAPI, AuthUserDataType, profileAPI} from \"../../../api/api\";\r\nimport {AppActionsType, AppThunk, GetStateType} from \"../../redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport enum AUTH_ACTIONS_TYPES {\r\n    SET_AUTH_USER_DATA = 'social/auth/SET_AUTH_USER_DATA',\r\n    SET_FULL_NAME_AND_AVATAR = 'social/auth/SET_FULL_NAME_AND_AVATAR',\r\n}\r\n\r\nexport type InitialStateAuthType = typeof initialState\r\n\r\nconst initialState = {\r\n    id: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    isAuth: false,\r\n    fullName: null as null | string,\r\n    avatar: null as null | string\r\n}\r\n\r\nexport const authReducer = (state: InitialStateAuthType = initialState, action: AuthActionType) => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPES.SET_AUTH_USER_DATA:\r\n        case AUTH_ACTIONS_TYPES.SET_FULL_NAME_AND_AVATAR:\r\n            return {\r\n                ...state, isAuth: true, ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type AuthActionType =\r\n    ReturnType<typeof setAuthUserData> |\r\n    ReturnType<typeof setFullNameAndAvatar>\r\n\r\n\r\nexport const setAuthUserData = ({id, email, login}: AuthUserDataType) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_AUTH_USER_DATA,\r\n    payload: {id, email, login}\r\n})\r\nexport const setFullNameAndAvatar = (fullName: string, avatar: string | null) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_FULL_NAME_AND_AVATAR,\r\n    payload: {fullName, avatar}\r\n})\r\nexport const getAuthorizationInfo = (): AppThunk => (dispatch, getState: GetStateType) => {\r\n    authMeAPI.getAuthorizationInfo()\r\n        .then(data => {\r\n            if (data.resultCode === RESPONSE_RESULT_CODES.success) {\r\n                dispatch(setAuthUserData(data.data))\r\n            }\r\n        }).then(() => {\r\n            const id = getState().auth.id\r\n            id && profileAPI.getProfile(id)\r\n                .then(data => {\r\n                    const fullName = data.fullName\r\n                    const avatar = data.photos.small\r\n                    dispatch(setFullNameAndAvatar(fullName, avatar))\r\n                })\r\n        }\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/top-wallpaper.47d6d9d7.jpg\";","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './InputText.module.css'\r\n\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype InputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    customStyle?: string\r\n    field?: any\r\n    form?: any\r\n    meta?: any\r\n}\r\n\r\nconst InputText: React.FC<InputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName, name, title,\r\n        customStyle, field, form, meta,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    };\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    };\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\r\n    const finalInputClassName = `${error ? `${s.errorInput} ${s.superInput}` : s.superInput} ${className ? s[className] : className}`;\r\n\r\n    return (\r\n        <div className={customStyle ? `${customStyle} ${s.inputWrapper}` : s.inputWrapper}>\r\n            <input name={name}\r\n                   type={type}\r\n                   onChange={onChangeCallback}\r\n                   onKeyPress={onKeyPressCallback}\r\n                   className={finalInputClassName}\r\n                   {...field}\r\n                   {...restProps}\r\n            />\r\n\r\n\r\n            {error && <div className={finalSpanClassName}>{error}</div>}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default InputText\r\n","import React, {DetailedHTMLProps, HTMLAttributes, InputHTMLAttributes} from 'react'\r\nimport style from './EditableSpan.module.css'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport InputText from \"../InputText/InputText\";\r\n\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\ntype EditableSpanType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    spanProps?: DefaultSpanPropsType\r\n}\r\ntype StateType = {\r\n    editMode: boolean\r\n}\r\n\r\nclass EditableSpan extends React.Component<EditableSpanType> {\r\n    state: StateType = {\r\n        editMode: false\r\n    }\r\n    onEnterCallback = () => {\r\n        const {onEnter} = this.props\r\n        this.setState({\r\n            editMode: false\r\n        } as StateType);\r\n        onEnter && onEnter()\r\n    };\r\n    onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        const {onBlur} = this.props\r\n        this.setState({\r\n            editMode: false\r\n        } as StateType);\r\n        onBlur && onBlur(e)\r\n    };\r\n    onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        const {onDoubleClick} = this.props.spanProps || {}\r\n        this.setState({\r\n            editMode: true\r\n        } as StateType);\r\n        onDoubleClick && onDoubleClick(e)\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            autoFocus,\r\n            onBlur,\r\n            onEnter,\r\n            spanProps,\r\n            ...restProps\r\n        } = this.props;\r\n        const {children, className, ...restSpanProps} = spanProps || {};\r\n        const spanClassName = `${style.editSpan} ${className}`;\r\n\r\n        return (\r\n            <div className={style.editableSpanWrapper}>\r\n                <CSSTransition in={this.state.editMode}\r\n                               timeout={400}\r\n                               classNames={style}\r\n                               unmountOnExit\r\n                               mountOnEnter>\r\n                    <div className={style.inputWrapper}>\r\n                        <InputText\r\n                            className={'forStatus'}\r\n                            autoFocus\r\n                            onBlur={this.onBlurCallback}\r\n                            onEnter={this.onEnterCallback}\r\n                            onDoubleClick={this.onDoubleClickCallBack}\r\n                            error={restProps.error}\r\n                            customStyle={style.inputStyle}\r\n                            {...restProps}/>\r\n                    </div>\r\n                </CSSTransition>\r\n                <CSSTransition in={!this.state.editMode}\r\n                               timeout={500}\r\n                               classNames={style}\r\n                               unmountOnExit\r\n                               mountOnEnter>\r\n                    <div className={style.spanWrapper}>\r\n                    <span onDoubleClick={this.onDoubleClickCallBack}\r\n                          className={spanClassName}\r\n                          {...restSpanProps}>\r\n                        {children || restProps.value}\r\n                        <FontAwesomeIcon className={style.editPen} icon={faPencilAlt}/>\r\n                    </span>\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditableSpan\r\n","import React from \"react\";\nimport styleModule from './ProfileStatus.module.css';\nimport EditableSpan from \"../../generic/EditableSpan/EditableSpan\";\n\ntype ProfileStatusPropsType = {\n    status: string\n    updateStatus: (status: string) => void\n}\n\nexport class ProfileStatus extends React.PureComponent<ProfileStatusPropsType> {\n    state = {\n        status: this.props.status\n    }\n\n    componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>, snapshot?: any): void {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n    onChangeText = (status: string) => {\n        this.setState({\n            status\n        })\n    }\n    onBlurEnterCallback = () => {\n        this.props.updateStatus(this.state.status)\n    }\n\n    render() {\n\n        return (\n            <div className={styleModule.profileStatus}>\n                <EditableSpan\n                    value={this.state.status}\n                    onChangeText={this.onChangeText}\n                    spanProps={{children: this.props.status ? undefined : 'enter status...'}}\n                    onBlur={this.onBlurEnterCallback}\n                    onEnter={this.onBlurEnterCallback}/>\n            </div>\n        )\n    }\n\n};\n\n","import React from \"react\";\nimport styleModule from './ProfileInfo.module.css';\nimport top_wallpaper from \"../../../top-wallpaper.jpg\";\nimport logo_avatar from '../../../usersAvatars/user.png';\nimport {ProfileAPIContainerPropsType} from \"../ProfileContainer\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck, faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {ProfileStatus} from \"../ProfileStatus/ProfileStatus\";\n\ntype ProfileInfoPropsType = ProfileAPIContainerPropsType\n\nexport const ProfileInfo = React.memo(({\n                                           profile,\n                                           status,\n                                           updateStatus,\n                                       }: ProfileInfoPropsType) => {\n\n    return (\n        <div className={styleModule.profileInfo}>\n            <div className={styleModule.top_wallpaper}>\n                <img src={top_wallpaper} alt=\"top_wallpaper\"/>\n            </div>\n            <div className={styleModule.avatarAndFullName}>\n                <div className={styleModule.image}>\n                    <img src={profile?.photos.large || logo_avatar}/>\n                </div>\n                <div className={styleModule.fullName}>{profile?.fullName}</div>\n\n                {/*кнопка изменения фото*/}\n                {/*{isOwner &&\n                <div className={styleModule.editMainPhoto}>\n                    <input onChange={onChangeAvatarPhoto} type=\"file\"/>\n                    <label>\n                        <svg height=\"20\" viewBox=\"0 0 512 512\">\n                            <path\n                                d=\"M512 144v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V144c0-26.5 21.5-48 48-48h88l12.3-32.9c7-18.7 24.9-31.1 44.9-31.1h125.5c20 0 37.9 12.4 44.9 31.1L376 96h88c26.5 0 48 21.5 48 48zM376 288c0-66.2-53.8-120-120-120s-120 53.8-120 120 53.8 120 120 120 120-53.8 120-120zm-32 0c0 48.5-39.5 88-88 88s-88-39.5-88-88 39.5-88 88-88 88 39.5 88 88z\"></path>\n                        </svg>\n                    </label>\n                </div>}*/}\n\n            </div>\n            <div className={styleModule.description}>\n\n                {/*{!editProfileMode &&*/}\n\n                <div className={styleModule.wrapper_description}>\n\n\n                    {/*<ProfileStatus status={status} updateStatus={updateStatus}/>*/}\n                    <ProfileStatus status={status} updateStatus={updateStatus}/>\n                    <div className={styleModule.aboutMe}>{profile?.aboutMe}</div>\n\n                    <div className={styleModule.lookingForAJob}>\n                        <div className={styleModule.statusJob}>\n                            <div className={styleModule.heading}>OPEN TO WORK:</div>\n                            <div className={styleModule.logo}>{profile?.lookingForAJob ?\n                                <FontAwesomeIcon icon={faCheck} className={styleModule.iconYes}/> :\n                                <FontAwesomeIcon icon={faTimes} className={styleModule.iconNot}/>}\n                            </div>\n                        </div>\n                        <div className={styleModule.descriptionJob}>{profile?.lookingForAJobDescription}</div>\n                    </div>\n\n\n                    {/*{isOwner &&\n                    <div className={styleModule.toEditMode}>\n                        <button onClick={activateEditMode}>\n                            <svg viewBox=\"0 0 469 469\">\n                                <path d=\"M438.931,30.403c-40.4-40.5-106.1-40.5-146.5,0l-268.6,268.5c-2.1,2.1-3.4,4.8-3.8,7.7l-19.9,147.4\n\t\tc-0.6,4.2,0.9,8.4,3.8,11.3c2.5,2.5,6,4,9.5,4c0.6,0,1.2,0,1.8-0.1l88.8-12c7.4-1,12.6-7.8,11.6-15.2c-1-7.4-7.8-12.6-15.2-11.6\n\t\tl-71.2,9.6l13.9-102.8l108.2,108.2c2.5,2.5,6,4,9.5,4s7-1.4,9.5-4l268.6-268.5c19.6-19.6,30.4-45.6,30.4-73.3\n\t\tS458.531,49.903,438.931,30.403z M297.631,63.403l45.1,45.1l-245.1,245.1l-45.1-45.1L297.631,63.403z M160.931,416.803l-44.1-44.1\n\t\tl245.1-245.1l44.1,44.1L160.931,416.803z M424.831,152.403l-107.9-107.9c13.7-11.3,30.8-17.5,48.8-17.5c20.5,0,39.7,8,54.2,22.4\n\t\ts22.4,33.7,22.4,54.2C442.331,121.703,436.131,138.703,424.831,152.403z\"/>\n                            </svg>\n                        </button>\n                    </div>\n                    }*/}\n\n                </div>\n\n                {/*}*/}\n\n                {/*{editProfileMode && <EditProfileForm onSubmit={onSubmit} profile={profile}\n                                                     updateProfileDescription={updateProfileDescription}/>}\n\n                <Contacts profile={profile} updateProfileDescription={updateProfileDescription} />*/}\n            </div>\n        </div>\n    )\n});\n\n","import React from \"react\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {addPost, likePost, PostType, removePost} from \"../../../redux/redusers/profileReducer/profileReducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nexport type MapStateToPropsType = {\n    postsData: PostType[]\n}\n\nexport type MapDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n    removePost: (id: number) => void\n    likePost: (id: number) => void\n}\n\nexport type MyPostsPropsType =\n    MapStateToPropsType &\n    MapDispatchToPropsType &\n    { params: { ['*']: string } }\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        postsData: state.profilePage.postsData\n    }\n}\nexport const MyPostsContainer = connect(mapStateToProps, {\n    addPost,\n    removePost,\n    likePost,\n} as MapDispatchToPropsType)(MyPosts);\n","import React from \"react\";\nimport styleModule from './Profile.module.css';\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\nimport {ProfileAPIContainerPropsType} from \"./ProfileContainer\";\n\ntype ProfilePropsType = ProfileAPIContainerPropsType\n\nexport const Profile = React.memo((props:ProfilePropsType) => {\n    return (\n        <div className={styleModule.content}>\n            <ProfileInfo {...props}/>\n            <MyPostsContainer params={props.params}/>\n        </div>\n    );\n})\n\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getProfile, getStatus, ProfileType, updateStatus} from \"../../redux/redusers/profileReducer/profileReducer\";\nimport {Profile} from \"./Profile\";\nimport {Preloader} from \"../generic/Preloader/Preloader\";\nimport {withRouter} from \"../../hoc/withRouter\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {profileAPI} from \"../../api/api\";\n\n\nclass ProfileAPIContainer extends React.Component<ProfileAPIContainerPropsType> {\n\n    refreshProfile = () => {\n        const {getProfile, getStatus,  params} = this.props\n        let userId = params[\"*\"]\n        if (!userId || userId === '*') {\n            userId = '20392'\n        }\n        getProfile(Number(userId))\n        getStatus(Number(userId))\n    }\n\n    componentDidMount(): void {\n        this.refreshProfile()\n    }\n\n    //getting own profile after switching from someone profile to your own\n    componentDidUpdate(prevProps: Readonly<ProfileAPIContainerPropsType>, prevState: Readonly<{}>, snapshot?: any): void {\n        if (prevProps.params !== this.props.params) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return this.props.profile ? (\n                <Profile {...this.props}/>) :\n            (<Preloader size={'100px'} color={'#ffffff'}/>\n            )\n    }\n}\n\nexport type ProfileAPIContainerPropsType =\n    MapStateToPropsType &\n    MapDispatchToPropsType &\n    { params: { ['*']: string } } //... <= profile/*... => type for props\n\ntype MapStateToPropsType = {\n    profile: ProfileType | null\n    isAuth: boolean\n    status:string\n}\ntype MapDispatchToPropsType = {\n    getProfile: (userId: number) => void\n    getStatus: (userId: number) => void\n    updateStatus: (status: string) => void\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    profile: state.profilePage.profile,\n    isAuth: state.auth.isAuth,\n    status: state.profilePage.status,\n})\n\n\nexport const ProfileContainer = withAuthRedirect(connect(mapStateToProps, {getProfile, getStatus, updateStatus} as MapDispatchToPropsType)(withRouter(ProfileAPIContainer)))\n\n\n","import React from \"react\";\r\nimport styleModule from './Header.module.css';\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {HeaderAPIContainerPropsType} from \"./HeaderContainer\";\r\nimport logo_avatar from '../../usersAvatars/user.png'\r\n\r\nexport type HeaderPropsType = {\r\n    title: string\r\n    description?: string\r\n    background: string\r\n    color: string\r\n    logo?: string\r\n} & HeaderAPIContainerPropsType\r\n\r\n\r\nexport const Header = React.memo((props: HeaderPropsType) => {\r\n    const {\r\n        title,\r\n        description,\r\n        background,\r\n        color,\r\n        logo,\r\n        avatar,\r\n        fullName,\r\n        auth,\r\n    } = props\r\n    const Header = styled.header`\r\n    & {\r\n    background: ${background}\r\n    `;\r\n    const TitleDescription = styled.div`\r\n    & p {\r\n    color: ${color}\r\n    }\r\n    `;\r\n    return (\r\n        <Header className={styleModule.header}>\r\n            <div className={styleModule.logoAndDescription}>\r\n                <div className={styleModule.logo}>\r\n                    <img src={logo} className={styleModule.main_logo}/>\r\n                </div>\r\n                <TitleDescription className={styleModule.title_description}>\r\n                    <p>{title}</p>\r\n                    <p>{description}</p>\r\n                </TitleDescription>\r\n            </div>\r\n            <div className={styleModule.loginStatus}>\r\n\r\n                {auth.isAuth ?\r\n                    <div className={styleModule.loginAndAvatar}>\r\n                        <div className={styleModule.avatar}>\r\n                            <img src={avatar ? avatar : logo_avatar}/>\r\n                        </div>\r\n                        <div className={styleModule.loginValue}>{fullName}</div>\r\n\r\n                        {/*<div className={styleModule.logoutButton}><button onClick={props.logout} >LOGOUT</button></div>*/}\r\n\r\n                    </div> :\r\n                    <NavLink to={'/login'}>\r\n                        LOGIN\r\n                    </NavLink>}\r\n            </div>\r\n        </Header>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Header} from \"./Header\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getAuthorizationInfo, InitialStateAuthType} from \"../../redux/redusers/auth/authReducer\";\r\nimport {HEADER_STYLE} from \"../../App\";\r\n\r\nexport type DataType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n}\r\nexport type GetAuthUserDataType = {\r\n    data: DataType\r\n    fieldsErrors: Array<any>\r\n    messages: Array<string>\r\n    resultCode: number\r\n}\r\n\r\n\r\nclass HeaderAPIContainer extends React.Component<HeaderAPIContainerPropsType> {\r\n    componentDidMount(): void {\r\n        const {getAuthorizationInfo} = this.props\r\n        getAuthorizationInfo()\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Header title={'Cloudpaper'}\r\n                    description={'Connecting Network'}\r\n                    background={HEADER_STYLE.background}\r\n                    color={HEADER_STYLE.color}\r\n                    logo={HEADER_STYLE.logo}\r\n                    {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport type HeaderAPIContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype MapStateToPropsType = {\r\n    auth: InitialStateAuthType\r\n    fullName: string | null\r\n    avatar: string | null | undefined\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getAuthorizationInfo: () => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        auth: state.auth,\r\n        fullName: state.auth.fullName,\r\n        avatar: state.auth.avatar,\r\n    }\r\n};\r\n\r\nexport const HeaderContainer = connect(mapStateToProps, {\r\n    getAuthorizationInfo\r\n} as MapDispatchToPropsType)(HeaderAPIContainer)\r\n\r\n\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './Checkbox.module.css'\r\nimport styled from \"styled-components\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    bgColor?: string\r\n    field?: any\r\n    form?: any\r\n    meta?: any\r\n}\r\n\r\nconst Checkbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n        bgColor,\r\n        ref, field, form, meta,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const FakeFlagSpan = styled.span``\r\n    const InputCheckbox = styled.input``\r\n    const Label = styled.label`\r\n        & input${InputCheckbox}:checked + span${FakeFlagSpan} {\r\n            background-color: ${bgColor ? bgColor : '#007FFF'};\r\n            border-color: ${bgColor ? bgColor : '#007FFF'};\r\n        }\r\n        &:hover input${InputCheckbox}:checked + span${FakeFlagSpan}{\r\n            box-shadow: 0 0 8px ${bgColor ? bgColor : '#007FFF'};\r\n        }\r\n    `\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    };\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n    return (\r\n        <Label className={s.label}>\r\n            <InputCheckbox\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n                {...field}\r\n            />\r\n            <FakeFlagSpan className={s.fakeFlag}></FakeFlagSpan>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </Label>\r\n    )\r\n}\r\n\r\nexport default Checkbox\r\n","import React from \"react\";\nimport styleModule from './LoginForm.module.css';\nimport InputText from \"../../generic/InputText/InputText\";\nimport {Button} from \"../../generic/Button/Button\";\nimport Checkbox from \"../../generic/Checkbox/Checkbox\";\nimport {Field, Form, Formik} from \"formik\";\n\ntype LoginFormValuesType = {\n    email: string\n    password: string\n    rememberMe: boolean\n}\n\nexport function LoginForm() {\n    const onSubmitGHandler = (values: LoginFormValuesType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\n        console.log(values)\n        setSubmitting(false)\n    }\n    return (\n        <div className={styleModule.wrapperLoginForm}>\n            <div className={styleModule.title}>login</div>\n            <Formik\n                initialValues={{email: '', password: '', rememberMe: true}}\n                onSubmit={onSubmitGHandler}>\n                {({isSubmitting}) => (\n                    <Form className={styleModule.formWrapper}>\n                        <div className={styleModule.formElement}>\n                            <Field type=\"email\"\n                                   name=\"email\"\n                                   component={InputText}\n                                   placeholder={'Login'}/>\n\n                        </div>\n                        <div className={styleModule.formElement}>\n                            <Field type=\"password\"\n                                   name=\"password\"\n                                   component={InputText}\n                                   placeholder={'Password'}/>\n                        </div>\n                        <div className={`${styleModule.formElement} ${styleModule.checkMark}`}>\n                            <Field type=\"checkbox\"\n                                   name=\"rememberMe\"\n                                   component={CheckBoxField}/>\n                        </div>\n                        <div className={styleModule.formElement}>\n                            <Button name={'Login'}\n                                    disabled={isSubmitting}/>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n}\n\nconst CheckBoxField = (props: any) => {\n    return (\n        <Checkbox {...props} id={\"remember_me\"}\n                  bgColor={'#68ACBA'}>\n            {'Remember me'}\n        </Checkbox>\n    )\n}\n\n\n\n","import React from \"react\";\nimport styleModule from './Login.module.css';\nimport {LoginForm} from \"../forms/LoginForm/Login\";\n\n\nexport function Login(props: any) {\n\n    return (\n        <div className={styleModule.wrapperLogin}>\n            <LoginForm/>\n        </div>\n    );\n}\n\n\n\n","import React from 'react';\nimport './App.css';\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Navigate, Route, Routes} from \"react-router-dom\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {SettingsContainer} from \"./components/Settings/Settings\";\nimport logo from './main-logo.png';\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\nimport {ProfileContainer} from \"./components/Profile/ProfileContainer\";\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\nimport {Login} from \"./components/Login/Login\";\n\n\nexport type PATHType = {\n    PROFILE: string\n    DIALOGS: string\n    MUSIC: string\n    NEWS: string\n    USERS: string\n    SETTINGS: string\n    LOGIN:string\n}\nexport const PATH: PATHType = {\n    PROFILE: '/profile/*',\n    DIALOGS: '/dialogs/*',\n    MUSIC: '/music',\n    NEWS: '/news',\n    USERS: '/users',\n    SETTINGS: '/settings',\n    LOGIN: '/login',\n};\n\nexport const HEADER_STYLE = {\n    background: '#7D823F',\n    color: '#ffffff',\n    logo: logo\n};\n\nfunction App() {\n\n    return (\n            <div className=\"app_wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app_wrapper_content\">\n                    <Routes>\n                        <Route path='/' element={<Navigate to={PATH.PROFILE}/>}/>\n                        <Route path={PATH.PROFILE} element={<ProfileContainer />}/>\n                        <Route path={PATH.DIALOGS} element={<DialogsContainer/>}/>\n                        <Route path={PATH.MUSIC} element={<Music/>}/>\n                        <Route path={PATH.NEWS} element={<News/>}/>\n                        <Route path={PATH.USERS} element={<UsersContainer/>}/>\n                        <Route path={PATH.SETTINGS} element={<SettingsContainer/>}/>\n                        <Route path={PATH.LOGIN} element={<Login/>}/>\n                    </Routes>\n                </div>\n            </div>\n    );\n}\n\nexport default App;\n","import {ProfileActionType, profileReducer} from \"./redusers/profileReducer/profileReducer\";\r\nimport {DialogsActionType, dialogsReducer} from \"./redusers/dialogsReducer/dialogsReducer\";\r\nimport {UsersActionType, usersReducer} from \"./redusers/usersReducer/usersReducer\";\r\nimport {AuthActionType, authReducer} from \"./redusers/auth/authReducer\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {ThunkAction} from 'redux-thunk';\r\n\r\nexport const rootReducer = combineReducers({\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n    }\r\n);\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type AppActionsType =\r\n    UsersActionType |\r\n    ProfileActionType |\r\n    DialogsActionType|\r\n    AuthActionType\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type GetStateType = typeof store.getState\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionsType\r\n    >\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__2v9vO\",\"meMessageWrapper\":\"Message_meMessageWrapper__1MAX1\",\"messageBlock\":\"Message_messageBlock__3LBDi\",\"meMessageBlock\":\"Message_meMessageBlock__1x_NA\",\"name\":\"Message_name__3Gp6r\",\"message\":\"Message_message__9Gaxr\",\"time\":\"Message_time__2pDBU\",\"avatar\":\"Message_avatar__1V7_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2lBSZ\",\"item\":\"Navbar_item__Ozyip\",\"icon\":\"Navbar_icon__2lJWr\",\"active\":\"Navbar_active__34byn\",\"users\":\"Navbar_users__rOSsB\",\"buttonBlock\":\"Navbar_buttonBlock__2sf4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__rKeBu\",\"logoAndDescription\":\"Header_logoAndDescription__36SJL\",\"main_logo\":\"Header_main_logo__227Ld\",\"title_description\":\"Header_title_description__3Sd-q\",\"logo\":\"Header_logo__Z7xS8\",\"loginStatus\":\"Header_loginStatus__27OBc\",\"loginAndAvatar\":\"Header_loginAndAvatar__OJ0Lj\",\"loginValue\":\"Header_loginValue__35gNe\",\"logoutButton\":\"Header_logoutButton__1jl7V\",\"avatar\":\"Header_avatar__1X7_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2Taf7\",\"pagesToBack\":\"Paginator_pagesToBack__2y2Mx\",\"pagesToForward\":\"Paginator_pagesToForward__3ky62\",\"firstPage\":\"Paginator_firstPage__2QU6j\",\"lastPage\":\"Paginator_lastPage__gXtZR\",\"selectedPage\":\"Paginator_selectedPage__JE0qS\",\"threeDots\":\"Paginator_threeDots__13XX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpanWrapper\":\"EditableSpan_editableSpanWrapper__2aU5i\",\"inputWrapper\":\"EditableSpan_inputWrapper__1gsDR\",\"spanWrapper\":\"EditableSpan_spanWrapper__2gUP9\",\"editSpan\":\"EditableSpan_editSpan__28RB9\",\"buttonsBlock\":\"EditableSpan_buttonsBlock__2aT0j\",\"editPen\":\"EditableSpan_editPen__3Yu2p\",\"enter\":\"EditableSpan_enter__19kUA\",\"enterActive\":\"EditableSpan_enterActive__3y2hR\",\"exit\":\"EditableSpan_exit__28CC8\",\"exitActive\":\"EditableSpan_exitActive__27QF9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLoginForm\":\"LoginForm_wrapperLoginForm__2vlIU\",\"title\":\"LoginForm_title__i-9CN\",\"formWrapper\":\"LoginForm_formWrapper__3UkNk\",\"formElement\":\"LoginForm_formElement__1Wl7v\",\"checkMark\":\"LoginForm_checkMark__305L6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"InputText_inputWrapper__8UzaQ\",\"superInput\":\"InputText_superInput__MC_64\",\"errorInput\":\"InputText_errorInput__EG88-\",\"forStatus\":\"InputText_forStatus__3cIkX\",\"error\":\"InputText_error__35kd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1o3_i\",\"heading\":\"Dialogs_heading__2LCaS\",\"dialogs_items\":\"Dialogs_dialogs_items__1CN3_\",\"messagesBlock\":\"Dialogs_messagesBlock___yNFN\",\"messages\":\"Dialogs_messages__174fl\",\"meMessages\":\"Dialogs_meMessages__2Nq9R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"User_userWrapper__HCUEE\",\"avatar\":\"User_avatar__3jo1S\",\"status\":\"User_status__oyUvl\",\"fullName\":\"User_fullName__dcBJC\",\"followed\":\"User_followed__suzg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrapper\":\"Post_postWrapper__2dad-\",\"avaBlock\":\"Post_avaBlock__1eypn\",\"messageBlock\":\"Post_messageBlock__q4MKJ\",\"likesBlock\":\"Post_likesBlock__W2PfY\",\"removePost\":\"Post_removePost__ZIsFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__v1rOq\",\"label\":\"Checkbox_label__3-_Qw\",\"fakeFlag\":\"Checkbox_fakeFlag__NFlH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2L0-V\",\"contactAvatar\":\"Dialog_contactAvatar__2NdvE\",\"dialogActive\":\"Dialog_dialogActive__2hnMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"writeMessage\":\"AddMessageForm_writeMessage__3YRVp\",\"writeAndSendMessage\":\"AddMessageForm_writeAndSendMessage__1TFJk\",\"sendMessage\":\"AddMessageForm_sendMessage__1zEOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPostButton\":\"AddPostForm_addPostButton__3Jvum\",\"writePost\":\"AddPostForm_writePost__3JhZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlock\":\"Users_usersBlock__wcdhv\",\"usersWrapper\":\"Users_usersWrapper__2NpI5\",\"buttonBlock\":\"Users_buttonBlock__3E4rQ\",\"selectedPage\":\"Users_selectedPage__2Qq8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__14xNj\",\"addPostButton\":\"MyPosts_addPostButton__3kHYc\",\"writePost\":\"MyPosts_writePost__rmb23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderBlock\":\"Preloader_preloaderBlock__3EBOq\",\"preloaderIcon\":\"Preloader_preloaderIcon__QSMsa\",\"rotate-center\":\"Preloader_rotate-center__1wFP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__egdZh\",\"rotate-center\":\"Button_rotate-center__1PBd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UnderConstruction_container__3E9Tv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Textarea_textarea__3tLx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLogin\":\"Login_wrapperLogin__2E7ef\"};"],"sourceRoot":""}