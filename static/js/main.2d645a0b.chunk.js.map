{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Dialogs/Mesage/Message.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Users/User/User.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css","components/generic/Button/Button.module.css","components/generic/Textarea/Textarea.module.css","components/generic/UnderConstruction/UnderConstruction.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","top-wallpaper.jpg","usersAvatars/user.png","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/redusers/profileReducer/profileReducer.ts","components/Profile/MyPosts/Posts/Post.tsx","components/generic/Button/Button.tsx","components/generic/Textarea/Textarea.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","underConstruction.png","components/generic/UnderConstruction/UnderConstruction.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","main-logo.png","redux/redusers/dialogsReducer/dialogsReducer.ts","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Mesage/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","redux/redusers/usersReducer/usersReducer.ts","components/Users/UsersContainer.tsx","App.tsx","redux/redux-store.ts","index.tsx"],"names":["module","exports","Header","React","memo","title","description","background","color","logo","styled","header","TitleDescription","div","className","styleModule","logoAndDescription","src","main_logo","title_description","loginStatus","Navbar","nav","item","to","profile","isActive","active","icon","faUserAlt","dialogs","faCommentDots","news","faNewspaper","music","faHeadphonesAlt","users","faUsers","settings","faSlidersH","ProfileInfo","props","profileInfo","top_wallpaper","alt","avatar","image","logo_avatar","initialState","postsData","id","name","message","likeCount","newPostText","Post","removePost","PostWrapper","postWrapper","avaBlock","ava_post","faTimes","onClick","onCrossClick","messageBlock","likesBlock","Button","ButtonWithBefore","button","backgroundHover","colorHover","style","Textarea","textareaValue","setTextareaValue","reference","placeholder","onAddWithEnter","styles","textarea","onChange","onKeyPress","value","ref","BUTTON_STYLE","POST_STYLE","MyPosts","myPosts","writePost","e","updateNewPostText","currentTarget","addPostWithEnter","addPostButton","addPost","posts","map","post","MyPostsContainer","connect","state","profilePage","dispatch","trim","type","shiftKey","key","preventDefault","payload","updateNewPostTextAC","removePostAC","Profile","content","UnderConstruction","container","Music","News","Settings","dialogsData","messagesData","time","newMessageText","Dialog","DialogWrapper","ContactAvatar","dialog","contactAvatar","userLogo","Message","MessageBlock","Avatar","messageWrapper","messageAva","MESSAGE_STYLE","DIALOG_STYLE","Dialogs","heading","dialogs_items","dialogsPage","messagesBlock","messages","writeAndSendMessage","writeMessage","updateNewMessageText","addMessageWithEnter","sendMessage","addMessage","DialogsContainer","updateNewMessageTextAC","User","UserWrapper","Img","img","userWrapper","photos","small","userPhotoDefault","fullName","status","followed","stopBeingFollower","becomeFollower","Users","usersPage","userElements","user","length","axios","get","then","response","setUsers","data","items","usersWrapper","usersBlock","UsersContainer","userID","followAC","unfollowAC","setUsersAC","PATH","HEADER_STYLE","App","path","element","rootReducer","combineReducers","action","newPost","filter","p","newMessage","Date","toJSON","slice","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d645a0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1o3_i\",\"heading\":\"Dialogs_heading__2LCaS\",\"dialogs_items\":\"Dialogs_dialogs_items__1CN3_\",\"messagesBlock\":\"Dialogs_messagesBlock___yNFN\",\"messages\":\"Dialogs_messages__174fl\",\"writeAndSendMessage\":\"Dialogs_writeAndSendMessage__3VXCn\",\"sendMessage\":\"Dialogs_sendMessage__2OMjS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__rKeBu\",\"logoAndDescription\":\"Header_logoAndDescription__36SJL\",\"main_logo\":\"Header_main_logo__227Ld\",\"title_description\":\"Header_title_description__3Sd-q\",\"logo\":\"Header_logo__Z7xS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__2v9vO\",\"messageBlock\":\"Message_messageBlock__3LBDi\",\"name\":\"Message_name__3Gp6r\",\"message\":\"Message_message__9Gaxr\",\"time\":\"Message_time__2pDBU\",\"avatar\":\"Message_avatar__1V7_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__7ylqO\",\"avatar\":\"ProfileInfo_avatar__2EIzC\",\"image\":\"ProfileInfo_image__19lBH\",\"top_wallpaper\":\"ProfileInfo_top_wallpaper__1_yd0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrapper\":\"Post_postWrapper__2dad-\",\"avaBlock\":\"Post_avaBlock__1eypn\",\"messageBlock\":\"Post_messageBlock__q4MKJ\",\"removePost\":\"Post_removePost__ZIsFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"User_userWrapper__HCUEE\",\"avatar\":\"User_avatar__3jo1S\",\"status\":\"User_status__oyUvl\",\"fullName\":\"User_fullName__dcBJC\",\"followed\":\"User_followed__suzg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__14xNj\",\"addPostButton\":\"MyPosts_addPostButton__3kHYc\",\"writePost\":\"MyPosts_writePost__rmb23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2L0-V\",\"contactAvatar\":\"Dialog_contactAvatar__2NdvE\",\"active\":\"Dialog_active__1Firc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlock\":\"Users_usersBlock__wcdhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2lBSZ\",\"item\":\"Navbar_item__Ozyip\",\"icon\":\"Navbar_icon__2lJWr\",\"active\":\"Navbar_active__34byn\",\"settings\":\"Navbar_settings__2WR45\",\"users\":\"Navbar_users__rOSsB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__egdZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Textarea_textarea__3tLx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UnderConstruction_container__3E9Tv\"};","import React from \"react\";\r\nimport styleModule from './Header.module.css';\r\nimport styled from \"styled-components\";\r\n\r\nexport type HeaderPropsType = {\r\n    title: string\r\n    description?: string\r\n    background: string\r\n    color: string\r\n    logo?: string\r\n}\r\n\r\nexport const Header = React.memo(({\r\n                           title,\r\n                           description,\r\n                           background,\r\n                           color,\r\n                           logo, ...props\r\n                       }: HeaderPropsType) => {\r\n    const Header = styled.header`\r\n    & {\r\n    background: ${background}\r\n    `;\r\n    const TitleDescription = styled.div`\r\n    & p {\r\n    color: ${color}\r\n    }\r\n    `;\r\n    return (\r\n        <Header className={styleModule.header}>\r\n            <div className={styleModule.logoAndDescription}>\r\n                <div className={styleModule.logo}>\r\n                    <img src={logo} className={styleModule.main_logo}/>\r\n                </div>\r\n                <TitleDescription className={styleModule.title_description}>\r\n                    <p>{title}</p>\r\n                    <p>{description}</p>\r\n                </TitleDescription>\r\n            </div>\r\n            <div className={styleModule.loginStatus}>\r\n\r\n            </div>\r\n        </Header>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\nimport './Navbar.module.css';\nimport styleModule from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n    faCommentDots,\n    faHeadphonesAlt,\n    faNewspaper,\n    faSlidersH,\n    faUserAlt,\n    faUsers\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Navbar = React.memo(() => {\n    return (\n        <>\n            <nav className={styleModule.nav}>\n                <div className={styleModule.item}>\n                    <NavLink to={'/profile'}\n                             className={profile => profile.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faUserAlt} className={styleModule.icon}/> Profile\n                    </NavLink>\n                </div>\n                <div className={styleModule.item}>\n                    <NavLink to={'/dialogs'}\n                             className={dialogs => dialogs.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faCommentDots} className={styleModule.icon}/> Messages\n                    </NavLink>\n                </div>\n                <div className={styleModule.item}>\n                    <NavLink to={'/news'} className={news => news.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faNewspaper} className={styleModule.icon}/> News\n                    </NavLink>\n                </div>\n                <div className={styleModule.item}>\n                    <NavLink to={'/music'} className={music => music.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faHeadphonesAlt} className={styleModule.icon}/> Music\n                    </NavLink>\n                </div>\n                <div className={`${styleModule.item} ${styleModule.users}`}>\n                    <NavLink to={'/users'} className={users => users.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faUsers} className={styleModule.icon}/> Users\n                    </NavLink>\n                </div>\n                <div className={`${styleModule.item} ${styleModule.settings}`}>\n                    <NavLink to={'/settings'}\n                             className={settings => settings.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faSlidersH} className={styleModule.icon}/> Settings\n                    </NavLink>\n                </div>\n\n            </nav>\n        </>\n    )\n})\n","export default __webpack_public_path__ + \"static/media/top-wallpaper.47d6d9d7.jpg\";","export default __webpack_public_path__ + \"static/media/user.cb380ae4.png\";","import React from \"react\";\nimport styleModule from './ProfileInfo.module.css';\nimport top_wallpaper from \"../../../top-wallpaper.jpg\";\nimport logo_avatar from '../../../usersAvatars/user.png';\n\nexport const ProfileInfo = React.memo((props: any) => {\n\n\n    return (\n        <div className={styleModule.profileInfo}>\n            <div className={styleModule.top_wallpaper}>\n                <img src={top_wallpaper} alt=\"top_wallpaper\"/>\n            </div>\n            <div className={styleModule.avatar}>\n                <div className={styleModule.image}>\n                    <img src={logo_avatar}/>\n                </div>\n\n            </div>\n            <div className={styleModule.description}>\n\n            </div>\n        </div>\n    )\n});\n\n","export type PostType = {\r\n    id: number\r\n    name: string\r\n    message: string\r\n    likeCount: number\r\n    image: string | null\r\n    background?: string\r\n    color?: string\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti, eum.',\r\n            likeCount: 9,\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Mariya',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur cumque harum illo inventore maiores minus mollitia, quaerat quis rem voluptatibus.',\r\n            likeCount: 3,\r\n            image: null\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ivan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis est, et labore laborum nemo nisi.',\r\n            likeCount: 87,\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album'\r\n        }\r\n    ] as Array<PostType>,\r\n    newPostText: ''\r\n};\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"social/profile/ADD-POST\":\r\n            const newPost: PostType = {\r\n                id: state.postsData.length + 1,\r\n                name: 'Someone',\r\n                message: state.newPostText,\r\n                likeCount: 0,\r\n                image: null\r\n            };\r\n            return {...state, postsData: [newPost, ...state.postsData], newPostText: ''}\r\n        case \"social/profile/UPDATE-NEW-POST-TEXT\":\r\n            return {...state, newPostText: action.payload.newPostText}\r\n        case \"social/profile/REMOVE-POST\":\r\n            return (\r\n                {...state, postsData: state.postsData.filter(p => p.id !== action.payload.id)}\r\n            );\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport type ActionType =\r\n    ReturnType<typeof addPostAC> |\r\n    ReturnType<typeof updateNewPostTextAC> |\r\n    ReturnType<typeof removePostAC>\r\n\r\nexport const addPostAC = () => ({type: 'social/profile/ADD-POST'} as const);\r\nexport const updateNewPostTextAC = (newPostText: string) => ({\r\n    type: 'social/profile/UPDATE-NEW-POST-TEXT',\r\n    payload: {newPostText}\r\n} as const);\r\nexport const removePostAC = (id: number) => ({type: 'social/profile/REMOVE-POST', payload: {id}} as const);","import React from \"react\";\nimport styleModule from './Post.module.css'\nimport ava_post from '../../../../usersAvatars/user.png'\nimport {PostType} from \"../../../../redux/redusers/profileReducer/profileReducer\";\nimport styled from \"styled-components\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\n\ntype PostPropsType = PostType & { removePost: (id: number) => void };\n\nexport const Post = React.memo(({\n                         id,\n                         name,\n                         message,\n                         likeCount,\n                         image,\n                         background,\n                         color,\n                         removePost,\n                         ...props\n                     }: PostPropsType) => {\n    const PostWrapper = styled.div`\n     & {\n        background: ${background ? background : '#FF6347'};\n        color:  ${color ? color : '#ffffff'};\n    }\n    `;\n\n    const onCrossClick = (id: number) => {\n        removePost(id);\n    };\n\n    return (\n        <PostWrapper className={styleModule.postWrapper}>\n            <div className={styleModule.avaBlock}>\n                <img src={image ? image : ava_post} alt=\"ava_post\"/>\n                <span>{name}</span>\n                <FontAwesomeIcon icon={faTimes} className={styleModule.removePost} onClick={() => onCrossClick(id)}/>\n            </div>\n            <div className={styleModule.messageBlock}>\n                {message}\n            </div>\n            <div className={styleModule.likesBlock}>\n                <span>❤</span> {likeCount}\n            </div>\n        </PostWrapper>\n\n    );\n});\n\n","import React from \"react\";\r\nimport style from './Button.module.css'\r\nimport styled from \"styled-components\";\r\n\r\ntype ButtonPropsType = {\r\n    name: string\r\n    onClick: () => void\r\n    backgroundHover: string\r\n    background: string\r\n    colorHover: string\r\n}\r\n\r\n\r\nexport const Button = React.memo(({name, onClick, ...props}: ButtonPropsType) => {\r\n    const ButtonWithBefore = styled.button`\r\n& {\r\nborder-color: ${props.backgroundHover};\r\ncolor: ${props.backgroundHover};\r\nbackground-color:${props.background}\r\n}\r\n&:before {\r\nbackground: ${props.backgroundHover};\r\n}\r\n&:hover {\r\ncolor: ${props.colorHover}\r\n}\r\n`;\r\n\r\n    const onClickButton = () => {\r\n        onClick()\r\n    };\r\n\r\n    return (\r\n        <ButtonWithBefore onClick={onClickButton} className={style.button}>{name}</ButtonWithBefore>\r\n    )\r\n})","import React, {ChangeEvent, KeyboardEvent, LegacyRef} from \"react\";\r\nimport style from './Textarea.module.css'\r\n\r\ntype TextareaPropsType = {\r\n    textareaValue: string\r\n    setTextareaValue: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n    onAddWithEnter?: (e: KeyboardEvent<HTMLTextAreaElement>) => void\r\n    reference?: LegacyRef<HTMLTextAreaElement>\r\n    placeholder: string\r\n    background: string\r\n    color: string\r\n}\r\n\r\nexport const Textarea = React.memo(({\r\n                             textareaValue,\r\n                             setTextareaValue,\r\n                             reference,\r\n                             placeholder,\r\n                             onAddWithEnter,\r\n                             background,\r\n                             color,\r\n                             ...restProps\r\n                         }: TextareaPropsType) => {\r\n    const styles = {\r\n        background: background,\r\n        color: color\r\n    };\r\n    return (\r\n        <textarea placeholder={placeholder}\r\n                  className={style.textarea}\r\n                  onChange={setTextareaValue}\r\n                  onKeyPress={onAddWithEnter}\r\n                  value={textareaValue}\r\n                  ref={reference}\r\n                  style={styles}\r\n        />\r\n    )\r\n})","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport styleModule from './MyPosts.module.css'\nimport {Post} from \"./Posts/Post\";\nimport {Button} from \"../../generic/Button/Button\";\nimport {Textarea} from \"../../generic/Textarea/Textarea\";\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\n\n\nexport const BUTTON_STYLE = {\n    BACKGROUND_HOVER: '#ffbf47',\n    BACKGROUND: '#ffe1a9',\n    COLOR_HOVER: '#ffffff'\n};\nexport const POST_STYLE = {\n    background: 'inherit',\n    color: '#ffffff'\n};\n\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\n\n    const onAddPostButton = () => {\n        props.addPost(props.newPostText);\n    };\n    const onAddPostWithEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        props.addPostWithEnter(e, props.newPostText);\n    };\n    const onUpdatePostText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updateNewPostText(e.currentTarget.value);\n    };\n\n\n    return (\n        <div className={styleModule.myPosts}>\n            <p>My posts</p>\n            <div>\n                <div className={styleModule.writePost}>\n                    <Textarea setTextareaValue={onUpdatePostText}\n                              textareaValue={props.newPostText}\n                              onAddWithEnter={onAddPostWithEnter}\n                              placeholder={'Here you can leave your post'}\n                              background={'#ffffff'}\n                              color={'#60575A'}/>\n                </div>\n                <div className={styleModule.addPostButton}>\n                    <Button name={'Add post'}\n                            onClick={onAddPostButton}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}/>\n                </div>\n            </div>\n            <div className={styleModule.posts}>\n                {props.postsData.map(post =>\n                    <Post\n                        key={post.id}\n                        background={POST_STYLE.background}\n                        color={POST_STYLE.color}\n                        removePost={props.removePost}\n                        {...post}/>\n                )}\n            </div>\n        </div>\n    );\n})\n","import React, {KeyboardEvent} from \"react\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {addPostAC, PostType, removePostAC, updateNewPostTextAC} from \"../../../redux/redusers/profileReducer/profileReducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\n\n\nexport type MapStateToPropsType = {\n    postsData: PostType[]\n    newPostText: string\n}\n\nexport type MapDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n    addPostWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newPostText: string) => void\n    updateNewPostText: (newPostText: string) => void\n    removePost: (id: number) => void\n}\n\nexport type MyPostsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        postsData: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        addPost: (newPostText: string) => {\n            newPostText.trim() && dispatch(addPostAC())\n        },\n        addPostWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newPostText: string) => {\n            if (!e.shiftKey && e.key === 'Enter') {\n                e.preventDefault();\n                newPostText.trim() && dispatch(addPostAC())\n            }\n        },\n        updateNewPostText: (newPostText: string) => {\n            dispatch(updateNewPostTextAC(newPostText));\n        },\n        removePost: (id: number) => {\n            dispatch(removePostAC(id))\n        }\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n","import React from \"react\";\nimport styleModule from './Profile.module.css';\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\n\nexport const Profile = React.memo(() => {\n    return (\n        <div className={styleModule.content}>\n            <ProfileInfo/>\n            <MyPostsContainer/>\n        </div>\n    );\n})\n\n\n","export default __webpack_public_path__ + \"static/media/underConstruction.9d99f69c.png\";","import logo from './../../../underConstruction.png'\r\nimport styleModule from './UnderConstruction.module.css'\r\nexport const UnderConstruction = () => {\r\n    return (\r\n        <div className={styleModule.container}>\r\n            <img src={logo} alt=\"Under Construction\"/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport styleModule from './Music.module.css';\nimport {UnderConstruction} from \"../generic/UnderConstruction/UnderConstruction\";\n\n\nexport function Music(props:any) {\n    return (\n        <div>\n           <UnderConstruction/>\n        </div>\n    );\n}\n\n\n\n","import React from \"react\";\nimport styleModule from './News.module.css';\nimport {UnderConstruction} from \"../generic/UnderConstruction/UnderConstruction\";\n\n\nexport function News(props:any) {\n    return (\n        <div>\n            <UnderConstruction/>\n        </div>\n    );\n}\n\n","import React from \"react\";\nimport styleModule from './Settings.module.css';\nimport {UnderConstruction} from \"../generic/UnderConstruction/UnderConstruction\";\n\n\nexport function Settings() {\n    return (\n        <div>\n            <UnderConstruction/>\n        </div>\n    );\n}\n\n","export default __webpack_public_path__ + \"static/media/main-logo.8de3ea88.png\";","export type DialogType = {\r\n    id: number\r\n    /**\r\n     * Name of contact/friend\r\n     */\r\n    name: string\r\n    /**\r\n     * Image of contact/friend\r\n     */\r\n    image: string | null\r\n    /**\r\n     * Optional background color of component\r\n     */\r\n    background?: string\r\n    /**\r\n     * Optional color text of component\r\n     */\r\n    color?: string\r\n};\r\nexport type MessageType = {\r\n    id: number,\r\n    name: string,\r\n    message: string,\r\n    image: string | null,\r\n    time: string\r\n};\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album'\r\n        },\r\n        {id: 2, name: 'Dmitry', image: null},\r\n        {\r\n            id: 3,\r\n            name: 'Aleksey',\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album'\r\n        },\r\n        {id: 4, name: 'Ivan', image: null},\r\n        {id: 5, name: 'Mother', image: null}\r\n    ] as Array<DialogType>,\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            message: 'Hi',\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album',\r\n            time: '12:03'\r\n        },\r\n        {id: 2, name: 'Dmitry', message: 'Hi, how are you?', image: null, time: '13:01'},\r\n        {\r\n            id: 3,\r\n            name: 'Ivan',\r\n            message: 'Yo',\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album',\r\n            time: '13:08'\r\n        },\r\n        {id: 4, name: 'Mother', message: 'Why yo?', image: null, time: '14:05'}\r\n    ] as Array<MessageType>,\r\n    newMessageText: ''\r\n};\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"social/dialogs/ADD-MESSAGE\":\r\n            const newMessage: MessageType = {\r\n                id: state.messagesData.length + 1,\r\n                name: 'Someone',\r\n                message: state.newMessageText,\r\n                image: null,\r\n                time: new Date().toJSON().slice(11, 16)\r\n            };\r\n            return {...state, messagesData: [...state.messagesData, newMessage], newMessageText: ''}\r\n        case \"social/dialogs/UPDATE-NEW-MESSAGE-TEXT\":\r\n            return {...state, newMessageText: action.payload.newMessageText}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport type ActionType =\r\n    ReturnType<typeof addMessageAC> |\r\n    ReturnType<typeof updateNewMessageTextAC>\r\n\r\nexport const addMessageAC = () => ({type: 'social/dialogs/ADD-MESSAGE'} as const);\r\nexport const updateNewMessageTextAC = (newMessageText: string) => ({\r\n    type: 'social/dialogs/UPDATE-NEW-MESSAGE-TEXT',\r\n    payload: {newMessageText}\r\n} as const);","import React from \"react\";\nimport styleModule from './Dialog.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport userLogo from '../../../usersAvatars/user.png'\nimport {DialogType} from \"../../../redux/redusers/dialogsReducer/dialogsReducer\";\nimport styled from \"styled-components\";\n\nexport type DialogPropsType = DialogType\n\nexport const Dialog = React.memo(({\n                           id,\n                           name,\n                           image,\n                           background,\n                           color, ...props\n                       }: DialogPropsType) => {\n    const DialogWrapper = styled.div`\n    & {\n    background: ${background ? background : '#FF6347'};\n    }\n    & a {\n    color: ${color ? color : '#ffffff'};\n    }\n    \n    `;\n    const ContactAvatar = styled.div`\n    & img {\n    border: 1px solid ${color ? color : '#ffffff'};\n    }\n    `\n\n    return (\n        <DialogWrapper className={styleModule.dialog}>\n            <ContactAvatar className={styleModule.contactAvatar}>\n                <img src={image ? image : userLogo}/>\n            </ContactAvatar>\n            <NavLink to={`/dialogs/ ${id}`}>{name}</NavLink>\n        </DialogWrapper>\n    )\n})\n\n","import React from \"react\";\nimport styleModule from './Message.module.css';\nimport messageAva from '../../../usersAvatars/user.png'\nimport styled from \"styled-components\";\n\nexport type MessagePropsType = {\n    id: number,\n    /**\n     * Name of the interlocutor\n     */\n    name: string,\n    /**\n     * Text of message\n     */\n    message: string,\n    /**\n     * Image of the interlocutor\n     */\n    image: string | null,\n    /**\n     * Time of sending message\n     */\n    time: string\n    background: string\n    color: string\n}\n\nexport const Message = React.memo(({\n                            name,\n                            message,\n                            image,\n                            time,\n                            color,\n                            background, ...props\n                        }: MessagePropsType) => {\n    const MessageBlock = styled.div`\n    & {\n    background: ${background};\n    color: ${color}\n    }\n    &:before {\n    background: radial-gradient(circle at top left, transparent 50%, ${background} 50%);\n    }\n    `;\n    const Avatar = styled.div`\n    & {\n    border-color: ${background}\n    }\n    `;\n    return (\n        <div className={styleModule.messageWrapper}>\n            <Avatar className={styleModule.avatar}>\n                <img src={image ? image : messageAva}/>\n            </Avatar>\n            <MessageBlock className={styleModule.messageBlock}>\n                <div className={styleModule.name}>\n                    {name}\n                </div>\n                <div className={styleModule.message}>\n                    {message}\n                </div>\n                <div className={styleModule.time}>\n                    {time}\n                </div>\n            </MessageBlock>\n        </div>\n    )\n})\n\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport {Dialog} from \"./Dialog/Dialog\";\nimport {Message} from \"./Mesage/Message\";\nimport styleModule from './Dialogs.module.css';\nimport {Button} from \"../generic/Button/Button\";\nimport {Textarea} from \"../generic/Textarea/Textarea\";\nimport {BUTTON_STYLE} from \"../Profile/MyPosts/MyPosts\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\n\n\nconst MESSAGE_STYLE = {\n    background: '#ffffff',\n    color: '#757575'\n};\nconst DIALOG_STYLE = {\n    background: 'inherit',\n    color: '#ffffff'\n};\n\nexport const Dialogs = React.memo((props: DialogsPropsType) => {\n\n\n    const onAddMessageButton = () => {\n        props.addMessage(props.dialogsPage.newMessageText);\n    };\n    const onAddMessageWithEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        props.addMessageWithEnter(e, props.dialogsPage.newMessageText)\n    };\n    const onUpdateNewMessageText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updateNewMessageText(e.currentTarget.value)\n    };\n\n    return (\n        <div className={styleModule.dialogs}>\n            <div className={styleModule.heading}>\n                DIALOGS\n            </div>\n            <div className={styleModule.dialogs_items}>\n                {props.dialogsPage.dialogsData.map(dialog => <Dialog key={dialog.id}\n                                                                     background={DIALOG_STYLE.background}\n                                                                     color={DIALOG_STYLE.color}\n                                                                     {...dialog}/>)}\n            </div>\n            <div className={styleModule.messagesBlock}>\n                <div className={styleModule.messages}>\n                    {props.dialogsPage.messagesData.map(message => <Message key={message.id}\n                                                                            background={MESSAGE_STYLE.background}\n                                                                            color={MESSAGE_STYLE.color}\n                                                                            {...message}/>)}\n                </div>\n                <div className={styleModule.writeAndSendMessage}>\n                    <div className={styleModule.writeMessage}>\n                        <Textarea textareaValue={props.dialogsPage.newMessageText}\n                                  setTextareaValue={onUpdateNewMessageText}\n                                  onAddWithEnter={onAddMessageWithEnter}\n                                  placeholder={'Enter your message'}\n                                  background={'#ffffff'}\n                                  color={'#60575A'}/>\n\n                    </div>\n                    <div className={styleModule.sendMessage}>\n                        <Button name={'Send'}\n                                onClick={onAddMessageButton}\n                                backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                                background={BUTTON_STYLE.BACKGROUND}\n                                colorHover={BUTTON_STYLE.COLOR_HOVER}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n})\n\n","import React, {KeyboardEvent} from \"react\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {addMessageAC, InitialStateType, updateNewMessageTextAC} from \"../../redux/redusers/dialogsReducer/dialogsReducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\n\nexport type MapStateToPropsType = {\n    dialogsPage: InitialStateType\n}\n\nexport type MapDispatchToPropsType = {\n    addMessage: (newMessageText: string) => void\n    addMessageWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newMessageText: string) => void\n    updateNewMessageText: (newMessageText: string) => void\n}\n\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        addMessage: (newMessageText: string) => {\n            newMessageText.trim() && dispatch(addMessageAC())\n        },\n        addMessageWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newMessageText: string) => {\n            if (!e.shiftKey && e.key === 'Enter') {\n                e.preventDefault()\n                newMessageText.trim() && dispatch(addMessageAC())\n            }\n        },\n        updateNewMessageText: (newMessageText: string) => {\n            dispatch(updateNewMessageTextAC(newMessageText));\n        }\n    }\n}\n\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\n","import React from \"react\";\nimport styleModule from \"./User.module.css\";\nimport userPhotoDefault from \"./../../../usersAvatars/user.png\";\nimport {NavLink} from \"react-router-dom\";\nimport {UserType} from \"../../../redux/redusers/usersReducer/usersReducer\";\nimport {Button} from \"../../generic/Button/Button\";\nimport {BUTTON_STYLE} from \"../../Profile/MyPosts/MyPosts\";\nimport styled from \"styled-components\";\n\ntype UserPropsType = {\n    /**\n     * Callbock that add someone user in followers\n     */\n    becomeFollower: (userID: number) => void\n    /**\n     * Callbock that remove someone user from followers\n     */\n    stopBeingFollower: (userID: number) => void\n    background?:string\n    color?:string\n} & UserType\n\nexport const User = React.memo((props: UserPropsType) => {\n    const UserWrapper = styled.div`\n    & {\n    background: ${props.background ? props.background : 'tomato'};\n    color: ${props.color ? props.color : 'white'}\n    }\n    `\n    const Img = styled.img`\n    & {\n    border-color: ${props.color ? props.color : 'white'}\n    }\n    `\n    let onFollowClick = () => {\n        props.becomeFollower(props.id);\n    };\n    let onUnfollowClick = () => {\n        props.stopBeingFollower(props.id)\n    };\n    return (\n        <UserWrapper className={styleModule.userWrapper}>\n            <div className={styleModule.avatar}>\n                <NavLink to={`/profile/${props.id}`}>\n                    <Img src={props.photos.small !== null ? props.photos.small : userPhotoDefault} alt=\"\"/>\n                </NavLink>\n            </div>\n            <div className={styleModule.fullName}>\n                {props.name}\n            </div>\n            <div className={styleModule.status}>\n                <span>{props.status}</span>\n            </div>\n            <div className={styleModule.followed}>\n                {props.followed ?\n                    <Button name={'Unfollow'}\n                            onClick={onUnfollowClick}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}/> :\n                    <Button name={'Follow'}\n                            onClick={onFollowClick}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}/>\n                }\n            </div>\n        </UserWrapper>\n    )\n})\n","import React from \"react\";\nimport styleModule from './Users.module.css';\nimport {User} from \"./User/User\";\nimport {UsersPropsType} from \"./UsersContainer\";\nimport axios from \"axios\"\nimport {UserType} from \"../../redux/redusers/usersReducer/usersReducer\";\n\n\n\nexport type GetUsersDataType = {\n    error: string | null\n    items: Array<UserType>\n    totalCount: number\n}\n\nexport const Users = React.memo(({\n                                     usersPage,\n                                     becomeFollower,\n                                     stopBeingFollower,\n                                     ...props\n                                 }: UsersPropsType) => {\n    let userElements = usersPage.users.map(user => <User {...user}\n                                                         becomeFollower={becomeFollower}\n                                                         stopBeingFollower={stopBeingFollower}/>);\n    if (!usersPage.users.length) {\n        axios.get<GetUsersDataType>('https://social-network.samuraijs.com/api/1.0/users').then(response => {\n            props.setUsers(response.data.items)\n        })\n    }\n    return (\n        <div className={styleModule.usersWrapper}>\n            <div className={styleModule.usersBlock}>\n                {userElements}\n            </div>\n        </div>\n    )\n})\n\n","const FOLLOW = 'social/users/FOLLOW';\r\nconst UNFOLLOW = 'social/users/UNFOLLOW';\r\nconst SET_USERS = 'social/users/SET_USERS';\r\n\r\nexport type UserPhotoType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type UserType = {\r\n    /**\r\n     * User name\r\n     */\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string | null\r\n    /**\r\n     * User photos\r\n     */\r\n    photos: UserPhotoType\r\n    /**\r\n     * User status\r\n     */\r\n    status: null | string,\r\n    /**\r\n     * Value that indicates if you are following this user\r\n     */\r\n    followed: boolean\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    users: [] as UserType[]\r\n}\r\n\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: ActionType):InitialStateType => {\r\n    switch (action.type) {\r\n        case \"social/users/SET_USERS\":\r\n            return {\r\n                ...state, users: action.payload.users\r\n            }\r\n        case \"social/users/FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id === action.payload.userID ? {...user, followed: true} : user)\r\n            }\r\n        case \"social/users/UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id === action.payload.userID ? {...user, followed: false} : user)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionType =\r\n    ReturnType<typeof followAC> |\r\n    ReturnType<typeof unfollowAC> |\r\n    ReturnType<typeof setUsersAC>\r\n\r\n\r\nexport const followAC = (userID: number) => ({type: 'social/users/FOLLOW', payload: {userID}} as const)\r\nexport const unfollowAC = (userID: number) => ({type: 'social/users/UNFOLLOW', payload: {userID}} as const)\r\nexport const setUsersAC = (users: UserType[]) => ({type: 'social/users/SET_USERS', payload: {users}} as const)","import {connect} from \"react-redux\";\nimport {Users} from \"./Users\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {followAC, InitialStateType, setUsersAC, unfollowAC, UserType} from \"../../redux/redusers/usersReducer/usersReducer\";\nimport {Dispatch} from \"redux\";\n\ntype MapStateToPropsType = {\n    usersPage: InitialStateType\n}\ntype MapDispatchToPropsType = {\n    becomeFollower: (userID: number) => void\n    stopBeingFollower: (userID: number) => void\n    setUsers: (users: UserType[]) => void\n}\n\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType):MapStateToPropsType => {\n    return {\n        usersPage: state.usersPage\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch):MapDispatchToPropsType => {\n    return {\n        becomeFollower: (userID: number) => {\n            dispatch(followAC(userID))\n        },\n        stopBeingFollower: (userID: number) => {\n            dispatch(unfollowAC(userID))\n        },\n        setUsers: (users: UserType[]) => {\n            dispatch(setUsersAC(users))\n        }\n    }\n}\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {HashRouter, Navigate, Route, Routes} from \"react-router-dom\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport logo from './main-logo.png';\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\n\n\nexport type PATHType = {\n    PROFILE: string\n    DIALOGS: string\n    MUSIC: string\n    NEWS: string\n    USERS: string\n    SETTINGS: string\n}\nconst PATH: PATHType = {\n    PROFILE: '/profile',\n    DIALOGS: '/dialogs/*',\n    MUSIC: '/music',\n    NEWS: '/news',\n    USERS: '/users',\n    SETTINGS: '/settings'\n};\n\nexport const HEADER_STYLE = {\n    background: '#7D823F',\n    color: '#ffffff',\n    logo: logo\n};\n\nfunction App() {\n    return (\n        <HashRouter>\n            <div className=\"app_wrapper\">\n                <Header title={'Cloudpaper'}\n                        description={'Connecting Network'}\n                        background={HEADER_STYLE.background}\n                        color={HEADER_STYLE.color}\n                        logo={HEADER_STYLE.logo}/>\n                <Navbar/>\n                <div className=\"app_wrapper_content\">\n                    <Routes>\n                        <Route path='/' element={<Navigate to={PATH.PROFILE}/>}/>\n                        <Route path={PATH.PROFILE} element={<Profile />}/>\n                        <Route path={PATH.DIALOGS} element={<DialogsContainer/>}/>\n                        <Route path={PATH.MUSIC} element={<Music/>}/>\n                        <Route path={PATH.NEWS} element={<News/>}/>\n                        <Route path={PATH.USERS} element={<UsersContainer/>}/>\n                        <Route path={PATH.SETTINGS} element={<Settings/>}/>\n                    </Routes>\n                </div>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import {profileReducer} from \"./redusers/profileReducer/profileReducer\";\r\nimport {dialogsReducer} from \"./redusers/dialogsReducer/dialogsReducer\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport {usersReducer} from \"./redusers/usersReducer/usersReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        usersPage: usersReducer\r\n    }\r\n);\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}