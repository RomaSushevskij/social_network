{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Dialogs/Mesage/Message.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialog/Dialog.module.css","components/generic/Button/Button.module.css","components/generic/Textarea/Textarea.module.css","components/Navbar/Navbar.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","top-wallpaper.jpg","usersAvatars/user.png","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/redusers/profileReducer.ts","components/Profile/MyPosts/Posts/Post.tsx","components/generic/Button/Button.tsx","components/generic/Textarea/Textarea.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","main-logo.png","redux/redusers/dialogsReducer.ts","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Mesage/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","App.tsx","redux/redux-store.ts","index.tsx"],"names":["module","exports","Header","title","description","background","color","logo","styled","header","TitleDescription","div","className","styleModule","logoAndDescription","src","main_logo","title_description","loginStatus","Navbar","props","nav","item","to","profile","isActive","active","icon","faUserAlt","dialogs","faCommentDots","news","faNewspaper","music","faHeadphonesAlt","users","faUsers","settings","faSlidersH","ProfileInfo","profileInfo","top_wallpaper","alt","avatar","image","logo_avatar","ADD_POST","UPDATE_NEW_POST_TEXT","REMOVE_POST","initialState","postsData","id","name","message","likeCount","newPostText","addPostAC","type","Post","removePost","PostWrapper","postWrapper","avaBlock","ava_post","faTimes","onClick","onCrossClick","messageBlock","likesBlock","Button","ButtonWithBefore","button","backgroundHover","colorHover","style","Textarea","textareaValue","setTextareaValue","reference","placeholder","onAddWithEnter","styles","textarea","onChange","onKeyPress","value","ref","BUTTON_STYLE","POST_STYLE","MyPostsContainer","connect","state","profilePage","dispatch","addPost","trim","addPostWithEnter","e","shiftKey","key","preventDefault","updateNewPostText","payload","updateNewPostTextAC","removePostAC","myPosts","writePost","currentTarget","addPostButton","posts","map","post","Profile","content","Music","News","Settings","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","dialogsData","messagesData","time","newMessageText","addMessageAC","Dialog","DialogWrapper","ContactAvatar","dialog","contactAvatar","userLogo","Message","MessageBlock","Avatar","messageWrapper","messageAva","MESSAGE_STYLE","DIALOG_STYLE","DialogsContainer","dialogsPage","addMessage","addMessageWithEnter","updateNewMessageText","updateNewMessageTextAC","heading","dialogs_items","messagesBlock","messages","writeAndSendMessage","writeMessage","PATH","HEADER_STYLE","App","store","path","element","getState","bind","rootReducer","combineReducers","action","newPost","length","filter","p","newMessage","Date","toJSON","slice","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.309ae293.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1o3_i\",\"heading\":\"Dialogs_heading__2LCaS\",\"dialogs_items\":\"Dialogs_dialogs_items__1CN3_\",\"messagesBlock\":\"Dialogs_messagesBlock___yNFN\",\"messages\":\"Dialogs_messages__174fl\",\"sendMessage\":\"Dialogs_sendMessage__2OMjS\",\"writeAndSendMessage\":\"Dialogs_writeAndSendMessage__3VXCn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__rKeBu\",\"logoAndDescription\":\"Header_logoAndDescription__36SJL\",\"main_logo\":\"Header_main_logo__227Ld\",\"title_description\":\"Header_title_description__3Sd-q\",\"logo\":\"Header_logo__Z7xS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__2v9vO\",\"messageBlock\":\"Message_messageBlock__3LBDi\",\"name\":\"Message_name__3Gp6r\",\"message\":\"Message_message__9Gaxr\",\"time\":\"Message_time__2pDBU\",\"avatar\":\"Message_avatar__1V7_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__7ylqO\",\"avatar\":\"ProfileInfo_avatar__2EIzC\",\"image\":\"ProfileInfo_image__19lBH\",\"top_wallpaper\":\"ProfileInfo_top_wallpaper__1_yd0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrapper\":\"Post_postWrapper__2dad-\",\"avaBlock\":\"Post_avaBlock__1eypn\",\"messageBlock\":\"Post_messageBlock__q4MKJ\",\"removePost\":\"Post_removePost__ZIsFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__14xNj\",\"addPostButton\":\"MyPosts_addPostButton__3kHYc\",\"writePost\":\"MyPosts_writePost__rmb23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2L0-V\",\"contactAvatar\":\"Dialog_contactAvatar__2NdvE\",\"active\":\"Dialog_active__1Firc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__egdZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Textarea_textarea__3tLx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2lBSZ\",\"item\":\"Navbar_item__Ozyip\",\"icon\":\"Navbar_icon__2lJWr\",\"active\":\"Navbar_active__34byn\",\"settings\":\"Navbar_settings__2WR45\",\"users\":\"Navbar_users__rOSsB\"};","import React from \"react\";\r\nimport styleModule from './Header.module.css';\r\nimport styled from \"styled-components\";\r\n\r\nexport type HeaderPropsType = {\r\n    title: string\r\n    description?: string\r\n    background: string\r\n    color: string\r\n    logo?: string\r\n}\r\n\r\nexport function Header({\r\n                           title,\r\n                           description,\r\n                           background,\r\n                           color,\r\n                           logo, ...props\r\n                       }: HeaderPropsType) {\r\n    const Header = styled.header`\r\n    & {\r\n    background: ${background}\r\n    `;\r\n    const TitleDescription = styled.div`\r\n    & p {\r\n    color: ${color}\r\n    }\r\n    `;\r\n    return (\r\n        <Header className={styleModule.header}>\r\n            <div className={styleModule.logoAndDescription}>\r\n                <div className={styleModule.logo}>\r\n                    <img src={logo} className={styleModule.main_logo}/>\r\n                </div>\r\n                <TitleDescription className={styleModule.title_description}>\r\n                    <p>{title}</p>\r\n                    <p>{description}</p>\r\n                </TitleDescription>\r\n            </div>\r\n            <div className={styleModule.loginStatus}>\r\n\r\n            </div>\r\n        </Header>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\nimport './Navbar.module.css';\nimport styleModule from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n    faCommentDots,\n    faHeadphonesAlt,\n    faNewspaper,\n    faSlidersH,\n    faUserAlt,\n    faUsers\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport function Navbar(props: any) {\n    return (\n        <>\n            <nav className={styleModule.nav}>\n                <div className={styleModule.item}>\n                    <NavLink to={'/profile'}\n                             className={profile => profile.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faUserAlt} className={styleModule.icon}/> Profile\n                    </NavLink>\n                </div>\n                <div className={styleModule.item}>\n                    <NavLink to={'/dialogs'}\n                             className={dialogs => dialogs.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faCommentDots} className={styleModule.icon}/> Messages\n                    </NavLink>\n                </div>\n                <div className={styleModule.item}>\n                    <NavLink to={'/news'} className={news => news.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faNewspaper} className={styleModule.icon}/> News\n                    </NavLink>\n                </div>\n                <div className={styleModule.item}>\n                    <NavLink to={'/music'} className={music => music.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faHeadphonesAlt} className={styleModule.icon}/> Music\n                    </NavLink>\n                </div>\n                <div className={`${styleModule.item} ${styleModule.users}`}>\n                    <NavLink to={'/users'} className={users => users.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faUsers} className={styleModule.icon}/> Users\n                    </NavLink>\n                </div>\n                <div className={`${styleModule.item} ${styleModule.settings}`}>\n                    <NavLink to={'/settings'}\n                             className={settings => settings.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faSlidersH} className={styleModule.icon}/> Settings\n                    </NavLink>\n                </div>\n\n            </nav>\n        </>\n    )\n};\n","export default __webpack_public_path__ + \"static/media/top-wallpaper.47d6d9d7.jpg\";","export default __webpack_public_path__ + \"static/media/user.cb380ae4.png\";","import React from \"react\";\nimport styleModule from './ProfileInfo.module.css';\nimport top_wallpaper from \"../../../top-wallpaper.jpg\";\nimport logo_avatar from '../../../usersAvatars/user.png';\n\nexport function ProfileInfo(props: any) {\n\n\n    return (\n        <div className={styleModule.profileInfo}>\n            <div className={styleModule.top_wallpaper}>\n                <img src={top_wallpaper} alt=\"top_wallpaper\"/>\n            </div>\n            <div className={styleModule.avatar}>\n                <div className={styleModule.image}>\n                    <img src={logo_avatar}/>\n                </div>\n\n            </div>\n            <div className={styleModule.description}>\n\n            </div>\n        </div>\n    )\n};\n\n","import {ActionsTypes} from \"../redux-store\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst REMOVE_POST = 'REMOVE-POST';\r\n\r\nexport type PostType = {\r\n    id: number\r\n    name: string\r\n    message: string\r\n    likeCount: number\r\n    image: string | null\r\n    background?: string\r\n    color?: string\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti, eum.',\r\n            likeCount: 9,\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Mariya',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur cumque harum illo inventore maiores minus mollitia, quaerat quis rem voluptatibus.',\r\n            likeCount: 3,\r\n            image: null\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ivan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis est, et labore laborum nemo nisi.',\r\n            likeCount: 87,\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album'\r\n        }\r\n    ] as Array<PostType>,\r\n    newPostText: ''\r\n};\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: state.postsData.length + 1,\r\n                name: 'Someone',\r\n                message: state.newPostText,\r\n                likeCount: 0,\r\n                image: null\r\n            };\r\n            return {...state, postsData: [newPost, ...state.postsData], newPostText: ''}\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {...state, newPostText: action.payload.newPostText}\r\n        case REMOVE_POST:\r\n            return (\r\n                {...state, postsData: state.postsData.filter(p => p.id !== action.payload.id)}\r\n            );\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const addPostAC = () => ({type: ADD_POST} as const);\r\nexport const updateNewPostTextAC = (newPostText: string) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    payload: {newPostText}\r\n} as const);\r\nexport const removePostAC = (id: number) => ({type: REMOVE_POST, payload: {id}} as const);","import React from \"react\";\nimport styleModule from './Post.module.css'\nimport ava_post from '../../../../usersAvatars/user.png'\nimport {PostType} from \"../../../../redux/redusers/profileReducer\";\nimport styled from \"styled-components\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\n\ntype PostPropsType = PostType & { removePost: (id: number) => void };\n\nexport function Post({\n                         id,\n                         name,\n                         message,\n                         likeCount,\n                         image,\n                         background,\n                         color,\n                         removePost,\n                         ...props\n                     }: PostPropsType) {\n    const PostWrapper = styled.div`\n     & {\n        background: ${background ? background : '#FF6347'};\n        color:  ${color ? color : '#ffffff'};\n    }\n    `;\n\n    const onCrossClick = (id: number) => {\n        removePost(id);\n    };\n\n    return (\n        <PostWrapper className={styleModule.postWrapper}>\n            <div className={styleModule.avaBlock}>\n                <img src={image ? image : ava_post} alt=\"ava_post\"/>\n                <span>{name}</span>\n                <FontAwesomeIcon icon={faTimes} className={styleModule.removePost} onClick={() => onCrossClick(id)}/>\n            </div>\n            <div className={styleModule.messageBlock}>\n                {message}\n            </div>\n            <div className={styleModule.likesBlock}>\n                <span>❤</span> {likeCount}\n            </div>\n        </PostWrapper>\n\n    );\n};\n\n","import React from \"react\";\r\nimport style from './Button.module.css'\r\nimport styled from \"styled-components\";\r\n\r\ntype ButtonPropsType = {\r\n    name: string\r\n    onClick: () => void\r\n    backgroundHover: string\r\n    background: string\r\n    colorHover: string\r\n}\r\n\r\n\r\nexport const Button = ({name, onClick, ...props}: ButtonPropsType) => {\r\n    const ButtonWithBefore = styled.button`\r\n& {\r\nborder-color: ${props.backgroundHover};\r\ncolor: ${props.backgroundHover};\r\nbackground-color:${props.background}\r\n}\r\n&:before {\r\nbackground: ${props.backgroundHover};\r\n}\r\n&:hover {\r\ncolor: ${props.colorHover}\r\n}\r\n`;\r\n\r\n    const onClickButton = () => {\r\n        onClick()\r\n    };\r\n\r\n    return (\r\n        <ButtonWithBefore onClick={onClickButton} className={style.button}>{name}</ButtonWithBefore>\r\n    )\r\n}","import React, {ChangeEvent, KeyboardEvent, LegacyRef} from \"react\";\r\nimport style from './Textarea.module.css'\r\n\r\ntype TextareaPropsType = {\r\n    textareaValue: string\r\n    setTextareaValue: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n    onAddWithEnter?: (e: KeyboardEvent<HTMLTextAreaElement>) => void\r\n    reference?: LegacyRef<HTMLTextAreaElement>\r\n    placeholder: string\r\n    background: string\r\n    color: string\r\n}\r\n\r\nexport const Textarea = ({\r\n                             textareaValue,\r\n                             setTextareaValue,\r\n                             reference,\r\n                             placeholder,\r\n                             onAddWithEnter,\r\n                             background,\r\n                             color,\r\n                             ...restProps\r\n                         }: TextareaPropsType) => {\r\n    const styles = {\r\n        background: background,\r\n        color: color\r\n    };\r\n    return (\r\n        <textarea placeholder={placeholder}\r\n                  className={style.textarea}\r\n                  onChange={setTextareaValue}\r\n                  onKeyPress={onAddWithEnter}\r\n                  value={textareaValue}\r\n                  ref={reference}\r\n                  style={styles}\r\n        />\r\n    )\r\n};","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport styleModule from './MyPosts.module.css'\nimport {Post} from \"./Posts/Post\";\nimport {Button} from \"../../generic/Button/Button\";\nimport {Textarea} from \"../../generic/Textarea/Textarea\";\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\n\n\nexport const BUTTON_STYLE = {\n    BACKGROUND_HOVER: '#ffbf47',\n    BACKGROUND: '#ffe1a9',\n    COLOR_HOVER: '#ffffff'\n};\nexport const POST_STYLE = {\n    background: 'inherit',\n    color: '#ffffff'\n};\n\nexport function MyPosts(props: MyPostsPropsType) {\n\n    const onAddPostButton = () => {\n        props.addPost(props.newPostText);\n    };\n    const onAddPostWithEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        props.addPostWithEnter(e, props.newPostText);\n    };\n    const onUpdatePostText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updateNewPostText(e.currentTarget.value);\n    };\n\n\n    return (\n        <div className={styleModule.myPosts}>\n            <p>My posts</p>\n            <div>\n                <div className={styleModule.writePost}>\n                    <Textarea setTextareaValue={onUpdatePostText}\n                              textareaValue={props.newPostText}\n                              onAddWithEnter={onAddPostWithEnter}\n                              placeholder={'Here you can leave your post'}\n                              background={'#ffffff'}\n                              color={'#60575A'}/>\n                </div>\n                <div className={styleModule.addPostButton}>\n                    <Button name={'Add post'}\n                            onClick={onAddPostButton}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}/>\n                </div>\n            </div>\n            <div className={styleModule.posts}>\n                {props.postsData.map(post =>\n                    <Post\n                        key={post.id}\n                        background={POST_STYLE.background}\n                        color={POST_STYLE.color}\n                        removePost={props.removePost}\n                        {...post}/>\n                )}\n            </div>\n        </div>\n    );\n}\n","import React, {KeyboardEvent} from \"react\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {addPostAC, PostType, removePostAC, updateNewPostTextAC} from \"../../../redux/redusers/profileReducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\n\n\nexport type MapStateToPropsType = {\n    postsData: PostType[]\n    newPostText: string\n}\n\nexport type MapDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n    addPostWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newPostText: string) => void\n    updateNewPostText: (newPostText: string) => void\n    removePost: (id: number) => void\n}\n\nexport type MyPostsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        postsData: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        addPost: (newPostText: string) => {\n            newPostText.trim() && dispatch(addPostAC())\n        },\n        addPostWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newPostText: string) => {\n            if (!e.shiftKey && e.key === 'Enter') {\n                e.preventDefault();\n                newPostText.trim() && dispatch(addPostAC())\n            }\n        },\n        updateNewPostText: (newPostText: string) => {\n            dispatch(updateNewPostTextAC(newPostText));\n        },\n        removePost: (id: number) => {\n            dispatch(removePostAC(id))\n        }\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n","import React from \"react\";\nimport styleModule from './Profile.module.css';\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\nimport {InitialStateType} from \"../../redux/redusers/profileReducer\";\nimport {ActionsTypes} from \"../../redux/redux-store\";\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\n\ntype ProfilePropsType = {\n    profilePage: InitialStateType\n    dispatch: (action: ActionsTypes) => void\n}\n\nexport function Profile(props: ProfilePropsType) {\n    return (\n        <div className={styleModule.content}>\n            <ProfileInfo/>\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\n\n","import React from \"react\";\nimport styleModule from './Music.module.css';\n\n\nexport function Music(props:any) {\n    return (\n        <div>\n           Music\n        </div>\n    );\n}\n\n\n\n","import React from \"react\";\nimport styleModule from './News.module.css';\n\n\nexport function News(props:any) {\n    return (\n        <div>\n           News\n        </div>\n    );\n}\n\n","import React from \"react\";\nimport styleModule from './Settings.module.css';\n\n\nexport function Settings() {\n    return (\n        <div>\n            Settings\n        </div>\n    );\n}\n\n","export default __webpack_public_path__ + \"static/media/main-logo.8de3ea88.png\";","import {ActionsTypes} from \"../redux-store\";\r\n\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    /**\r\n     * Name of contact/friend\r\n     */\r\n    name: string\r\n    /**\r\n     * Image of contact/friend\r\n     */\r\n    image: string | null\r\n    /**\r\n     * Optional background color of component\r\n     */\r\n    background?: string\r\n    /**\r\n     * Optional color text of component\r\n     */\r\n    color?: string\r\n};\r\nexport type MessageType = {\r\n    id: number,\r\n    name: string,\r\n    message: string,\r\n    image: string | null,\r\n    time: string\r\n};\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album'\r\n        },\r\n        {id: 2, name: 'Dmitry', image: null},\r\n        {\r\n            id: 3,\r\n            name: 'Aleksey',\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album'\r\n        },\r\n        {id: 4, name: 'Ivan', image: null},\r\n        {id: 5, name: 'Mother', image: null}\r\n    ] as Array<DialogType>,\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            message: 'Hi',\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album',\r\n            time: '12:03'\r\n        },\r\n        {id: 2, name: 'Dmitry', message: 'Hi, how are you?', image: null, time: '13:01'},\r\n        {\r\n            id: 3,\r\n            name: 'Ivan',\r\n            message: 'Yo',\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album',\r\n            time: '13:08'\r\n        },\r\n        {id: 4, name: 'Mother', message: 'Why yo?', image: null, time: '14:05'}\r\n    ] as Array<MessageType>,\r\n    newMessageText: ''\r\n};\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage: MessageType = {\r\n                id: state.messagesData.length + 1,\r\n                name: 'Someone',\r\n                message: state.newMessageText,\r\n                image: null,\r\n                time: new Date().toJSON().slice(11, 16)\r\n\r\n            };\r\n            return {...state, messagesData: [...state.messagesData, newMessage], newMessageText: ''}\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            return {...state, newMessageText: action.payload.newMessageText}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const addMessageAC = () => ({type: ADD_MESSAGE} as const);\r\nexport const updateNewMessageTextAC = (newMessageText: string) => ({\r\n    type: UPDATE_NEW_MESSAGE_TEXT,\r\n    payload: {newMessageText}\r\n} as const);","import React from \"react\";\nimport styleModule from './Dialog.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport userLogo from '../../../usersAvatars/user.png'\nimport {DialogType} from \"./../../../redux/redusers/dialogsReducer\";\nimport styled from \"styled-components\";\n\nexport type DialogPropsType = DialogType\n\nexport function Dialog({\n                           id,\n                           name,\n                           image,\n                           background,\n                           color, ...props\n                       }: DialogPropsType) {\n    const DialogWrapper = styled.div`\n    & {\n    background: ${background ? background : '#FF6347'};\n    }\n    & a {\n    color: ${color ? color : '#ffffff'};\n    }\n    \n    `;\n    const ContactAvatar = styled.div`\n    & img {\n    border: 1px solid ${color ? color : '#ffffff'};\n    }\n    `\n\n    return (\n        <DialogWrapper className={styleModule.dialog}>\n            <ContactAvatar className={styleModule.contactAvatar}>\n                <img src={image ? image : userLogo}/>\n            </ContactAvatar>\n            <NavLink to={`/dialogs/ ${id}`}>{name}</NavLink>\n        </DialogWrapper>\n    )\n}\n\n","import React from \"react\";\nimport styleModule from './Message.module.css';\nimport messageAva from '../../../usersAvatars/user.png'\nimport styled from \"styled-components\";\n\nexport type MessagePropsType = {\n    id: number,\n    name: string,\n    message: string,\n    image: string | null,\n    time: string\n    background:string\n    color:string\n}\n\nexport function Message({\n                            name,\n                            message,\n                            image,\n                            time,\n                            color,\n                            background, ...props\n                        }: MessagePropsType) {\n    const MessageBlock = styled.div`\n    & {\n    background: ${background};\n    color: ${color}\n    }\n    &:before {\n    background: radial-gradient(circle at top left, transparent 50%, ${background} 50%);\n    }\n    `;\n    const Avatar = styled.div`\n    & {\n    border-color: ${background}\n    }\n    `;\n    return (\n        <div className={styleModule.messageWrapper}>\n            <Avatar className={styleModule.avatar}>\n                <img src={image ? image : messageAva}/>\n            </Avatar>\n            <MessageBlock className={styleModule.messageBlock}>\n                <div className={styleModule.name}>\n                    {name}\n                </div>\n                <div className={styleModule.message}>\n                    {message}\n                </div>\n                <div className={styleModule.time}>\n                    {time}\n                </div>\n            </MessageBlock>\n        </div>\n    )\n}\n\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport {Dialog} from \"./Dialog/Dialog\";\nimport {Message} from \"./Mesage/Message\";\nimport styleModule from './Dialogs.module.css';\nimport {Button} from \"../generic/Button/Button\";\nimport {Textarea} from \"../generic/Textarea/Textarea\";\nimport {BUTTON_STYLE} from \"../Profile/MyPosts/MyPosts\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\n\n\nconst MESSAGE_STYLE = {\n    background: '#ffffff',\n    color: '#757575'\n};\nconst DIALOG_STYLE = {\n    background: 'inherit',\n    color: '#ffffff'\n};\n\nexport function Dialogs(props: DialogsPropsType) {\n\n\n    const onAddMessageButton = () => {\n        props.addMessage(props.dialogsPage.newMessageText);\n    };\n    const onAddMessageWithEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        props.addMessageWithEnter(e, props.dialogsPage.newMessageText)\n    };\n    const onUpdateNewMessageText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updateNewMessageText(e.currentTarget.value)\n    };\n\n    return (\n        <div className={styleModule.dialogs}>\n            <div className={styleModule.heading}>\n                DIALOGS\n            </div>\n            <div className={styleModule.dialogs_items}>\n                {props.dialogsPage.dialogsData.map(dialog => <Dialog key={dialog.id}\n                                                                     background={DIALOG_STYLE.background}\n                                                                     color={DIALOG_STYLE.color}\n                                                                     {...dialog}/>)}\n            </div>\n            <div className={styleModule.messagesBlock}>\n                <div className={styleModule.messages}>\n                    {props.dialogsPage.messagesData.map(message => <Message key={message.id}\n                                                                            background={MESSAGE_STYLE.background}\n                                                                            color={MESSAGE_STYLE.color}\n                                                                            {...message}/>)}\n                </div>\n                <div className={styleModule.writeAndSendMessage}>\n                    <div className={styleModule.writeMessage}>\n                        <Textarea textareaValue={props.dialogsPage.newMessageText}\n                                  setTextareaValue={onUpdateNewMessageText}\n                                  onAddWithEnter={onAddMessageWithEnter}\n                                  placeholder={'Enter your message'}\n                                  background={'#ffffff'}\n                                  color={'#60575A'}/>\n\n                    </div>\n                    <Button name={'Send'}\n                            onClick={onAddMessageButton}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n","import React, {KeyboardEvent} from \"react\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {addMessageAC, InitialStateType, updateNewMessageTextAC} from \"../../redux/redusers/dialogsReducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\n\nexport type MapStateToPropsType = {\n    dialogsPage: InitialStateType\n}\n\nexport type MapDispatchToPropsType = {\n    addMessage: (newMessageText: string) => void\n    addMessageWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newMessageText: string) => void\n    updateNewMessageText: (newMessageText: string) => void\n}\n\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        addMessage: (newMessageText: string) => {\n            newMessageText.trim() && dispatch(addMessageAC())\n        },\n        addMessageWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newMessageText: string) => {\n            if (!e.shiftKey && e.key === 'Enter') {\n                e.preventDefault()\n                newMessageText.trim() && dispatch(addMessageAC())\n            }\n        },\n        updateNewMessageText: (newMessageText: string) => {\n            dispatch(updateNewMessageTextAC(newMessageText));\n        }\n    }\n}\n\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {HashRouter, Navigate, Route, Routes} from \"react-router-dom\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {StoreType} from \"./redux/redux-store\";\nimport logo from './main-logo.png';\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\n\n\nexport type AppPropsType = {\n    store: StoreType\n}\n\nexport type PATHType = {\n    PROFILE: string\n    DIALOGS: string\n    MUSIC: string\n    NEWS: string\n    SETTINGS: string\n}\nconst PATH: PATHType = {\n    PROFILE: '/profile',\n    DIALOGS: '/dialogs/*',\n    MUSIC: '/music',\n    NEWS: '/news',\n    SETTINGS: '/settings'\n};\n\nexport const HEADER_STYLE = {\n    background: '#7D823F',\n    color: '#ffffff',\n    logo: logo\n};\n\nfunction App({store, ...restProps}: AppPropsType) {\n    return (\n        <HashRouter>\n            <div className=\"app_wrapper\">\n                <Header title={'Cloudpaper'}\n                        description={'Connecting Network'}\n                        background={HEADER_STYLE.background}\n                        color={HEADER_STYLE.color}\n                        logo={HEADER_STYLE.logo}/>\n                <Navbar/>\n                <div className=\"app_wrapper_content\">\n                    <Routes>\n                        <Route path='/' element={<Navigate to={PATH.PROFILE}/>}/>\n                        <Route path={PATH.PROFILE} element={<Profile profilePage={store.getState().profilePage}\n                                                                     dispatch={store.dispatch.bind(store)}/>}/>\n                        <Route path={PATH.DIALOGS} element={<DialogsContainer/>}/>\n                        <Route path={PATH.MUSIC} element={<Music/>}/>\n                        <Route path={PATH.NEWS} element={<News/>}/>\n                        <Route path={PATH.SETTINGS} element={<Settings/>}/>\n                    </Routes>\n                </div>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import {addPostAC, profileReducer, removePostAC, updateNewPostTextAC} from \"./redusers/profileReducer\";\r\nimport {addMessageAC, dialogsReducer, updateNewMessageTextAC} from \"./redusers/dialogsReducer\";\r\nimport {combineReducers, createStore} from \"redux\";\r\n\r\n\r\nexport type ActionsTypes =\r\n    ReturnType<typeof addPostAC> |\r\n    ReturnType<typeof updateNewPostTextAC> |\r\n    ReturnType<typeof addMessageAC> |\r\n    ReturnType<typeof updateNewMessageTextAC> |\r\n    ReturnType<typeof removePostAC>\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer\r\n    }\r\n);\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport const store = createStore(rootReducer);\r\nexport type StoreType = typeof store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App store={store}/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}