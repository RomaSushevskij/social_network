{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navbar/NavLink/CustomNavLink.tsx","components/generic/Button/Button.tsx","components/Navbar/Navbar.tsx","underConstruction.png","components/generic/UnderConstruction/UnderConstruction.tsx","components/Music/Music.tsx","components/News/News.tsx","hoc/withAuthRedirect.tsx","components/Settings/Settings.tsx","api/api.ts","main-logo.png","redux/redusers/dialogsReducer/dialogsReducer.ts","usersAvatars/user.png","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Mesage/Message.tsx","components/generic/Textarea/Textarea.tsx","components/Profile/MyPosts/Posts/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/Users/User/User.tsx","components/generic/Paginator/Paginator.tsx","components/generic/Preloader/Preloader.tsx","components/Users/Users.tsx","redux/redusers/usersReducer/usersReducer.ts","redux/redusers/profileReducer/profileReducer.ts","components/Users/UsersContainer.tsx","hoc/withRouter.tsx","redux/redusers/auth/authReducer.ts","top-wallpaper.jpg","components/generic/InputText/InputText.tsx","components/generic/EditableSpan/EditableSpan.tsx","components/Profile/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/generic/Checkbox/Checkbox.tsx","components/forms/LoginForm/Login.tsx","components/Login/Login.tsx","App.tsx","redux/redux-store.ts","index.tsx","components/Dialogs/Mesage/Message.module.css","components/Navbar/Navbar.module.css","components/Header/Header.module.css","components/Dialogs/Dialogs.module.css","components/generic/Paginator/Paginator.module.css","components/generic/EditableSpan/EditableSpan.module.css","components/forms/LoginForm/LoginForm.module.css","components/generic/InputText/InputText.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Users/User/User.module.css","components/Profile/MyPosts/MyPosts.module.css","components/generic/Checkbox/Checkbox.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Users/Users.module.css","components/generic/Preloader/Preloader.module.css","components/generic/Button/Button.module.css","components/generic/UnderConstruction/UnderConstruction.module.css","components/generic/Textarea/Textarea.module.css","components/Login/Login.module.css"],"names":["module","exports","CustomNavLink","path","title","iconTitle","resultClassName","styleModule","item","users","className","to","nav","isActive","active","icon","JSON","parse","Button","React","memo","name","onClick","disabled","props","ButtonWithBefore","styled","button","backgroundHover","background","colorHover","style","NavbarContainer","navigate","useNavigate","navLinksArr","stringify","faUserAlt","withAuthRedirect","faCommentDots","faNewspaper","faHeadphonesAlt","faUsers","faSlidersH","useState","navLinks","resultNavLinks","isAuth","filter","customNavLinks","map","navLink","buttonBlock","Navbar","connect","state","auth","UnderConstruction","container","src","logo","alt","Music","News","mapStateToPropsAuth","WrappedComponent","FOLLOW_UNFOLLOW_RESULT_CODES","RESPONSE_RESULT_CODES","SettingsContainer","initialState","dialogsData","id","image","messagesData","userId","message","time","newMessageText","Dialog","color","DialogWrapper","div","ContactAvatar","dialog","contactAvatar","userLogo","dialogActive","Message","meBackground","meColor","MessageBlock","Avatar","messageWrapperStyle","messageWrapper","meMessageWrapper","messageBlockStyle","messageBlock","meMessageBlock","avatar","messageAva","Textarea","textareaValue","setTextareaValue","reference","placeholder","onAddWithEnter","styles","textarea","onChange","onKeyPress","value","ref","Post","likes","isLike","removePost","likePost","PostWrapper","LikesDiv","postWrapper","avaBlock","ava_post","faTimes","onCrossClick","onLikeClick","likesBlock","likeCount","BUTTON_STYLE","POST_STYLE","MyPosts","myPosts","writePost","e","updateNewPostText","currentTarget","newPostText","shiftKey","key","preventDefault","trim","addPost","addPostButton","posts","postsData","post","MESSAGE_STYLE","DIALOG_STYLE","Dialogs","dialogs","heading","dialogs_items","dialogsPage","messagesBlock","messages","writeAndSendMessage","writeMessage","updateNewMessageText","addMessageWithEnter","sendMessage","addMessage","DialogsContainer","compose","dispatch","type","payload","updateNewMessageTextAC","User","UserWrapper","Img","img","isFollowingButtonDisabled","followingInProcessUsersId","includes","userWrapper","photos","small","userPhotoDefault","fullName","status","followed","stopBeingFollower","becomeFollower","Paginator","portionSize","useMemo","pageCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionNumber","setPortionNumber","portionCount","leftPortionPageNumber","rightPortionPageNumber","paginator","firstPage","pagesToBack","threeDots","page","currentPage","selectedPage","onChangePage","pagesToForward","lastPage","Preloader","size","preloaderBlock","fontSize","preloaderIcon","faSpinner","Users","usersTotalCount","isFetching","toggleFollowingInProcess","userElements","user","usersWrapper","usersBlock","USERS_ACTIONS_TYPES","instance_1","axios","create","baseURL","withCredentials","headers","usersAPI","get","then","response","data","delete","profileAPI","put","authMeAPI","PROFILE_ACTIONS_TYPES","setUsers","SET_USERS","setIsFetchingValue","SET_IS_FETCHING_VALUE","followingInProcess","TOGGLE_FOLLOWING_IN_PROCESS","UsersApiContainer","pageNumber","repeatGetUsers","this","getUsers","nextProps","nextState","Component","UsersContainer","usersPage","userID","resultCode","success","FOLLOW","UNFOLLOW","items","totalCount","SET_USERS_TOTAL_COUNT","SET_CURRENT_PAGE","AUTH_ACTIONS_TYPES","profile","setStatus","SET_STATUS","InputText","onChangeText","onEnter","error","spanClassName","customStyle","field","restProps","form","meta","finalSpanClassName","s","finalInputClassName","errorInput","superInput","inputWrapper","EditableSpan","editMode","onEnterCallback","setState","onBlurCallback","onBlur","onDoubleClickCallBack","onDoubleClick","spanProps","autoFocus","children","restSpanProps","editSpan","editableSpanWrapper","CSSTransition","in","timeout","classNames","unmountOnExit","mountOnEnter","inputStyle","spanWrapper","editPen","faPencilAlt","ProfileStatus","onBlurEnterCallback","updateStatus","prevProps","prevState","snapshot","profileStatus","undefined","PureComponent","ProfileInfo","profileInfo","top_wallpaper","avatarAndFullName","large","logo_avatar","description","wrapper_description","aboutMe","lookingForAJob","statusJob","faCheck","iconYes","iconNot","descriptionJob","lookingForAJobDescription","MyPostsContainer","profilePage","ADD_POST","UPDATE_NEW_POST_TEXT","REMOVE_POST","LIKE_POST","Profile","content","params","ProfileAPIContainer","refreshProfile","getProfile","getStatus","Number","ProfileContainer","SET_PROFILE","useParams","Header","header","TitleDescription","logoAndDescription","main_logo","title_description","loginStatus","loginAndAvatar","loginValue","email","login","HeaderAPIContainer","render","HEADER_STYLE","getAuthorizationInfo","HeaderContainer","getState","SET_AUTH_USER_DATA","setAuthUserData","SET_FULL_NAME_AND_AVATAR","setFullNameAndAvatar","Checkbox","onChangeChecked","bgColor","FakeFlagSpan","span","InputCheckbox","input","Label","label","checkbox","checked","fakeFlag","LoginForm","wrapperLoginForm","initialValues","password","rememberMe","onSubmit","values","setSubmitting","console","log","isSubmitting","formWrapper","formElement","component","checkMark","CheckBoxField","Login","wrapperLogin","PATH","App","element","rootReducer","combineReducers","action","newPost","length","p","newMessage","Date","toLocaleTimeString","slice","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b11f4737.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__7ylqO\",\"avatarAndFullName\":\"ProfileInfo_avatarAndFullName__5j74l\",\"image\":\"ProfileInfo_image__19lBH\",\"fullName\":\"ProfileInfo_fullName__15UDG\",\"top_wallpaper\":\"ProfileInfo_top_wallpaper__1_yd0\",\"description\":\"ProfileInfo_description__3f-6U\",\"aboutMe\":\"ProfileInfo_aboutMe__AeW_S\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__h-vFk\",\"statusJob\":\"ProfileInfo_statusJob__2KhXS\",\"heading\":\"ProfileInfo_heading__1KCBL\",\"iconYes\":\"ProfileInfo_iconYes__3682c\",\"iconNot\":\"ProfileInfo_iconNot__1bYWv\",\"descriptionJob\":\"ProfileInfo_descriptionJob__omSRg\"};","import styleModule from \"../Navbar.module.css\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {NavLinkItem} from \"../Navbar\";\r\n\r\nexport const CustomNavLink = ({path, title, iconTitle}: NavLinkItem) => {\r\n    const resultClassName = title === 'Users' ?\r\n        `${styleModule.item} ${styleModule.users}` :\r\n        styleModule.item\r\n    return (\r\n        <div className={resultClassName}>\r\n            <NavLink to={path}\r\n                     className={nav => nav.isActive ? styleModule.active : ''}>\r\n                <FontAwesomeIcon icon={JSON.parse(iconTitle)} className={styleModule.icon}/>{title}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport style from './Button.module.css'\r\nimport styled from \"styled-components\";\r\n\r\ntype ButtonPropsType = {\r\n    name: string\r\n    onClick?: () => void\r\n    backgroundHover?: string\r\n    background?: string\r\n    colorHover?: string\r\n    disabled?: boolean\r\n}\r\n\r\n\r\nexport const Button = React.memo(({name, onClick, disabled, ...props}: ButtonPropsType) => {\r\n    const ButtonWithBefore = styled.button`\r\n& {\r\nborder-color: ${props.backgroundHover ? props.backgroundHover : '#ffbf47'};\r\ncolor: ${props.backgroundHover ? props.backgroundHover : '#ffbf47'};\r\nbackground-color:${props.background ? props.background : '#ffe1a9'}\r\n}\r\n&:before {\r\nbackground: ${props.backgroundHover ? props.backgroundHover : '#ffbf47'};\r\n}\r\n&:hover {\r\ncolor: ${props.colorHover ? props.colorHover : '#ffffff'}\r\n}\r\n`;\r\n\r\n    const onClickButton = () => {\r\n        onClick && onClick()\r\n    };\r\n\r\n    return (\r\n        <ButtonWithBefore onClick={onClickButton}\r\n                          className={style.button}\r\n                          disabled={disabled}>\r\n            {name}\r\n        </ButtonWithBefore>\r\n    )\r\n})","import React, {useState} from \"react\";\nimport './Navbar.module.css';\nimport styleModule from './Navbar.module.css';\nimport {\n    faCommentDots,\n    faHeadphonesAlt,\n    faNewspaper,\n    faSlidersH,\n    faUserAlt,\n    faUsers\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {CustomNavLink} from \"./NavLink/CustomNavLink\";\nimport {Button} from \"../generic/Button/Button\";\nimport {Navigate,useNavigate} from 'react-router-dom';\n\n\nexport type NavLinkItem = {\n    title: string\n    path: string\n    iconTitle: string\n    withAuthRedirect: boolean\n}\n\n\nexport const NavbarContainer = React.memo((props: MapStateToPropsType) => {\n    const navigate = useNavigate()\n\n    const navLinksArr: NavLinkItem[] = [\n        {title: 'Profile', path: '/profile', iconTitle: JSON.stringify(faUserAlt), withAuthRedirect: true,},\n        {title: 'Messages', path: '/dialogs', iconTitle: JSON.stringify(faCommentDots), withAuthRedirect: true,},\n        {title: 'News', path: '/news', iconTitle: JSON.stringify(faNewspaper), withAuthRedirect: false,},\n        {title: 'Music', path: '/music', iconTitle: JSON.stringify(faHeadphonesAlt), withAuthRedirect: false,},\n        {title: 'Users', path: '/users', iconTitle: JSON.stringify(faUsers), withAuthRedirect: false,},\n        {title: 'Settings', path: '/settings', iconTitle: JSON.stringify(faSlidersH), withAuthRedirect: true,},\n    ]\n    const [navLinks, setNavLinks] = useState<NavLinkItem[]>(navLinksArr)\n\n    let resultNavLinks = navLinks\n    if (!props.isAuth) {\n        resultNavLinks = navLinks.filter(nav => !nav.withAuthRedirect)\n    }\n\n    const customNavLinks = resultNavLinks.map(navLink => {\n            return (\n                <CustomNavLink key={navLink.title} {...navLink}/>\n            )\n\n    })\n    return (\n        <>\n            <nav className={styleModule.nav}>\n                {customNavLinks}\n                {!props.isAuth && <div className={styleModule.buttonBlock}>\n                    <Button name={'Login'} onClick={()=>navigate('/login')}/>\n                </div>}\n            </nav>\n\n        </>\n    )\n})\n\nconst mapStateToProps = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth\n})\ntype MapStateToPropsType = {\n    isAuth: boolean\n}\n\nexport const Navbar = connect(mapStateToProps)(NavbarContainer)\n","export default __webpack_public_path__ + \"static/media/underConstruction.9d99f69c.png\";","import logo from './../../../underConstruction.png'\r\nimport styleModule from './UnderConstruction.module.css'\r\nexport const UnderConstruction = () => {\r\n    return (\r\n        <div className={styleModule.container}>\r\n            <img src={logo} alt=\"Under Construction\"/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport styleModule from './Music.module.css';\nimport {UnderConstruction} from \"../generic/UnderConstruction/UnderConstruction\";\n\n\nexport function Music(props:any) {\n    return (\n        <div>\n           <UnderConstruction/>\n        </div>\n    );\n}\n\n\n\n","import React from \"react\";\nimport styleModule from './News.module.css';\nimport {UnderConstruction} from \"../generic/UnderConstruction/UnderConstruction\";\n\n\nexport function News(props:any) {\n    return (\n        <div>\n            <UnderConstruction/>\n        </div>\n    );\n}\n\n","import React from 'react';\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom'\r\n\r\n\r\nconst mapStateToPropsAuth = (state:AppStateType):WithAuthRedirectComponentType => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\ntype WithAuthRedirectComponentType = {\r\n    isAuth:boolean\r\n}\r\n\r\nexport const withAuthRedirect = (WrappedComponent: typeof React.Component | React.FC) => {\r\n\r\n    const WithAuthRedirectComponent = (props:WithAuthRedirectComponentType) => {\r\n        if(!props.isAuth) {\r\n            return <Navigate to={'/login'}/>\r\n        }\r\n        return (\r\n            <WrappedComponent {...props}/>\r\n        )\r\n    }\r\n    return connect(mapStateToPropsAuth)(WithAuthRedirectComponent)\r\n}","import React from \"react\";\nimport styleModule from './Settings.module.css';\nimport {UnderConstruction} from \"../generic/UnderConstruction/UnderConstruction\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\nfunction Settings(props:any) {\n       return (\n        <div>\n            <UnderConstruction/>\n        </div>\n    );\n}\n\nexport const SettingsContainer = withAuthRedirect(Settings)\n\n","import axios from 'axios'\r\nimport {UserType} from \"../redux/redusers/usersReducer/usersReducer\";\r\nimport {ProfileType} from \"../redux/redusers/profileReducer/profileReducer\";\r\n\r\n//types------------------------------------------types\r\n//↓\r\n//USERS---\r\ntype GetUsersDataType = {\r\n    error: string | null\r\n    items: Array<UserType>\r\n    totalCount: number\r\n}\r\nexport type PostFollowDataType = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    data: object\r\n    fieldsErrors: Array<any>\r\n}\r\nexport type DeleteFollowDataType = PostFollowDataType\r\nexport enum FOLLOW_UNFOLLOW_RESULT_CODES {\r\n    success = 0,\r\n    error = 1,\r\n}\r\n\r\n//PROFILE---\r\ntype GetProfileDataType = ProfileType\r\ntype UpdateStatusDataType = {\r\n    data: {}\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    resultCode: number\r\n}\r\n\r\n//AUTH---\r\nexport type AuthUserDataType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n}\r\nexport type GetAuthUserDataType = {\r\n    data: AuthUserDataType\r\n    fieldsErrors: Array<any>\r\n    messages: Array<string>\r\n    resultCode: number\r\n}\r\nexport enum RESPONSE_RESULT_CODES {\r\n    success = 0,\r\n    error = 1,\r\n}\r\n\r\n//↑\r\n//types------------------------------------------types\r\n\r\nconst instance_1 = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"10732160-f45a-4879-8e6f-b2819bc13c24\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(pageSize: number, currentPage: number) {\r\n        return instance_1.get<GetUsersDataType>(`users?count=${pageSize}&page=${currentPage}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    becomeFollower(userId: number) {\r\n        return instance_1.post<PostFollowDataType>(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    stopBeingFollower(userId: number) {\r\n        return instance_1.delete<DeleteFollowDataType>(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string | number) {\r\n        return instance_1.get<GetProfileDataType>(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getStatus(userId:number) {\r\n        return instance_1.get<string>(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status:string) {\r\n        return instance_1.put<UpdateStatusDataType>(`/profile/status`, {status})\r\n            .then(response => {\r\n                return response\r\n            })\r\n    }\r\n}\r\n\r\nexport let authMeAPI = {\r\n    getAuthorizationInfo() {\r\n        return instance_1.get<GetAuthUserDataType>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n}\r\n","export default __webpack_public_path__ + \"static/media/main-logo.8de3ea88.png\";","export type DialogType = {\r\n    id: number\r\n    /**\r\n     * Name of contact/friend\r\n     */\r\n    name: string\r\n    /**\r\n     * Image of contact/friend\r\n     */\r\n    image: string | null\r\n    /**\r\n     * Optional background color of component\r\n     */\r\n    background?: string\r\n    /**\r\n     * Optional color text of component\r\n     */\r\n    color?: string\r\n};\r\nexport type MessageType = {\r\n    id: number\r\n    userId: number\r\n    name: string\r\n    message: string\r\n    image: string | null\r\n    time: string\r\n};\r\nexport type InitialStateDialogsType = typeof initialState\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album'\r\n        },\r\n        {id: 2, name: 'Dmitry', image: null},\r\n        {\r\n            id: 3,\r\n            name: 'Aleksey',\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album'\r\n        },\r\n        {id: 4, name: 'Ivan', image: null},\r\n        {id: 5, name: 'Mother', image: null}\r\n    ] as Array<DialogType>,\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            userId: 1,\r\n            name: 'Ruslan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. In, rem!',\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album',\r\n            time: '12:03'\r\n        },\r\n\r\n        {id: 2, userId: 20392, name: 'Me', message: 'Lorem ipsum dolor !', image: null, time: '12:10'},\r\n        {id: 3, name: 'Dmitry', userId: 2, message: 'Lorem ipsum dolor sit amet', image: null, time: '13:01'},\r\n        {\r\n            id: 4,\r\n            name: 'Ivan',\r\n            userId: 3,\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album',\r\n            time: '13:08'\r\n        },\r\n        {\r\n            id: 5,\r\n            userId: 20392,\r\n            name: 'Me',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',\r\n            image: null,\r\n            time: '13:49'\r\n        },\r\n        {id: 6, name: 'Mother', userId: 4, message: 'Lorem ipsum dolor !', image: null, time: '14:05'},\r\n        {id: 7, name: 'Me', message: 'Lorem ipsum dolor', image: null, time: '14:08'},\r\n        {\r\n            id: 8,\r\n            name: 'Me',\r\n            userId: 20392,\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit dolor sit amet, consectetur.',\r\n            image: null,\r\n            time: '14:10'\r\n        },\r\n        {id: 9, name: 'Mother', userId: 5, message: 'Lorem  consectetur adipisicin ipsum dolor !', image: null, time: '14:23'},\r\n    ] as Array<MessageType>,\r\n    newMessageText: ''\r\n};\r\n\r\nexport const dialogsReducer = (state: InitialStateDialogsType = initialState, action: DialogsActionType): InitialStateDialogsType => {\r\n    switch (action.type) {\r\n        case \"social/dialogs/ADD-MESSAGE\":\r\n            const newMessage: MessageType = {\r\n                id: state.messagesData.length + 1,\r\n                userId: 20392,\r\n                name: 'Me',\r\n                message: state.newMessageText,\r\n                image: null,\r\n                time: new Date().toLocaleTimeString().slice(0, 5)\r\n            };\r\n            return {...state, messagesData: [...state.messagesData, newMessage], newMessageText: ''}\r\n        case \"social/dialogs/UPDATE-NEW-MESSAGE-TEXT\":\r\n            return {...state, newMessageText: action.payload.newMessageText}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport type DialogsActionType =\r\n    ReturnType<typeof addMessageAC> |\r\n    ReturnType<typeof updateNewMessageTextAC>\r\n\r\nexport const addMessageAC = () => ({type: 'social/dialogs/ADD-MESSAGE'} as const);\r\nexport const updateNewMessageTextAC = (newMessageText: string) => ({\r\n    type: 'social/dialogs/UPDATE-NEW-MESSAGE-TEXT',\r\n    payload: {newMessageText}\r\n} as const);","export default __webpack_public_path__ + \"static/media/user.cb380ae4.png\";","import React from \"react\";\nimport styleModule from './Dialog.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport userLogo from '../../../usersAvatars/user.png'\nimport {DialogType} from \"../../../redux/redusers/dialogsReducer/dialogsReducer\";\nimport styled from \"styled-components\";\n\nexport type DialogPropsType = DialogType\n\nexport const Dialog = React.memo(({\n                           id,\n                           name,\n                           image,\n                           background,\n                           color, ...props\n                       }: DialogPropsType) => {\n    const DialogWrapper = styled.div`\n    & {\n    background: ${background ? background : '#FF6347'};\n    }\n    & a {\n    color: ${color ? color : '#ffffff'};\n    }\n    \n    `;\n    const ContactAvatar = styled.div`\n    & img {\n    border: 1px solid ${color ? color : '#ffffff'};\n    }\n    `\n    return (\n        <DialogWrapper className={styleModule.dialog}>\n            <ContactAvatar className={styleModule.contactAvatar}>\n                <img src={image ? image : userLogo} alt={'message avatar'}/>\n            </ContactAvatar>\n            <NavLink className={dialog => dialog.isActive ? styleModule.dialogActive : ''} to={`/dialogs/${id}`}>{name}</NavLink>\n        </DialogWrapper>\n    )\n})\n\n","import React, {useEffect} from \"react\";\nimport styleModule from './Message.module.css';\nimport messageAva from '../../../usersAvatars/user.png'\nimport styled from \"styled-components\";\n\nexport type MessagePropsType = {\n    id: number,\n    /**\n     * Name of the interlocutor\n     */\n    userId: number\n    name: string,\n    /**\n     * Text of message\n     */\n    message: string,\n    /**\n     * Image of the interlocutor\n     */\n    image: string | null,\n    /**\n     * Time of sending message\n     */\n    time: string\n    background: string\n    color: string\n    meBackground: string\n    meColor: string\n}\n\nexport const Message = React.memo(({\n                                       id,\n                                       userId,\n                                       name,\n                                       message,\n                                       image,\n                                       time,\n                                       color,\n                                       background,\n                                       meBackground,\n                                       meColor,\n                                       ...props\n                                   }: MessagePropsType) => {\n    const MessageBlock = styled.div`\n    & {\n    background: ${userId === 20392 ? meBackground : background};\n    color: ${userId === 20392 ? meColor : color}\n    }\n    &:before {\n    background: radial-gradient(circle at top left, transparent 50%, ${userId === 20392 ? meBackground : background} 50%);\n    }\n    `;\n    const Avatar = styled.div`\n    & {\n    border-color: ${background}\n    }\n    `;\n\n    // if the message is mine, then one style, if not, then another\n    const messageWrapperStyle = userId === 20392 ?\n        `${styleModule.messageWrapper} ${styleModule.meMessageWrapper}` :\n        styleModule.messageWrapper\n    const messageBlockStyle = userId === 20392\n        ?\n        `${styleModule.messageBlock} ${styleModule.meMessageBlock}` :\n        styleModule.messageBlock\n    return (\n        <div className={messageWrapperStyle}>\n            <MessageBlock className={messageBlockStyle}>\n                <div className={styleModule.name}>\n                    {name}\n                </div>\n                <div className={styleModule.message}>\n                    {message}\n                </div>\n                <div className={styleModule.time}>\n                    {time}\n                </div>\n            </MessageBlock>\n            <Avatar className={styleModule.avatar}>\n                <img src={image ? image : messageAva}/>\n            </Avatar>\n\n        </div>\n    )\n})\n\n","import React, {ChangeEvent, KeyboardEvent, LegacyRef} from \"react\";\r\nimport style from './Textarea.module.css'\r\n\r\ntype TextareaPropsType = {\r\n    textareaValue: string\r\n    setTextareaValue: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n    onAddWithEnter?: (e: KeyboardEvent<HTMLTextAreaElement>) => void\r\n    reference?: LegacyRef<HTMLTextAreaElement>\r\n    placeholder: string\r\n    background: string\r\n    color: string\r\n}\r\n\r\nexport const Textarea = React.memo(({\r\n                             textareaValue,\r\n                             setTextareaValue,\r\n                             reference,\r\n                             placeholder,\r\n                             onAddWithEnter,\r\n                             background,\r\n                             color,\r\n                             ...restProps\r\n                         }: TextareaPropsType) => {\r\n    const styles = {\r\n        background: background,\r\n        color: color\r\n    };\r\n    return (\r\n        <textarea placeholder={placeholder}\r\n                  className={style.textarea}\r\n                  onChange={setTextareaValue}\r\n                  onKeyPress={onAddWithEnter}\r\n                  value={textareaValue}\r\n                  ref={reference}\r\n                  style={styles}\r\n        />\r\n    )\r\n})","import React from \"react\";\nimport styleModule from './Post.module.css'\nimport ava_post from '../../../../usersAvatars/user.png'\nimport {PostType} from \"../../../../redux/redusers/profileReducer/profileReducer\";\nimport styled from \"styled-components\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\n\ntype PostPropsType = PostType &\n    {\n        removePost: (id: number) => void\n        likePost: (id: number) => void\n    };\n\nexport const Post = React.memo(({\n                                    id,\n                                    name,\n                                    message,\n                                    likes,\n                                    isLike,\n                                    image,\n                                    background,\n                                    color,\n                                    removePost,\n                                    likePost,\n                                    ...props\n                                }: PostPropsType) => {\n    const PostWrapper = styled.div`\n     & {\n        background: ${background ? background : '#FF6347'};\n        color:  ${color ? color : '#ffffff'};\n    }\n    `;\n    const LikesDiv = styled.div`\n    color: ${isLike ? '#ffbf47' : '#ffffff'};\n    `\n\n    const onCrossClick = (id: number) => {\n        removePost(id);\n    };\n    const onLikeClick = (id: number) => {\n        likePost(id)\n    }\n\n    return (\n        <PostWrapper className={styleModule.postWrapper}>\n            <div className={styleModule.avaBlock}>\n                <img src={image ? image : ava_post} alt=\"ava_post\"/>\n                <span>{name}</span>\n                <FontAwesomeIcon icon={faTimes} className={styleModule.removePost} onClick={() => onCrossClick(id)}/>\n            </div>\n            <div className={styleModule.messageBlock}>\n                {message}\n            </div>\n            <LikesDiv>\n                <span onClick={() => onLikeClick(id)}\n                      className={styleModule.likesBlock}>\n                    {`${likes.icon} ${likes.likeCount}`}\n                </span>\n            </LikesDiv>\n        </PostWrapper>\n\n    );\n});\n\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport styleModule from './MyPosts.module.css'\nimport {Post} from \"./Posts/Post\";\nimport {Button} from \"../../generic/Button/Button\";\nimport {Textarea} from \"../../generic/Textarea/Textarea\";\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\n\n\nexport const BUTTON_STYLE = {\n    BACKGROUND_HOVER: '#ffbf47',\n    BACKGROUND: '#ffe1a9',\n    COLOR_HOVER: '#ffffff'\n};\nexport const POST_STYLE = {\n    background: 'inherit',\n    color: '#ffffff'\n};\n\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\n\n    const onAddPostButton = () => {\n        props.newPostText.trim() && props.addPost(props.newPostText);\n    };\n    const onAddPostWithEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (!e.shiftKey && e.key === 'Enter') {\n            e.preventDefault();\n            props.newPostText.trim() && props.addPost(props.newPostText)\n        }\n    };\n    const onUpdatePostText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updateNewPostText(e.currentTarget.value);\n    };\n\n\n    return (\n        <div className={styleModule.myPosts}>\n            <p>My posts</p>\n            <div>\n                <div className={styleModule.writePost}>\n                    <Textarea setTextareaValue={onUpdatePostText}\n                              textareaValue={props.newPostText}\n                              onAddWithEnter={onAddPostWithEnter}\n                              placeholder={'Here you can leave your post'}\n                              background={'#ffffff'}\n                              color={'#60575A'}/>\n                </div>\n                <div className={styleModule.addPostButton}>\n                    <Button name={'Add post'}\n                            onClick={onAddPostButton}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}/>\n                </div>\n            </div>\n            <div className={styleModule.posts}>\n                {props.postsData.map(post =>\n                    <Post\n                        key={post.id}\n                        background={POST_STYLE.background}\n                        color={POST_STYLE.color}\n                        removePost={props.removePost}\n                        likePost={props.likePost}\n                        {...post}/>\n                )}\n            </div>\n        </div>\n    );\n})\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport {Dialog} from \"./Dialog/Dialog\";\nimport {Message} from \"./Mesage/Message\";\nimport styleModule from './Dialogs.module.css';\nimport {Button} from \"../generic/Button/Button\";\nimport {Textarea} from \"../generic/Textarea/Textarea\";\nimport {BUTTON_STYLE} from \"../Profile/MyPosts/MyPosts\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\nimport {Navigate} from \"react-router-dom\";\nimport {PATH} from \"../../App\";\n\n\nconst MESSAGE_STYLE = {\n    background: '#e8e8e8',\n    color: '#757575',\n    meBackground:'#FFE1A9',\n    meColor:'#757575',\n};\nconst DIALOG_STYLE = {\n    background: 'inherit',\n    color: '#ffffff'\n};\n\nexport const Dialogs = React.memo((props: DialogsPropsType) => {\n\n\n    const onAddMessageButton = () => {\n        props.addMessage(props.dialogsPage.newMessageText);\n    };\n    const onAddMessageWithEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        props.addMessageWithEnter(e, props.dialogsPage.newMessageText)\n    };\n    const onUpdateNewMessageText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updateNewMessageText(e.currentTarget.value)\n    };\n    return (\n        <div className={styleModule.dialogs}>\n            <div className={styleModule.heading}>\n                DIALOGS\n            </div>\n            <div className={styleModule.dialogs_items}>\n                {props.dialogsPage.dialogsData.map(dialog => <Dialog key={dialog.id}\n                                                                     background={DIALOG_STYLE.background}\n                                                                     color={DIALOG_STYLE.color}\n                                                                     {...dialog}/>)}\n            </div>\n            <div className={styleModule.messagesBlock}>\n                <div className={styleModule.messages}>\n                    {props.dialogsPage.messagesData.map(message => <Message key={message.id}\n                                                                            background={MESSAGE_STYLE.background}\n                                                                            color={MESSAGE_STYLE.color}\n                                                                            meBackground={MESSAGE_STYLE.meBackground}\n                                                                            meColor={MESSAGE_STYLE.meColor}\n                                                                            {...message}/>)}\n                </div>\n                <div className={styleModule.writeAndSendMessage}>\n                    <div className={styleModule.writeMessage}>\n                        <Textarea textareaValue={props.dialogsPage.newMessageText}\n                                  setTextareaValue={onUpdateNewMessageText}\n                                  onAddWithEnter={onAddMessageWithEnter}\n                                  placeholder={'Enter your message'}\n                                  background={'#ffffff'}\n                                  color={'#60575A'}/>\n\n                    </div>\n                    <div className={styleModule.sendMessage}>\n                        <Button name={'Send'}\n                                onClick={onAddMessageButton}\n                                backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                                background={BUTTON_STYLE.BACKGROUND}\n                                colorHover={BUTTON_STYLE.COLOR_HOVER}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n})\n\n","import React, {ComponentType, KeyboardEvent} from \"react\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {\n    addMessageAC,\n    InitialStateDialogsType,\n    updateNewMessageTextAC\n} from \"../../redux/redusers/dialogsReducer/dialogsReducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from 'redux';\n\nexport type MapStateToPropsType = {\n    dialogsPage: InitialStateDialogsType\n    isAuth: boolean\n}\n\nexport type MapDispatchToPropsType = {\n    addMessage: (newMessageText: string) => void\n    addMessageWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newMessageText: string) => void\n    updateNewMessageText: (newMessageText: string) => void\n}\n\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage,\n        isAuth: state.auth.isAuth\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        addMessage: (newMessageText: string) => {\n            newMessageText.trim() && dispatch(addMessageAC())\n        },\n        addMessageWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newMessageText: string) => {\n            if (!e.shiftKey && e.key === 'Enter') {\n                e.preventDefault()\n                newMessageText.trim() && dispatch(addMessageAC())\n            }\n        },\n        updateNewMessageText: (newMessageText: string) => {\n            dispatch(updateNewMessageTextAC(newMessageText));\n        }\n    }\n}\n\nexport const DialogsContainer = compose<ComponentType>(\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps),\n)(Dialogs)\n\n\n","import React from \"react\";\nimport styleModule from \"./User.module.css\";\nimport userPhotoDefault from \"./../../../usersAvatars/user.png\";\nimport {NavLink} from \"react-router-dom\";\nimport {UserType} from \"../../../redux/redusers/usersReducer/usersReducer\";\nimport {Button} from \"../../generic/Button/Button\";\nimport {BUTTON_STYLE} from \"../../Profile/MyPosts/MyPosts\";\nimport styled from \"styled-components\";\n\n\ntype UserPropsType = {\n    /**\n     * Callbock that add someone user in followers\n     */\n    becomeFollower: (userID: number) => void\n    /**\n     * Callbock that remove someone user from followers\n     */\n    stopBeingFollower: (userID: number) => void\n    followingInProcessUsersId: number[]\n    toggleFollowingInProcess: (userId: number, followingInProcess: boolean) => void\n    background?: string\n    color?: string\n} & UserType\n\nexport const User = React.memo((props: UserPropsType) => {\n    const UserWrapper = styled.div`\n    & {\n    background: ${props.background ? props.background : 'tomato'};\n    color: ${props.color ? props.color : 'white'}\n    }\n    `\n    const Img = styled.img`\n    & {\n    border-color: ${props.color ? props.color : 'white'}\n    }\n    `\n\n    //is follow button disabled?\n    const isFollowingButtonDisabled = props.followingInProcessUsersId.includes(props.id)\n\n    return (\n        <UserWrapper className={styleModule.userWrapper}>\n            <div className={styleModule.avatar}>\n                <NavLink to={`/profile/${props.id}`}>\n                    <Img src={props.photos.small !== null ? props.photos.small : userPhotoDefault} alt=\"\"/>\n                </NavLink>\n            </div>\n            <div className={styleModule.fullName}>\n                {props.name}\n            </div>\n            <div className={styleModule.status}>\n                <span>{props.status}</span>\n            </div>\n            <div className={styleModule.followed}>\n                {props.followed ?\n                    <Button name={'Unfollow'}\n                            onClick={()=> props.stopBeingFollower(props.id)}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}\n                            disabled={isFollowingButtonDisabled}/> :\n                    <Button name={'Follow'}\n                            onClick={() => props.becomeFollower(props.id)}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}\n                            disabled={isFollowingButtonDisabled}/>\n                }\n            </div>\n        </UserWrapper>\n    )\n})\n","import React, {useMemo, useState} from \"react\";\nimport styleModule from './Paginator.module.css';\n\nexport type PaginatorPropsType = {\n    portionSize: number\n    currentPage: number\n    pageSize: number\n    totalItemsCount: number\n    onChangePage: (pageNumber: number) => void\n}\n\nexport const Paginator = React.memo(({portionSize = 12, ...props}: PaginatorPropsType) => {\n\n    const {pageCount, pages}: { pageCount: number, pages: Array<number> } = useMemo(() => {\n        const pageCount = Math.ceil(props.totalItemsCount / props.pageSize)\n        let pages: Array<number> = [];\n        for (let i = 1; i <= pageCount; i++) {\n            pages.push(i)\n        }\n        return {pageCount, pages}\n    }, [props.totalItemsCount, props.pageSize])\n\n\n    let [portionNumber, setPortionNumber] = useState<number>(1);\n    const portionCount: number = Math.ceil(pageCount / portionSize);\n\n    const leftPortionPageNumber: number = useMemo(() => {\n        return portionSize * (portionNumber - 1) + 1\n    }, [portionSize,\n        portionNumber])\n    const rightPortionPageNumber: number = useMemo(() => {\n        return portionSize * portionNumber;\n    }, [portionSize, portionNumber])\n    return (\n        <div className={styleModule.paginator}>\n            {portionNumber > 1 && <button className={styleModule.firstPage} onClick={() => {\n                setPortionNumber(1)\n            }}>{\"First\"}</button>}\n            {portionNumber > 1 && <button className={styleModule.pagesToBack} onClick={() => {\n                setPortionNumber(portionNumber - 1)\n            }}>{\"Prev\"}</button>}\n            {portionNumber > 1 && <span className={styleModule.threeDots}>{\". . .\"}</span>}\n\n            {pages.filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\n                .map(page => <span key={page} className={props.currentPage === page ? styleModule.selectedPage : ''}\n                                   onClick={() => {\n                                       props.onChangePage(page)\n                                   }}>{page}</span>\n                )}\n\n            {portionNumber < portionCount && <span className={styleModule.threeDots}>{\". . .\"}</span>}\n            {portionNumber < portionCount && <button className={styleModule.pagesToForward} onClick={() => {\n                setPortionNumber(portionNumber + 1)\n            }}>{\"Next\"}</button>}\n            {portionNumber < portionCount && <button className={styleModule.lastPage} onClick={() => {\n                setPortionNumber(portionNumber = portionCount)\n            }}>{\"Last\"}</button>}\n        </div>\n    );\n});\n","import React from \"react\";\nimport styleModule from './Preloader.module.css';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSpinner} from \"@fortawesome/free-solid-svg-icons\";\n\ntype PreloaderPropsType = {\n    size: string\n    color: string\n}\n\n\nexport const Preloader = ({size, color}: PreloaderPropsType) => {\n    return (\n        <div className={styleModule.preloaderBlock}>\n            <FontAwesomeIcon style={{fontSize: size, color: color}} className={styleModule.preloaderIcon}\n                             icon={faSpinner}/>\n        </div>\n    );\n}\n\n\n\n","import React from \"react\";\nimport styleModule from './Users.module.css';\nimport {User} from \"./User/User\";\nimport {Paginator} from \"../generic/Paginator/Paginator\";\nimport {Preloader} from \"../generic/Preloader/Preloader\";\nimport {UsersApiContainerPropsType} from \"./UsersContainer\";\n\n\ntype UsersPropsType = UsersApiContainerPropsType & {\n    onChangePage: (pageNumber: number) => void\n}\n\nexport const Users = React.memo((props: UsersPropsType) => {\n\n    const {\n        users,\n        becomeFollower,\n        stopBeingFollower,\n        usersTotalCount,\n        pageSize,\n        currentPage,\n        onChangePage,\n        isFetching,\n        followingInProcessUsersId,\n        toggleFollowingInProcess,\n    } = props\n\n    let userElements = users.map(user => <User {...user}\n                                               becomeFollower={becomeFollower}\n                                               stopBeingFollower={stopBeingFollower}\n                                               followingInProcessUsersId={followingInProcessUsersId}\n                                               toggleFollowingInProcess={toggleFollowingInProcess}/>);\n    return (\n        <div className={styleModule.usersWrapper}>\n            <div>\n                <Paginator portionSize={10}\n                           currentPage={currentPage}\n                           pageSize={pageSize}\n                           totalItemsCount={usersTotalCount}\n                           onChangePage={onChangePage}/>\n            </div>\n            {isFetching ? <Preloader size={'100px'} color={'#ffffff'}/> :\n                <div className={styleModule.usersBlock}>\n                    {userElements}\n                </div>}\n        </div>\n    )\n})\n\n\n\n","import {AppThunk} from \"../../redux-store\";\r\nimport {FOLLOW_UNFOLLOW_RESULT_CODES, usersAPI} from \"../../../api/api\";\r\n\r\nexport enum USERS_ACTIONS_TYPES {\r\n    FOLLOW = 'social/users/FOLLOW',\r\n    UNFOLLOW = 'social/users/UNFOLLOW',\r\n    SET_USERS = 'social/users/SET_USERS',\r\n    SET_CURRENT_PAGE = 'social/users/SET_CURRENT_PAGE',\r\n    SET_USERS_TOTAL_COUNT = 'social/users/SET_USERS_TOTAL_COUNT',\r\n    SET_IS_FETCHING_VALUE = 'social/users/SET_IS_FETCHING_VALUE',\r\n    TOGGLE_FOLLOWING_IN_PROCESS = 'social/users/TOGGLE_FOLLOWING_IN_PROCESS',\r\n\r\n}\r\n\r\nexport type UserPhotoType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type UserType = {\r\n    /**\r\n     * User name\r\n     */\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string | null\r\n    /**\r\n     * User photos\r\n     */\r\n    photos: UserPhotoType\r\n    /**\r\n     * User status\r\n     */\r\n    status: null | string,\r\n    /**\r\n     * Value that indicates if you are following this user\r\n     */\r\n    followed: boolean\r\n}\r\n\r\nexport type InitialStateUsersType = typeof initialState\r\n\r\nconst initialState = {\r\n    users: [] as UserType[],\r\n    usersTotalCount: 0,\r\n    pageSize: 12,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProcessUsersId: [] as Array<number>\r\n}\r\n\r\n\r\nexport const usersReducer = (state: InitialStateUsersType = initialState, action: UsersActionType): InitialStateUsersType => {\r\n    switch (action.type) {\r\n        case USERS_ACTIONS_TYPES.SET_USERS:\r\n            return {\r\n                ...state, users: action.payload.users\r\n            }\r\n        case USERS_ACTIONS_TYPES.FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id === action.payload.userID ? {...user, followed: true} : user)\r\n            }\r\n        case USERS_ACTIONS_TYPES.UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id === action.payload.userID ? {...user, followed: false} : user)\r\n            }\r\n        case USERS_ACTIONS_TYPES.SET_CURRENT_PAGE:\r\n        case USERS_ACTIONS_TYPES.SET_USERS_TOTAL_COUNT:\r\n        case USERS_ACTIONS_TYPES.SET_IS_FETCHING_VALUE:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        case USERS_ACTIONS_TYPES.TOGGLE_FOLLOWING_IN_PROCESS:\r\n            return {\r\n                ...state, followingInProcessUsersId: action.payload.followingInProcess ?\r\n                    [...state.followingInProcessUsersId, action.payload.userId] :\r\n                    state.followingInProcessUsersId.filter(id => id !== action.payload.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type UsersActionType =\r\n    ReturnType<typeof follow> |\r\n    ReturnType<typeof unfollow> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setUsersTotalCount> |\r\n    ReturnType<typeof setIsFetchingValue> |\r\n    ReturnType<typeof toggleFollowingInProcess>\r\n\r\n\r\nexport const follow = (userID: number) => ({type: USERS_ACTIONS_TYPES.FOLLOW, payload: {userID}} as const)\r\nexport const unfollow = (userID: number) => ({type: USERS_ACTIONS_TYPES.UNFOLLOW, payload: {userID}} as const)\r\nexport const setUsers = (users: UserType[]) => ({type: USERS_ACTIONS_TYPES.SET_USERS, payload: {users}} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_CURRENT_PAGE,\r\n    payload: {currentPage}\r\n} as const)\r\nexport const setUsersTotalCount = (usersTotalCount: number) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_USERS_TOTAL_COUNT,\r\n    payload: {usersTotalCount}\r\n} as const)\r\nexport const setIsFetchingValue = (isFetching: boolean) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_IS_FETCHING_VALUE, payload: {isFetching}\r\n} as const)\r\nexport const toggleFollowingInProcess = (userId: number, followingInProcess: boolean) => ({\r\n    type: USERS_ACTIONS_TYPES.TOGGLE_FOLLOWING_IN_PROCESS,\r\n    payload: {userId, followingInProcess}\r\n} as const)\r\n\r\nexport const getUsers = (pageSize: number, currentPage: number): AppThunk => dispatch => {\r\n    dispatch(setIsFetchingValue(true))\r\n    usersAPI.getUsers(pageSize, currentPage)\r\n        .then(data => {\r\n            dispatch(setIsFetchingValue(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setUsersTotalCount(data.totalCount))\r\n        })\r\n}\r\nexport const becomeFollower = (id: number): AppThunk => dispatch => {\r\n    dispatch(toggleFollowingInProcess(id, true))\r\n    usersAPI.becomeFollower(id).then(data => {\r\n        if (data.resultCode === FOLLOW_UNFOLLOW_RESULT_CODES.success) {\r\n            dispatch(follow(id))\r\n        }\r\n        dispatch(toggleFollowingInProcess(id, false))\r\n    })\r\n}\r\nexport const repeatGetUsers = (pageSize: number, pageNumber: number): AppThunk => dispatch => {\r\n    dispatch(setCurrentPage(pageNumber))\r\n    dispatch(setIsFetchingValue(true))\r\n    usersAPI.getUsers(pageSize, pageNumber).then(data => {\r\n        dispatch(setIsFetchingValue(false))\r\n        dispatch(setUsers(data.items))\r\n    })\r\n}\r\n\r\nexport const stopBeingFollower = (id: number):AppThunk => dispatch => {\r\n    dispatch(toggleFollowingInProcess(id, true))\r\n    usersAPI.stopBeingFollower(id).then(data => {\r\n        if (data.resultCode === FOLLOW_UNFOLLOW_RESULT_CODES.success) {\r\n            dispatch(unfollow(id))\r\n        }\r\n        dispatch(toggleFollowingInProcess(id, false))\r\n    })\r\n\r\n}\r\n\r\n","import {profileAPI, RESPONSE_RESULT_CODES} from \"../../../api/api\";\r\nimport {AppThunk} from \"../../redux-store\";\r\n\r\nexport enum PROFILE_ACTIONS_TYPES {\r\n    ADD_POST = 'social/profile/ADD-POST',\r\n    UPDATE_NEW_POST_TEXT = 'social/profile/UPDATE_NEW_POST_TEXT',\r\n    REMOVE_POST = \"social/profile/REMOVE_POST\",\r\n    LIKE_POST = 'social/profile/LIKE_POST',\r\n    SET_PROFILE = 'social/profile/SET_PROFILE',\r\n    SET_STATUS = 'social/profile/SET_STATUS',\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    name: string\r\n    message: string\r\n    likes: {\r\n        icon: string\r\n        likeCount: number\r\n    }\r\n    isLike: boolean\r\n    image: string | null\r\n    background?: string\r\n    color?: string\r\n}\r\n\r\nexport type ContactsType = {\r\n    facebook: string | null,\r\n    website: string | null,\r\n    vk: string | null,\r\n    twitter: string | null,\r\n    instagram: string | null,\r\n    youtube: string | null,\r\n    github: string | null,\r\n    mainLink: string | null,\r\n}\r\nexport type PhotosType = {\r\n    small: string | null,\r\n    large: string | null,\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string | null,\r\n    contacts: ContactsType\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: PhotosType\r\n}\r\nexport type InitialStateProfileType = typeof initialState\r\n\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti, eum.',\r\n            likes: {\r\n                icon: '❤',\r\n                likeCount: 3,\r\n            },\r\n            isLike: false,\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Mariya',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur cumque harum illo inventore maiores minus mollitia, quaerat quis rem voluptatibus.',\r\n            likes: {\r\n                icon: '❤',\r\n                likeCount: 3,\r\n            },\r\n            isLike: false,\r\n            image: null\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ivan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis est, et labore laborum nemo nisi.',\r\n            likes: {\r\n                icon: '❤',\r\n                likeCount: 87,\r\n            },\r\n            isLike: true,\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album'\r\n        }\r\n    ] as Array<PostType>,\r\n    newPostText: '',\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n};\r\n\r\nexport const profileReducer = (state: InitialStateProfileType = initialState, action: ProfileActionType): InitialStateProfileType => {\r\n    switch (action.type) {\r\n        case PROFILE_ACTIONS_TYPES.ADD_POST:\r\n            const newPost = {\r\n                id: state.postsData.length + 1,\r\n                name: 'Someone',\r\n                message: state.newPostText,\r\n                likes: {\r\n                    icon: '❤',\r\n                    likeCount: 0,\r\n                },\r\n                isLike: false,\r\n                image: null\r\n            };\r\n            return {...state, postsData: [newPost, ...state.postsData], newPostText: ''}\r\n        case PROFILE_ACTIONS_TYPES.UPDATE_NEW_POST_TEXT:\r\n        case PROFILE_ACTIONS_TYPES.SET_PROFILE:\r\n        case PROFILE_ACTIONS_TYPES.SET_STATUS:\r\n            return {...state, ...action.payload}\r\n        case PROFILE_ACTIONS_TYPES.REMOVE_POST:\r\n            return (\r\n                {...state, postsData: state.postsData.filter(p => p.id !== action.payload.id)}\r\n            );\r\n        case PROFILE_ACTIONS_TYPES.LIKE_POST:\r\n            return (\r\n                {\r\n                    ...state, postsData: state.postsData.map(p => p.id === action.payload.id ?\r\n                        {\r\n                            ...p, isLike: !p.isLike, likes:\r\n                                {...p.likes, likeCount: p.isLike ? p.likes.likeCount - 1 : p.likes.likeCount + 1}\r\n                        } : p)\r\n                }\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport type ProfileActionType =\r\n    ReturnType<typeof addPost> |\r\n    ReturnType<typeof updateNewPostText> |\r\n    ReturnType<typeof removePost> |\r\n    ReturnType<typeof likePost> |\r\n    ReturnType<typeof setProfile> |\r\n    ReturnType<typeof setStatus>\r\n\r\n//A C T I O N S   C R E A T O R S\r\nexport const addPost = () => ({type: PROFILE_ACTIONS_TYPES.ADD_POST} as const);\r\nexport const updateNewPostText = (newPostText: string) => ({\r\n    type: PROFILE_ACTIONS_TYPES.UPDATE_NEW_POST_TEXT,\r\n    payload: {newPostText}\r\n} as const);\r\nexport const removePost = (id: number) => ({type: PROFILE_ACTIONS_TYPES.REMOVE_POST, payload: {id}} as const);\r\nexport const likePost = (id: number) => ({type: PROFILE_ACTIONS_TYPES.LIKE_POST, payload: {id}} as const);\r\nexport const setProfile = (profile: ProfileType) => ({\r\n    type: PROFILE_ACTIONS_TYPES.SET_PROFILE,\r\n    payload: {profile}\r\n} as const);\r\nexport const setStatus = (status: string) => ({\r\n    type: PROFILE_ACTIONS_TYPES.SET_STATUS,\r\n    payload: {status}\r\n} as const);\r\n\r\n//T H U N K S\r\nexport const getProfile = (userId: number): AppThunk => dispatch => {\r\n    profileAPI.getProfile(userId)\r\n        .then(data => {\r\n            dispatch(setProfile(data))\r\n        })\r\n}\r\nexport const getStatus = (userId: number): AppThunk => dispatch => {\r\n    profileAPI.getStatus(userId)\r\n        .then(data => {\r\n            dispatch(setStatus(data))\r\n        })\r\n}\r\nexport const updateStatus = (status: string): AppThunk => dispatch => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === RESPONSE_RESULT_CODES.success) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n}","import {connect} from \"react-redux\";\nimport {Users} from \"./Users\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {\n    becomeFollower,\n    getUsers,\n    repeatGetUsers,\n    stopBeingFollower,\n    toggleFollowingInProcess,\n    UserType\n} from \"../../redux/redusers/usersReducer/usersReducer\";\nimport React from \"react\";\n\n\nclass UsersApiContainer extends React.Component<UsersApiContainerPropsType> {\n\n    componentDidMount(): void {\n        const {currentPage, pageSize, getUsers} = this.props\n        //get request for getting users (with thunk)\n        getUsers(pageSize, currentPage)\n\n    }\n\n    //optimization of unnecessary rendering. Alternative of React.memo\n    shouldComponentUpdate(nextProps: Readonly<UsersApiContainerPropsType>, nextState: Readonly<{}>): boolean {\n        return nextProps !== this.props || nextState !== this.state\n    }\n\n    // action for pressing on page number\n    onChangePage = (pageNumber: number) => {\n        const {pageSize,repeatGetUsers,} = this.props\n        repeatGetUsers(pageSize, pageNumber)\n    }\n\n    render() {\n        return (\n            <Users {...this.props}\n                   onChangePage={this.onChangePage}\n            />\n        )\n    }\n}\n\n//functionality for redux\n\ntype MapStateToPropsType = {\n    users: UserType[],\n    usersTotalCount: number,\n    pageSize: number,\n    currentPage: number\n    isFetching: boolean\n    followingInProcessUsersId: number[]\n}\ntype MapDispatchToPropsType = {\n    becomeFollower: (userID: number) => void\n    stopBeingFollower: (userID: number) => void\n    toggleFollowingInProcess: (userId: number, followingInProcess: boolean) => void\n    getUsers: (pageSize: number, currentPage: number) => void\n    repeatGetUsers: (pageSize:number, pageNumber:number) => void\n}\n\nexport type UsersApiContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        users: state.usersPage.users,\n        usersTotalCount: state.usersPage.usersTotalCount,\n        pageSize: state.usersPage.pageSize,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProcessUsersId: state.usersPage.followingInProcessUsersId,\n    }\n}\n\nexport const UsersContainer = connect(mapStateToProps, {\n    becomeFollower,\n    stopBeingFollower,\n    toggleFollowingInProcess,\n    getUsers,\n    repeatGetUsers,\n} as MapDispatchToPropsType)(UsersApiContainer)","//hoc for getting params\r\nimport React from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const withRouter = (WrappedComponent: typeof React.Component | React.FC) => {\r\n    const ComponentWithRouter = (props: object) => {\r\n        const params = useParams<'*'>() //... <= profile/*\r\n        return (\r\n            <WrappedComponent {...props} params={params}/>\r\n        )\r\n    }\r\n    return ComponentWithRouter\r\n}","import {RESPONSE_RESULT_CODES, authMeAPI, AuthUserDataType, profileAPI} from \"../../../api/api\";\r\nimport {AppActionsType, AppThunk, GetStateType} from \"../../redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport enum AUTH_ACTIONS_TYPES {\r\n    SET_AUTH_USER_DATA = 'social/auth/SET_AUTH_USER_DATA',\r\n    SET_FULL_NAME_AND_AVATAR = 'social/auth/SET_FULL_NAME_AND_AVATAR',\r\n}\r\n\r\nexport type InitialStateAuthType = typeof initialState\r\n\r\nconst initialState = {\r\n    id: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    isAuth: false,\r\n    fullName: null as null | string,\r\n    avatar: null as null | string\r\n}\r\n\r\nexport const authReducer = (state: InitialStateAuthType = initialState, action: AuthActionType) => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPES.SET_AUTH_USER_DATA:\r\n        case AUTH_ACTIONS_TYPES.SET_FULL_NAME_AND_AVATAR:\r\n            return {\r\n                ...state, isAuth: true, ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type AuthActionType =\r\n    ReturnType<typeof setAuthUserData> |\r\n    ReturnType<typeof setFullNameAndAvatar>\r\n\r\n\r\nexport const setAuthUserData = ({id, email, login}: AuthUserDataType) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_AUTH_USER_DATA,\r\n    payload: {id, email, login}\r\n})\r\nexport const setFullNameAndAvatar = (fullName: string, avatar: string | null) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_FULL_NAME_AND_AVATAR,\r\n    payload: {fullName, avatar}\r\n})\r\nexport const getAuthorizationInfo = (): AppThunk => (dispatch, getState: GetStateType) => {\r\n    authMeAPI.getAuthorizationInfo()\r\n        .then(data => {\r\n            if (data.resultCode === RESPONSE_RESULT_CODES.success) {\r\n                dispatch(setAuthUserData(data.data))\r\n            }\r\n        }).then(() => {\r\n            const id = getState().auth.id\r\n            id && profileAPI.getProfile(id)\r\n                .then(data => {\r\n                    const fullName = data.fullName\r\n                    const avatar = data.photos.small\r\n                    dispatch(setFullNameAndAvatar(fullName, avatar))\r\n                })\r\n        }\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/top-wallpaper.47d6d9d7.jpg\";","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './InputText.module.css'\r\n\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype InputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    customStyle?: string\r\n    field?: any\r\n    form?: any\r\n    meta?: any\r\n}\r\n\r\nconst InputText: React.FC<InputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName, name, title,\r\n        customStyle, field, form, meta,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    };\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    };\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\r\n    const finalInputClassName = `${error ? `${s.errorInput} ${s.superInput}` : s.superInput} ${className ? s[className] : className}`;\r\n\r\n    return (\r\n        <div className={customStyle ? `${customStyle} ${s.inputWrapper}` : s.inputWrapper}>\r\n            <input name={name}\r\n                   type={type}\r\n                   onChange={onChangeCallback}\r\n                   onKeyPress={onKeyPressCallback}\r\n                   className={finalInputClassName}\r\n                   {...field}\r\n                   {...restProps}\r\n            />\r\n\r\n\r\n            {error && <div className={finalSpanClassName}>{error}</div>}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default InputText\r\n","import React, {DetailedHTMLProps, HTMLAttributes, InputHTMLAttributes} from 'react'\r\nimport style from './EditableSpan.module.css'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport InputText from \"../InputText/InputText\";\r\n\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\ntype EditableSpanType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    spanProps?: DefaultSpanPropsType\r\n}\r\ntype StateType = {\r\n    editMode: boolean\r\n}\r\n\r\nclass EditableSpan extends React.Component<EditableSpanType> {\r\n    state: StateType = {\r\n        editMode: false\r\n    }\r\n    onEnterCallback = () => {\r\n        const {onEnter} = this.props\r\n        this.setState({\r\n            editMode: false\r\n        } as StateType);\r\n        onEnter && onEnter()\r\n    };\r\n    onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        const {onBlur} = this.props\r\n        this.setState({\r\n            editMode: false\r\n        } as StateType);\r\n        onBlur && onBlur(e)\r\n    };\r\n    onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        const {onDoubleClick} = this.props.spanProps || {}\r\n        this.setState({\r\n            editMode: true\r\n        } as StateType);\r\n        onDoubleClick && onDoubleClick(e)\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            autoFocus,\r\n            onBlur,\r\n            onEnter,\r\n            spanProps,\r\n            ...restProps\r\n        } = this.props;\r\n        const {children, className, ...restSpanProps} = spanProps || {};\r\n        const spanClassName = `${style.editSpan} ${className}`;\r\n\r\n        return (\r\n            <div className={style.editableSpanWrapper}>\r\n                <CSSTransition in={this.state.editMode}\r\n                               timeout={400}\r\n                               classNames={style}\r\n                               unmountOnExit\r\n                               mountOnEnter>\r\n                    <div className={style.inputWrapper}>\r\n                        <InputText\r\n                            className={'forStatus'}\r\n                            autoFocus\r\n                            onBlur={this.onBlurCallback}\r\n                            onEnter={this.onEnterCallback}\r\n                            onDoubleClick={this.onDoubleClickCallBack}\r\n                            error={restProps.error}\r\n                            customStyle={style.inputStyle}\r\n                            {...restProps}/>\r\n                    </div>\r\n                </CSSTransition>\r\n                <CSSTransition in={!this.state.editMode}\r\n                               timeout={500}\r\n                               classNames={style}\r\n                               unmountOnExit\r\n                               mountOnEnter>\r\n                    <div className={style.spanWrapper}>\r\n                    <span onDoubleClick={this.onDoubleClickCallBack}\r\n                          className={spanClassName}\r\n                          {...restSpanProps}>\r\n                        {children || restProps.value}\r\n                        <FontAwesomeIcon className={style.editPen} icon={faPencilAlt}/>\r\n                    </span>\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditableSpan\r\n","import React from \"react\";\nimport styleModule from './ProfileStatus.module.css';\nimport EditableSpan from \"../../generic/EditableSpan/EditableSpan\";\n\ntype ProfileStatusPropsType = {\n    status: string\n    updateStatus: (status: string) => void\n}\n\nexport class ProfileStatus extends React.PureComponent<ProfileStatusPropsType> {\n    state = {\n        status: this.props.status\n    }\n\n    componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>, snapshot?: any): void {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n    onChangeText = (status: string) => {\n        this.setState({\n            status\n        })\n    }\n    onBlurEnterCallback = () => {\n        this.props.updateStatus(this.state.status)\n    }\n\n    render() {\n\n        return (\n            <div className={styleModule.profileStatus}>\n                <EditableSpan\n                    value={this.state.status}\n                    onChangeText={this.onChangeText}\n                    spanProps={{children: this.props.status ? undefined : 'enter status...'}}\n                    onBlur={this.onBlurEnterCallback}\n                    onEnter={this.onBlurEnterCallback}/>\n            </div>\n        )\n    }\n\n};\n\n","import React from \"react\";\nimport styleModule from './ProfileInfo.module.css';\nimport top_wallpaper from \"../../../top-wallpaper.jpg\";\nimport logo_avatar from '../../../usersAvatars/user.png';\nimport {ProfileAPIContainerPropsType} from \"../ProfileContainer\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck, faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {ProfileStatus} from \"../ProfileStatus/ProfileStatus\";\n\ntype ProfileInfoPropsType = ProfileAPIContainerPropsType\n\nexport const ProfileInfo = React.memo(({\n                                           profile,\n                                           status,\n                                           updateStatus,\n                                       }: ProfileInfoPropsType) => {\n\n    return (\n        <div className={styleModule.profileInfo}>\n            <div className={styleModule.top_wallpaper}>\n                <img src={top_wallpaper} alt=\"top_wallpaper\"/>\n            </div>\n            <div className={styleModule.avatarAndFullName}>\n                <div className={styleModule.image}>\n                    <img src={profile?.photos.large || logo_avatar}/>\n                </div>\n                <div className={styleModule.fullName}>{profile?.fullName}</div>\n\n                {/*кнопка изменения фото*/}\n                {/*{isOwner &&\n                <div className={styleModule.editMainPhoto}>\n                    <input onChange={onChangeAvatarPhoto} type=\"file\"/>\n                    <label>\n                        <svg height=\"20\" viewBox=\"0 0 512 512\">\n                            <path\n                                d=\"M512 144v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V144c0-26.5 21.5-48 48-48h88l12.3-32.9c7-18.7 24.9-31.1 44.9-31.1h125.5c20 0 37.9 12.4 44.9 31.1L376 96h88c26.5 0 48 21.5 48 48zM376 288c0-66.2-53.8-120-120-120s-120 53.8-120 120 53.8 120 120 120 120-53.8 120-120zm-32 0c0 48.5-39.5 88-88 88s-88-39.5-88-88 39.5-88 88-88 88 39.5 88 88z\"></path>\n                        </svg>\n                    </label>\n                </div>}*/}\n\n            </div>\n            <div className={styleModule.description}>\n\n                {/*{!editProfileMode &&*/}\n\n                <div className={styleModule.wrapper_description}>\n\n\n                    {/*<ProfileStatus status={status} updateStatus={updateStatus}/>*/}\n                    <ProfileStatus status={status} updateStatus={updateStatus}/>\n                    <div className={styleModule.aboutMe}>{profile?.aboutMe}</div>\n\n                    <div className={styleModule.lookingForAJob}>\n                        <div className={styleModule.statusJob}>\n                            <div className={styleModule.heading}>OPEN TO WORK:</div>\n                            <div className={styleModule.logo}>{profile?.lookingForAJob ?\n                                <FontAwesomeIcon icon={faCheck} className={styleModule.iconYes}/> :\n                                <FontAwesomeIcon icon={faTimes} className={styleModule.iconNot}/>}\n                            </div>\n                        </div>\n                        <div className={styleModule.descriptionJob}>{profile?.lookingForAJobDescription}</div>\n                    </div>\n\n\n                    {/*{isOwner &&\n                    <div className={styleModule.toEditMode}>\n                        <button onClick={activateEditMode}>\n                            <svg viewBox=\"0 0 469 469\">\n                                <path d=\"M438.931,30.403c-40.4-40.5-106.1-40.5-146.5,0l-268.6,268.5c-2.1,2.1-3.4,4.8-3.8,7.7l-19.9,147.4\n\t\tc-0.6,4.2,0.9,8.4,3.8,11.3c2.5,2.5,6,4,9.5,4c0.6,0,1.2,0,1.8-0.1l88.8-12c7.4-1,12.6-7.8,11.6-15.2c-1-7.4-7.8-12.6-15.2-11.6\n\t\tl-71.2,9.6l13.9-102.8l108.2,108.2c2.5,2.5,6,4,9.5,4s7-1.4,9.5-4l268.6-268.5c19.6-19.6,30.4-45.6,30.4-73.3\n\t\tS458.531,49.903,438.931,30.403z M297.631,63.403l45.1,45.1l-245.1,245.1l-45.1-45.1L297.631,63.403z M160.931,416.803l-44.1-44.1\n\t\tl245.1-245.1l44.1,44.1L160.931,416.803z M424.831,152.403l-107.9-107.9c13.7-11.3,30.8-17.5,48.8-17.5c20.5,0,39.7,8,54.2,22.4\n\t\ts22.4,33.7,22.4,54.2C442.331,121.703,436.131,138.703,424.831,152.403z\"/>\n                            </svg>\n                        </button>\n                    </div>\n                    }*/}\n\n                </div>\n\n                {/*}*/}\n\n                {/*{editProfileMode && <EditProfileForm onSubmit={onSubmit} profile={profile}\n                                                     updateProfileDescription={updateProfileDescription}/>}\n\n                <Contacts profile={profile} updateProfileDescription={updateProfileDescription} />*/}\n            </div>\n        </div>\n    )\n});\n\n","import React from \"react\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {\n    addPost,\n    likePost,\n    PostType,\n    removePost,\n    updateNewPostText\n} from \"../../../redux/redusers/profileReducer/profileReducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nexport type MapStateToPropsType = {\n    postsData: PostType[]\n    newPostText: string\n}\n\nexport type MapDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n    updateNewPostText: (newPostText: string) => void\n    removePost: (id: number) => void\n    likePost: (id: number) => void\n}\n\nexport type MyPostsPropsType =\n    MapStateToPropsType &\n    MapDispatchToPropsType &\n    {params: {['*']:string}}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        postsData: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText,\n\n    }\n}\nexport const MyPostsContainer = connect(mapStateToProps, {\n    addPost,\n    updateNewPostText,\n    removePost,\n    likePost,\n} as MapDispatchToPropsType)(MyPosts);\n","import React from \"react\";\nimport styleModule from './Profile.module.css';\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\nimport {ProfileAPIContainerPropsType} from \"./ProfileContainer\";\n\ntype ProfilePropsType = ProfileAPIContainerPropsType\n\nexport const Profile = React.memo((props:ProfilePropsType) => {\n    return (\n        <div className={styleModule.content}>\n            <ProfileInfo {...props}/>\n            <MyPostsContainer params={props.params}/>\n        </div>\n    );\n})\n\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getProfile, getStatus, ProfileType, updateStatus} from \"../../redux/redusers/profileReducer/profileReducer\";\nimport {Profile} from \"./Profile\";\nimport {Preloader} from \"../generic/Preloader/Preloader\";\nimport {withRouter} from \"../../hoc/withRouter\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {profileAPI} from \"../../api/api\";\n\n\nclass ProfileAPIContainer extends React.Component<ProfileAPIContainerPropsType> {\n\n    refreshProfile = () => {\n        const {getProfile, getStatus,  params} = this.props\n        let userId = params[\"*\"]\n        if (!userId || userId === '*') {\n            userId = '20392'\n        }\n        getProfile(Number(userId))\n        getStatus(Number(userId))\n    }\n\n    componentDidMount(): void {\n        this.refreshProfile()\n    }\n\n    //getting own profile after switching from someone profile to your own\n    componentDidUpdate(prevProps: Readonly<ProfileAPIContainerPropsType>, prevState: Readonly<{}>, snapshot?: any): void {\n        if (prevProps.params !== this.props.params) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return this.props.profile ? (\n                <Profile {...this.props}/>) :\n            (<Preloader size={'100px'} color={'#ffffff'}/>\n            )\n    }\n}\n\nexport type ProfileAPIContainerPropsType =\n    MapStateToPropsType &\n    MapDispatchToPropsType &\n    { params: { ['*']: string } } //... <= profile/*... => type for props\n\ntype MapStateToPropsType = {\n    profile: ProfileType | null\n    isAuth: boolean\n    status:string\n}\ntype MapDispatchToPropsType = {\n    getProfile: (userId: number) => void\n    getStatus: (userId: number) => void\n    updateStatus: (status: string) => void\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    profile: state.profilePage.profile,\n    isAuth: state.auth.isAuth,\n    status: state.profilePage.status,\n})\n\n\nexport const ProfileContainer = withAuthRedirect(connect(mapStateToProps, {getProfile, getStatus, updateStatus} as MapDispatchToPropsType)(withRouter(ProfileAPIContainer)))\n\n\n","import React from \"react\";\r\nimport styleModule from './Header.module.css';\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {HeaderAPIContainerPropsType} from \"./HeaderContainer\";\r\nimport logo_avatar from '../../usersAvatars/user.png'\r\n\r\nexport type HeaderPropsType = {\r\n    title: string\r\n    description?: string\r\n    background: string\r\n    color: string\r\n    logo?: string\r\n} & HeaderAPIContainerPropsType\r\n\r\n\r\nexport const Header = React.memo((props: HeaderPropsType) => {\r\n    const {\r\n        title,\r\n        description,\r\n        background,\r\n        color,\r\n        logo,\r\n        avatar,\r\n        fullName,\r\n        auth,\r\n    } = props\r\n    const Header = styled.header`\r\n    & {\r\n    background: ${background}\r\n    `;\r\n    const TitleDescription = styled.div`\r\n    & p {\r\n    color: ${color}\r\n    }\r\n    `;\r\n    return (\r\n        <Header className={styleModule.header}>\r\n            <div className={styleModule.logoAndDescription}>\r\n                <div className={styleModule.logo}>\r\n                    <img src={logo} className={styleModule.main_logo}/>\r\n                </div>\r\n                <TitleDescription className={styleModule.title_description}>\r\n                    <p>{title}</p>\r\n                    <p>{description}</p>\r\n                </TitleDescription>\r\n            </div>\r\n            <div className={styleModule.loginStatus}>\r\n\r\n                {auth.isAuth ?\r\n                    <div className={styleModule.loginAndAvatar}>\r\n                        <div className={styleModule.avatar}>\r\n                            <img src={avatar ? avatar : logo_avatar}/>\r\n                        </div>\r\n                        <div className={styleModule.loginValue}>{fullName}</div>\r\n\r\n                        {/*<div className={styleModule.logoutButton}><button onClick={props.logout} >LOGOUT</button></div>*/}\r\n\r\n                    </div> :\r\n                    <NavLink to={'/login'}>\r\n                        LOGIN\r\n                    </NavLink>}\r\n            </div>\r\n        </Header>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Header} from \"./Header\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getAuthorizationInfo, InitialStateAuthType} from \"../../redux/redusers/auth/authReducer\";\r\nimport {HEADER_STYLE} from \"../../App\";\r\n\r\nexport type DataType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n}\r\nexport type GetAuthUserDataType = {\r\n    data: DataType\r\n    fieldsErrors: Array<any>\r\n    messages: Array<string>\r\n    resultCode: number\r\n}\r\n\r\n\r\nclass HeaderAPIContainer extends React.Component<HeaderAPIContainerPropsType> {\r\n    componentDidMount(): void {\r\n        const {getAuthorizationInfo} = this.props\r\n        getAuthorizationInfo()\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Header title={'Cloudpaper'}\r\n                    description={'Connecting Network'}\r\n                    background={HEADER_STYLE.background}\r\n                    color={HEADER_STYLE.color}\r\n                    logo={HEADER_STYLE.logo}\r\n                    {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport type HeaderAPIContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype MapStateToPropsType = {\r\n    auth: InitialStateAuthType\r\n    fullName: string | null\r\n    avatar: string | null | undefined\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getAuthorizationInfo: () => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        auth: state.auth,\r\n        fullName: state.auth.fullName,\r\n        avatar: state.auth.avatar,\r\n    }\r\n};\r\n\r\nexport const HeaderContainer = connect(mapStateToProps, {\r\n    getAuthorizationInfo\r\n} as MapDispatchToPropsType)(HeaderAPIContainer)\r\n\r\n\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './Checkbox.module.css'\r\nimport styled from \"styled-components\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    bgColor?: string\r\n    field?: any\r\n    form?: any\r\n    meta?: any\r\n}\r\n\r\nconst Checkbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n        bgColor,\r\n        ref, field, form, meta,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const FakeFlagSpan = styled.span``\r\n    const InputCheckbox = styled.input``\r\n    const Label = styled.label`\r\n        & input${InputCheckbox}:checked + span${FakeFlagSpan} {\r\n            background-color: ${bgColor ? bgColor : '#007FFF'};\r\n            border-color: ${bgColor ? bgColor : '#007FFF'};\r\n        }\r\n        &:hover input${InputCheckbox}:checked + span${FakeFlagSpan}{\r\n            box-shadow: 0 0 8px ${bgColor ? bgColor : '#007FFF'};\r\n        }\r\n    `\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    };\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n    return (\r\n        <Label className={s.label}>\r\n            <InputCheckbox\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n                {...field}\r\n            />\r\n            <FakeFlagSpan className={s.fakeFlag}></FakeFlagSpan>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </Label>\r\n    )\r\n}\r\n\r\nexport default Checkbox\r\n","import React from \"react\";\nimport styleModule from './LoginForm.module.css';\nimport InputText from \"../../generic/InputText/InputText\";\nimport {Button} from \"../../generic/Button/Button\";\nimport Checkbox from \"../../generic/Checkbox/Checkbox\";\nimport {Field, Form, Formik} from \"formik\";\n\ntype LoginFormValuesType = {\n    email: string\n    password: string\n    rememberMe: boolean\n}\n\nexport function LoginForm() {\n    const onSubmitGHandler = (values: LoginFormValuesType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\n        console.log(values)\n        setSubmitting(false)\n    }\n    return (\n        <div className={styleModule.wrapperLoginForm}>\n            <div className={styleModule.title}>login</div>\n            <Formik\n                initialValues={{email: '', password: '', rememberMe: true}}\n                onSubmit={onSubmitGHandler}>\n                {({isSubmitting}) => (\n                    <Form className={styleModule.formWrapper}>\n                        <div className={styleModule.formElement}>\n                            <Field type=\"email\"\n                                   name=\"email\"\n                                   component={InputText}\n                                   placeholder={'Login'}/>\n\n                        </div>\n                        <div className={styleModule.formElement}>\n                            <Field type=\"password\"\n                                   name=\"password\"\n                                   component={InputText}\n                                   placeholder={'Password'}/>\n                        </div>\n                        <div className={`${styleModule.formElement} ${styleModule.checkMark}`}>\n                            <Field type=\"checkbox\"\n                                   name=\"rememberMe\"\n                                   component={CheckBoxField}/>\n                        </div>\n                        <div className={styleModule.formElement}>\n                            <Button name={'Login'}\n                                    disabled={isSubmitting}/>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n}\n\nconst CheckBoxField = (props: any) => {\n    return (\n        <Checkbox {...props} id={\"remember_me\"}\n                  bgColor={'#68ACBA'}>\n            {'Remember me'}\n        </Checkbox>\n    )\n}\n\n\n\n","import React from \"react\";\nimport styleModule from './Login.module.css';\nimport {LoginForm} from \"../forms/LoginForm/Login\";\n\n\nexport function Login(props: any) {\n\n    return (\n        <div className={styleModule.wrapperLogin}>\n            <LoginForm/>\n        </div>\n    );\n}\n\n\n\n","import React from 'react';\nimport './App.css';\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Navigate, Route, Routes} from \"react-router-dom\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {SettingsContainer} from \"./components/Settings/Settings\";\nimport logo from './main-logo.png';\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\nimport {ProfileContainer} from \"./components/Profile/ProfileContainer\";\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\nimport {Login} from \"./components/Login/Login\";\n\n\nexport type PATHType = {\n    PROFILE: string\n    DIALOGS: string\n    MUSIC: string\n    NEWS: string\n    USERS: string\n    SETTINGS: string\n    LOGIN:string\n}\nexport const PATH: PATHType = {\n    PROFILE: '/profile/*',\n    DIALOGS: '/dialogs/*',\n    MUSIC: '/music',\n    NEWS: '/news',\n    USERS: '/users',\n    SETTINGS: '/settings',\n    LOGIN: '/login',\n};\n\nexport const HEADER_STYLE = {\n    background: '#7D823F',\n    color: '#ffffff',\n    logo: logo\n};\n\nfunction App() {\n\n    return (\n            <div className=\"app_wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app_wrapper_content\">\n                    <Routes>\n                        <Route path='/' element={<Navigate to={PATH.PROFILE}/>}/>\n                        <Route path={PATH.PROFILE} element={<ProfileContainer />}/>\n                        <Route path={PATH.DIALOGS} element={<DialogsContainer/>}/>\n                        <Route path={PATH.MUSIC} element={<Music/>}/>\n                        <Route path={PATH.NEWS} element={<News/>}/>\n                        <Route path={PATH.USERS} element={<UsersContainer/>}/>\n                        <Route path={PATH.SETTINGS} element={<SettingsContainer/>}/>\n                        <Route path={PATH.LOGIN} element={<Login/>}/>\n                    </Routes>\n                </div>\n            </div>\n    );\n}\n\nexport default App;\n","import {ProfileActionType, profileReducer} from \"./redusers/profileReducer/profileReducer\";\r\nimport {DialogsActionType, dialogsReducer} from \"./redusers/dialogsReducer/dialogsReducer\";\r\nimport {UsersActionType, usersReducer} from \"./redusers/usersReducer/usersReducer\";\r\nimport {AuthActionType, authReducer} from \"./redusers/auth/authReducer\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {ThunkAction} from 'redux-thunk';\r\n\r\nexport const rootReducer = combineReducers({\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n    }\r\n);\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type AppActionsType =\r\n    UsersActionType |\r\n    ProfileActionType |\r\n    DialogsActionType|\r\n    AuthActionType\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type GetStateType = typeof store.getState\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionsType\r\n    >\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__2v9vO\",\"meMessageWrapper\":\"Message_meMessageWrapper__1MAX1\",\"messageBlock\":\"Message_messageBlock__3LBDi\",\"meMessageBlock\":\"Message_meMessageBlock__1x_NA\",\"name\":\"Message_name__3Gp6r\",\"message\":\"Message_message__9Gaxr\",\"time\":\"Message_time__2pDBU\",\"avatar\":\"Message_avatar__1V7_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2lBSZ\",\"item\":\"Navbar_item__Ozyip\",\"icon\":\"Navbar_icon__2lJWr\",\"active\":\"Navbar_active__34byn\",\"users\":\"Navbar_users__rOSsB\",\"buttonBlock\":\"Navbar_buttonBlock__2sf4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__rKeBu\",\"logoAndDescription\":\"Header_logoAndDescription__36SJL\",\"main_logo\":\"Header_main_logo__227Ld\",\"title_description\":\"Header_title_description__3Sd-q\",\"logo\":\"Header_logo__Z7xS8\",\"loginStatus\":\"Header_loginStatus__27OBc\",\"loginAndAvatar\":\"Header_loginAndAvatar__OJ0Lj\",\"loginValue\":\"Header_loginValue__35gNe\",\"logoutButton\":\"Header_logoutButton__1jl7V\",\"avatar\":\"Header_avatar__1X7_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1o3_i\",\"heading\":\"Dialogs_heading__2LCaS\",\"dialogs_items\":\"Dialogs_dialogs_items__1CN3_\",\"messagesBlock\":\"Dialogs_messagesBlock___yNFN\",\"messages\":\"Dialogs_messages__174fl\",\"meMessages\":\"Dialogs_meMessages__2Nq9R\",\"writeMessage\":\"Dialogs_writeMessage__2da3A\",\"writeAndSendMessage\":\"Dialogs_writeAndSendMessage__3VXCn\",\"sendMessage\":\"Dialogs_sendMessage__2OMjS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2Taf7\",\"pagesToBack\":\"Paginator_pagesToBack__2y2Mx\",\"pagesToForward\":\"Paginator_pagesToForward__3ky62\",\"firstPage\":\"Paginator_firstPage__2QU6j\",\"lastPage\":\"Paginator_lastPage__gXtZR\",\"selectedPage\":\"Paginator_selectedPage__JE0qS\",\"threeDots\":\"Paginator_threeDots__13XX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpanWrapper\":\"EditableSpan_editableSpanWrapper__2aU5i\",\"inputWrapper\":\"EditableSpan_inputWrapper__1gsDR\",\"spanWrapper\":\"EditableSpan_spanWrapper__2gUP9\",\"editSpan\":\"EditableSpan_editSpan__28RB9\",\"buttonsBlock\":\"EditableSpan_buttonsBlock__2aT0j\",\"editPen\":\"EditableSpan_editPen__3Yu2p\",\"enter\":\"EditableSpan_enter__19kUA\",\"enterActive\":\"EditableSpan_enterActive__3y2hR\",\"exit\":\"EditableSpan_exit__28CC8\",\"exitActive\":\"EditableSpan_exitActive__27QF9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLoginForm\":\"LoginForm_wrapperLoginForm__2vlIU\",\"title\":\"LoginForm_title__i-9CN\",\"formWrapper\":\"LoginForm_formWrapper__3UkNk\",\"formElement\":\"LoginForm_formElement__1Wl7v\",\"checkMark\":\"LoginForm_checkMark__305L6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"InputText_inputWrapper__8UzaQ\",\"superInput\":\"InputText_superInput__MC_64\",\"errorInput\":\"InputText_errorInput__EG88-\",\"forStatus\":\"InputText_forStatus__3cIkX\",\"error\":\"InputText_error__35kd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrapper\":\"Post_postWrapper__2dad-\",\"avaBlock\":\"Post_avaBlock__1eypn\",\"messageBlock\":\"Post_messageBlock__q4MKJ\",\"likesBlock\":\"Post_likesBlock__W2PfY\",\"removePost\":\"Post_removePost__ZIsFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"User_userWrapper__HCUEE\",\"avatar\":\"User_avatar__3jo1S\",\"status\":\"User_status__oyUvl\",\"fullName\":\"User_fullName__dcBJC\",\"followed\":\"User_followed__suzg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__14xNj\",\"addPostButton\":\"MyPosts_addPostButton__3kHYc\",\"writePost\":\"MyPosts_writePost__rmb23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__v1rOq\",\"label\":\"Checkbox_label__3-_Qw\",\"fakeFlag\":\"Checkbox_fakeFlag__NFlH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2L0-V\",\"contactAvatar\":\"Dialog_contactAvatar__2NdvE\",\"dialogActive\":\"Dialog_dialogActive__2hnMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlock\":\"Users_usersBlock__wcdhv\",\"usersWrapper\":\"Users_usersWrapper__2NpI5\",\"buttonBlock\":\"Users_buttonBlock__3E4rQ\",\"selectedPage\":\"Users_selectedPage__2Qq8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderBlock\":\"Preloader_preloaderBlock__3EBOq\",\"preloaderIcon\":\"Preloader_preloaderIcon__QSMsa\",\"rotate-center\":\"Preloader_rotate-center__1wFP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__egdZh\",\"rotate-center\":\"Button_rotate-center__1PBd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UnderConstruction_container__3E9Tv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Textarea_textarea__3tLx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLogin\":\"Login_wrapperLogin__2E7ef\"};"],"sourceRoot":""}