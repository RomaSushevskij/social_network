{"version":3,"sources":["components/Dialogs/Mesage/Message.module.css","components/Dialogs/Dialogs.module.css","components/generic/Paginator/Paginator.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Users/User/User.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css","components/generic/Button/Button.module.css","components/generic/Textarea/Textarea.module.css","components/generic/UnderConstruction/UnderConstruction.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","top-wallpaper.jpg","usersAvatars/user.png","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/redusers/profileReducer/profileReducer.ts","components/Profile/MyPosts/Posts/Post.tsx","components/generic/Button/Button.tsx","components/generic/Textarea/Textarea.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","underConstruction.png","components/generic/UnderConstruction/UnderConstruction.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","main-logo.png","redux/redusers/usersReducer/usersReducer.ts","redux/redusers/dialogsReducer/dialogsReducer.ts","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Mesage/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/Users/User/User.tsx","components/generic/Paginator/Paginator.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","App.tsx","redux/redux-store.ts","index.tsx"],"names":["module","exports","Header","React","memo","title","description","background","color","logo","styled","header","TitleDescription","div","className","styleModule","logoAndDescription","src","main_logo","title_description","loginStatus","Navbar","nav","item","to","profile","isActive","active","icon","faUserAlt","dialogs","faCommentDots","news","faNewspaper","music","faHeadphonesAlt","users","faUsers","settings","faSlidersH","ProfileInfo","props","profileInfo","top_wallpaper","alt","avatar","image","logo_avatar","initialState","postsData","id","name","message","likes","likeCount","isLike","newPostText","Post","removePost","likePost","PostWrapper","LikesDiv","postWrapper","avaBlock","ava_post","faTimes","onClick","onCrossClick","messageBlock","onLikeClick","likesBlock","Button","ButtonWithBefore","button","backgroundHover","colorHover","style","Textarea","textareaValue","setTextareaValue","reference","placeholder","onAddWithEnter","styles","textarea","onChange","onKeyPress","value","ref","BUTTON_STYLE","POST_STYLE","MyPosts","myPosts","writePost","e","updateNewPostText","currentTarget","addPostWithEnter","addPostButton","addPost","posts","map","post","MyPostsContainer","connect","state","profilePage","dispatch","trim","type","shiftKey","key","preventDefault","payload","updateNewPostTextAC","removePostAC","likePostAC","Profile","content","UnderConstruction","container","Music","News","Settings","USERS_ACTIONS_TYPES","dialogsData","messagesData","time","newMessageText","Dialog","DialogWrapper","ContactAvatar","dialog","contactAvatar","userLogo","dialogActive","Message","meBackground","meColor","MessageBlock","Avatar","messageWrapperStyle","messageWrapper","meMessageWrapper","messageBlockStyle","meMessageBlock","messageAva","MESSAGE_STYLE","DIALOG_STYLE","Dialogs","heading","dialogs_items","dialogsPage","messagesBlock","messages","writeAndSendMessage","writeMessage","updateNewMessageText","addMessageWithEnter","sendMessage","addMessage","DialogsContainer","updateNewMessageTextAC","User","UserWrapper","Img","img","userWrapper","photos","small","userPhotoDefault","fullName","status","followed","stopBeingFollower","becomeFollower","Paginator","portionSize","useMemo","pageCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","useState","portionNumber","setPortionNumber","portionCount","leftPortionPageNumber","rightPortionPageNumber","paginator","firstPage","pagesToBack","threeDots","filter","page","currentPage","selectedPage","onChangePage","pagesToForward","lastPage","Users","usersPage","usersTotalCount","userElements","user","usersWrapper","usersBlock","UsersApiContainer","pageNumber","setUsers","setCurrentPage","axios","get","withCredentials","headers","then","response","data","items","this","setUsersTotalCount","length","totalCount","nextProps","nextState","Component","UsersContainer","userID","FOLLOW","followAC","UNFOLLOW","unfollowAC","SET_USERS","setUsersAC","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","setUsersTotalCountAC","PATH","HEADER_STYLE","App","path","element","rootReducer","combineReducers","action","newPost","p","newMessage","Date","toLocaleTimeString","slice","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db91c162.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__2v9vO\",\"meMessageWrapper\":\"Message_meMessageWrapper__1MAX1\",\"messageBlock\":\"Message_messageBlock__3LBDi\",\"meMessageBlock\":\"Message_meMessageBlock__1x_NA\",\"name\":\"Message_name__3Gp6r\",\"message\":\"Message_message__9Gaxr\",\"time\":\"Message_time__2pDBU\",\"avatar\":\"Message_avatar__1V7_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1o3_i\",\"heading\":\"Dialogs_heading__2LCaS\",\"dialogs_items\":\"Dialogs_dialogs_items__1CN3_\",\"messagesBlock\":\"Dialogs_messagesBlock___yNFN\",\"messages\":\"Dialogs_messages__174fl\",\"meMessages\":\"Dialogs_meMessages__2Nq9R\",\"writeMessage\":\"Dialogs_writeMessage__2da3A\",\"writeAndSendMessage\":\"Dialogs_writeAndSendMessage__3VXCn\",\"sendMessage\":\"Dialogs_sendMessage__2OMjS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2Taf7\",\"pagesToBack\":\"Paginator_pagesToBack__2y2Mx\",\"pagesToForward\":\"Paginator_pagesToForward__3ky62\",\"firstPage\":\"Paginator_firstPage__2QU6j\",\"lastPage\":\"Paginator_lastPage__gXtZR\",\"selectedPage\":\"Paginator_selectedPage__JE0qS\",\"threeDots\":\"Paginator_threeDots__13XX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__rKeBu\",\"logoAndDescription\":\"Header_logoAndDescription__36SJL\",\"main_logo\":\"Header_main_logo__227Ld\",\"title_description\":\"Header_title_description__3Sd-q\",\"logo\":\"Header_logo__Z7xS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__7ylqO\",\"avatar\":\"ProfileInfo_avatar__2EIzC\",\"image\":\"ProfileInfo_image__19lBH\",\"top_wallpaper\":\"ProfileInfo_top_wallpaper__1_yd0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrapper\":\"Post_postWrapper__2dad-\",\"avaBlock\":\"Post_avaBlock__1eypn\",\"messageBlock\":\"Post_messageBlock__q4MKJ\",\"likesBlock\":\"Post_likesBlock__W2PfY\",\"removePost\":\"Post_removePost__ZIsFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"User_userWrapper__HCUEE\",\"avatar\":\"User_avatar__3jo1S\",\"status\":\"User_status__oyUvl\",\"fullName\":\"User_fullName__dcBJC\",\"followed\":\"User_followed__suzg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__14xNj\",\"addPostButton\":\"MyPosts_addPostButton__3kHYc\",\"writePost\":\"MyPosts_writePost__rmb23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2L0-V\",\"contactAvatar\":\"Dialog_contactAvatar__2NdvE\",\"dialogActive\":\"Dialog_dialogActive__2hnMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlock\":\"Users_usersBlock__wcdhv\",\"usersWrapper\":\"Users_usersWrapper__2NpI5\",\"buttonBlock\":\"Users_buttonBlock__3E4rQ\",\"selectedPage\":\"Users_selectedPage__2Qq8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2lBSZ\",\"item\":\"Navbar_item__Ozyip\",\"icon\":\"Navbar_icon__2lJWr\",\"active\":\"Navbar_active__34byn\",\"settings\":\"Navbar_settings__2WR45\",\"users\":\"Navbar_users__rOSsB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__egdZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Textarea_textarea__3tLx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UnderConstruction_container__3E9Tv\"};","import React from \"react\";\r\nimport styleModule from './Header.module.css';\r\nimport styled from \"styled-components\";\r\n\r\nexport type HeaderPropsType = {\r\n    title: string\r\n    description?: string\r\n    background: string\r\n    color: string\r\n    logo?: string\r\n}\r\n\r\nexport const Header = React.memo(({\r\n                           title,\r\n                           description,\r\n                           background,\r\n                           color,\r\n                           logo, ...props\r\n                       }: HeaderPropsType) => {\r\n    const Header = styled.header`\r\n    & {\r\n    background: ${background}\r\n    `;\r\n    const TitleDescription = styled.div`\r\n    & p {\r\n    color: ${color}\r\n    }\r\n    `;\r\n    return (\r\n        <Header className={styleModule.header}>\r\n            <div className={styleModule.logoAndDescription}>\r\n                <div className={styleModule.logo}>\r\n                    <img src={logo} className={styleModule.main_logo}/>\r\n                </div>\r\n                <TitleDescription className={styleModule.title_description}>\r\n                    <p>{title}</p>\r\n                    <p>{description}</p>\r\n                </TitleDescription>\r\n            </div>\r\n            <div className={styleModule.loginStatus}>\r\n\r\n            </div>\r\n        </Header>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\nimport './Navbar.module.css';\nimport styleModule from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n    faCommentDots,\n    faHeadphonesAlt,\n    faNewspaper,\n    faSlidersH,\n    faUserAlt,\n    faUsers\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Navbar = React.memo(() => {\n    return (\n        <>\n            <nav className={styleModule.nav}>\n                <div className={styleModule.item}>\n                    <NavLink to={'/profile'}\n                             className={profile => profile.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faUserAlt} className={styleModule.icon}/> Profile\n                    </NavLink>\n                </div>\n                <div className={styleModule.item}>\n                    <NavLink to={'/dialogs'}\n                             className={dialogs => dialogs.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faCommentDots} className={styleModule.icon}/> Messages\n                    </NavLink>\n                </div>\n                <div className={styleModule.item}>\n                    <NavLink to={'/news'} className={news => news.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faNewspaper} className={styleModule.icon}/> News\n                    </NavLink>\n                </div>\n                <div className={styleModule.item}>\n                    <NavLink to={'/music'} className={music => music.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faHeadphonesAlt} className={styleModule.icon}/> Music\n                    </NavLink>\n                </div>\n                <div className={`${styleModule.item} ${styleModule.users}`}>\n                    <NavLink to={'/users'} className={users => users.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faUsers} className={styleModule.icon}/> Users\n                    </NavLink>\n                </div>\n                <div className={`${styleModule.item} ${styleModule.settings}`}>\n                    <NavLink to={'/settings'}\n                             className={settings => settings.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faSlidersH} className={styleModule.icon}/> Settings\n                    </NavLink>\n                </div>\n\n            </nav>\n        </>\n    )\n})\n","export default __webpack_public_path__ + \"static/media/top-wallpaper.47d6d9d7.jpg\";","export default __webpack_public_path__ + \"static/media/user.cb380ae4.png\";","import React from \"react\";\nimport styleModule from './ProfileInfo.module.css';\nimport top_wallpaper from \"../../../top-wallpaper.jpg\";\nimport logo_avatar from '../../../usersAvatars/user.png';\n\nexport const ProfileInfo = React.memo((props: any) => {\n\n\n    return (\n        <div className={styleModule.profileInfo}>\n            <div className={styleModule.top_wallpaper}>\n                <img src={top_wallpaper} alt=\"top_wallpaper\"/>\n            </div>\n            <div className={styleModule.avatar}>\n                <div className={styleModule.image}>\n                    <img src={logo_avatar}/>\n                </div>\n\n            </div>\n            <div className={styleModule.description}>\n\n            </div>\n        </div>\n    )\n});\n\n","export type PostType = {\r\n    id: number\r\n    name: string\r\n    message: string\r\n    likes: {\r\n        icon: string\r\n        likeCount: number\r\n    }\r\n    isLike: boolean\r\n    image: string | null\r\n    background?: string\r\n    color?: string\r\n}\r\nexport type InitialStateProfileType = typeof initialState\r\n\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti, eum.',\r\n            likes: {\r\n                icon: '❤',\r\n                likeCount: 3,\r\n            },\r\n            isLike: false,\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Mariya',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur cumque harum illo inventore maiores minus mollitia, quaerat quis rem voluptatibus.',\r\n            likes: {\r\n                icon: '❤',\r\n                likeCount: 3,\r\n            },\r\n            isLike: false,\r\n            image: null\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ivan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis est, et labore laborum nemo nisi.',\r\n            likes: {\r\n                icon: '❤',\r\n                likeCount: 87,\r\n            },\r\n            isLike: true,\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album'\r\n        }\r\n    ] as Array<PostType>,\r\n    newPostText: ''\r\n};\r\n\r\nexport const profileReducer = (state: InitialStateProfileType = initialState, action: ActionType): InitialStateProfileType => {\r\n    switch (action.type) {\r\n        case \"social/profile/ADD-POST\":\r\n            const newPost: PostType = {\r\n                id: state.postsData.length + 1,\r\n                name: 'Someone',\r\n                message: state.newPostText,\r\n                likes: {\r\n                    icon: '❤',\r\n                    likeCount: 0,\r\n                },\r\n                isLike: false,\r\n                image: null\r\n            };\r\n            return {...state, postsData: [newPost, ...state.postsData], newPostText: ''}\r\n        case \"social/profile/UPDATE-NEW-POST-TEXT\":\r\n            return {...state, newPostText: action.payload.newPostText}\r\n        case \"social/profile/REMOVE-POST\":\r\n            return (\r\n                {...state, postsData: state.postsData.filter(p => p.id !== action.payload.id)}\r\n            );\r\n        case \"social/profile/LIKE_POST\":\r\n            return (\r\n                {...state, postsData: state.postsData.\r\n                    map(p => p.id === action.payload.id ?\r\n                        {...p, isLike: !p.isLike, likes:\r\n                                {...p.likes, likeCount: p.isLike ? p.likes.likeCount - 1 : p.likes.likeCount + 1}} : p) }\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport type ActionType =\r\n    ReturnType<typeof addPostAC> |\r\n    ReturnType<typeof updateNewPostTextAC> |\r\n    ReturnType<typeof removePostAC> |\r\n    ReturnType<typeof likePostAC>\r\n\r\nexport const addPostAC = () => ({type: 'social/profile/ADD-POST'} as const);\r\nexport const updateNewPostTextAC = (newPostText: string) => ({\r\n    type: 'social/profile/UPDATE-NEW-POST-TEXT',\r\n    payload: {newPostText}\r\n} as const);\r\nexport const removePostAC = (id: number) => ({type: 'social/profile/REMOVE-POST', payload: {id}} as const);\r\nexport const likePostAC = (id: number) => ({type: 'social/profile/LIKE_POST', payload: {id}} as const);","import React from \"react\";\nimport styleModule from './Post.module.css'\nimport ava_post from '../../../../usersAvatars/user.png'\nimport {PostType} from \"../../../../redux/redusers/profileReducer/profileReducer\";\nimport styled from \"styled-components\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\n\ntype PostPropsType = PostType &\n    {\n        removePost: (id: number) => void\n        likePost: (id: number) => void\n    };\n\nexport const Post = React.memo(({\n                                    id,\n                                    name,\n                                    message,\n                                    likes,\n                                    isLike,\n                                    image,\n                                    background,\n                                    color,\n                                    removePost,\n                                    likePost,\n                                    ...props\n                                }: PostPropsType) => {\n    const PostWrapper = styled.div`\n     & {\n        background: ${background ? background : '#FF6347'};\n        color:  ${color ? color : '#ffffff'};\n    }\n    `;\n    const LikesDiv = styled.div`\n    color: ${isLike ? '#ffbf47' : '#ffffff'};\n    `\n\n    const onCrossClick = (id: number) => {\n        removePost(id);\n    };\n    const onLikeClick = (id: number) => {\n        likePost(id)\n    }\n\n    return (\n        <PostWrapper className={styleModule.postWrapper}>\n            <div className={styleModule.avaBlock}>\n                <img src={image ? image : ava_post} alt=\"ava_post\"/>\n                <span>{name}</span>\n                <FontAwesomeIcon icon={faTimes} className={styleModule.removePost} onClick={() => onCrossClick(id)}/>\n            </div>\n            <div className={styleModule.messageBlock}>\n                {message}\n            </div>\n            <LikesDiv>\n                <span onClick={() => onLikeClick(id)}\n                      className={styleModule.likesBlock}>\n                    {`${likes.icon} ${likes.likeCount}`}\n                </span>\n            </LikesDiv>\n        </PostWrapper>\n\n    );\n});\n\n","import React from \"react\";\r\nimport style from './Button.module.css'\r\nimport styled from \"styled-components\";\r\n\r\ntype ButtonPropsType = {\r\n    name: string\r\n    onClick: () => void\r\n    backgroundHover?: string\r\n    background?: string\r\n    colorHover?: string\r\n}\r\n\r\n\r\nexport const Button = React.memo(({name, onClick, ...props}: ButtonPropsType) => {\r\n    const ButtonWithBefore = styled.button`\r\n& {\r\nborder-color: ${props.backgroundHover ? props.backgroundHover : '#ffbf47'};\r\ncolor: ${props.backgroundHover ? props.backgroundHover : '#ffbf47'};\r\nbackground-color:${props.background ? props.background : '#ffe1a9'}\r\n}\r\n&:before {\r\nbackground: ${props.backgroundHover ? props.backgroundHover : '#ffbf47'};\r\n}\r\n&:hover {\r\ncolor: ${props.colorHover ? props.colorHover : '#ffffff'}\r\n}\r\n`;\r\n\r\n    const onClickButton = () => {\r\n        onClick()\r\n    };\r\n\r\n    return (\r\n        <ButtonWithBefore onClick={onClickButton} className={style.button}>{name}</ButtonWithBefore>\r\n    )\r\n})","import React, {ChangeEvent, KeyboardEvent, LegacyRef} from \"react\";\r\nimport style from './Textarea.module.css'\r\n\r\ntype TextareaPropsType = {\r\n    textareaValue: string\r\n    setTextareaValue: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n    onAddWithEnter?: (e: KeyboardEvent<HTMLTextAreaElement>) => void\r\n    reference?: LegacyRef<HTMLTextAreaElement>\r\n    placeholder: string\r\n    background: string\r\n    color: string\r\n}\r\n\r\nexport const Textarea = React.memo(({\r\n                             textareaValue,\r\n                             setTextareaValue,\r\n                             reference,\r\n                             placeholder,\r\n                             onAddWithEnter,\r\n                             background,\r\n                             color,\r\n                             ...restProps\r\n                         }: TextareaPropsType) => {\r\n    const styles = {\r\n        background: background,\r\n        color: color\r\n    };\r\n    return (\r\n        <textarea placeholder={placeholder}\r\n                  className={style.textarea}\r\n                  onChange={setTextareaValue}\r\n                  onKeyPress={onAddWithEnter}\r\n                  value={textareaValue}\r\n                  ref={reference}\r\n                  style={styles}\r\n        />\r\n    )\r\n})","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport styleModule from './MyPosts.module.css'\nimport {Post} from \"./Posts/Post\";\nimport {Button} from \"../../generic/Button/Button\";\nimport {Textarea} from \"../../generic/Textarea/Textarea\";\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\n\n\nexport const BUTTON_STYLE = {\n    BACKGROUND_HOVER: '#ffbf47',\n    BACKGROUND: '#ffe1a9',\n    COLOR_HOVER: '#ffffff'\n};\nexport const POST_STYLE = {\n    background: 'inherit',\n    color: '#ffffff'\n};\n\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\n\n    const onAddPostButton = () => {\n        props.addPost(props.newPostText);\n    };\n    const onAddPostWithEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        props.addPostWithEnter(e, props.newPostText);\n    };\n    const onUpdatePostText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updateNewPostText(e.currentTarget.value);\n    };\n\n\n    return (\n        <div className={styleModule.myPosts}>\n            <p>My posts</p>\n            <div>\n                <div className={styleModule.writePost}>\n                    <Textarea setTextareaValue={onUpdatePostText}\n                              textareaValue={props.newPostText}\n                              onAddWithEnter={onAddPostWithEnter}\n                              placeholder={'Here you can leave your post'}\n                              background={'#ffffff'}\n                              color={'#60575A'}/>\n                </div>\n                <div className={styleModule.addPostButton}>\n                    <Button name={'Add post'}\n                            onClick={onAddPostButton}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}/>\n                </div>\n            </div>\n            <div className={styleModule.posts}>\n                {props.postsData.map(post =>\n                    <Post\n                        key={post.id}\n                        background={POST_STYLE.background}\n                        color={POST_STYLE.color}\n                        removePost={props.removePost}\n                        likePost={props.likePost}\n                        {...post}/>\n                )}\n            </div>\n        </div>\n    );\n})\n","import React, {KeyboardEvent} from \"react\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {\n    addPostAC,\n    likePostAC,\n    PostType,\n    removePostAC,\n    updateNewPostTextAC\n} from \"../../../redux/redusers/profileReducer/profileReducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\n\n\nexport type MapStateToPropsType = {\n    postsData: PostType[]\n    newPostText: string\n}\n\nexport type MapDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n    addPostWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newPostText: string) => void\n    updateNewPostText: (newPostText: string) => void\n    removePost: (id: number) => void\n    likePost: (id: number) => void\n}\n\nexport type MyPostsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        postsData: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText,\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        addPost: (newPostText: string) => {\n            newPostText.trim() && dispatch(addPostAC())\n        },\n        addPostWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newPostText: string) => {\n            if (!e.shiftKey && e.key === 'Enter') {\n                e.preventDefault();\n                newPostText.trim() && dispatch(addPostAC())\n            }\n        },\n        updateNewPostText: (newPostText: string) => {\n            dispatch(updateNewPostTextAC(newPostText));\n        },\n        removePost: (id: number) => {\n            dispatch(removePostAC(id))\n        },\n        likePost: (id: number) => {\n            dispatch(likePostAC(id))\n        }\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n","import React from \"react\";\nimport styleModule from './Profile.module.css';\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\n\nexport const Profile = React.memo(() => {\n    return (\n        <div className={styleModule.content}>\n            <ProfileInfo/>\n            <MyPostsContainer/>\n        </div>\n    );\n})\n\n\n","export default __webpack_public_path__ + \"static/media/underConstruction.9d99f69c.png\";","import logo from './../../../underConstruction.png'\r\nimport styleModule from './UnderConstruction.module.css'\r\nexport const UnderConstruction = () => {\r\n    return (\r\n        <div className={styleModule.container}>\r\n            <img src={logo} alt=\"Under Construction\"/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport styleModule from './Music.module.css';\nimport {UnderConstruction} from \"../generic/UnderConstruction/UnderConstruction\";\n\n\nexport function Music(props:any) {\n    return (\n        <div>\n           <UnderConstruction/>\n        </div>\n    );\n}\n\n\n\n","import React from \"react\";\nimport styleModule from './News.module.css';\nimport {UnderConstruction} from \"../generic/UnderConstruction/UnderConstruction\";\n\n\nexport function News(props:any) {\n    return (\n        <div>\n            <UnderConstruction/>\n        </div>\n    );\n}\n\n","import React from \"react\";\nimport styleModule from './Settings.module.css';\nimport {UnderConstruction} from \"../generic/UnderConstruction/UnderConstruction\";\n\n\nexport function Settings() {\n    return (\n        <div>\n            <UnderConstruction/>\n        </div>\n    );\n}\n\n","export default __webpack_public_path__ + \"static/media/main-logo.8de3ea88.png\";","export enum USERS_ACTIONS_TYPES {\r\n    FOLLOW = 'social/users/FOLLOW',\r\n    UNFOLLOW = 'social/users/UNFOLLOW',\r\n    SET_USERS = 'social/users/SET_USERS',\r\n    SET_CURRENT_PAGE = 'social/users/SET_CURRENT_PAGE',\r\n    SET_USERS_TOTAL_COUNT = 'social/users/SET_USERS_TOTAL_COUNT',\r\n}\r\n\r\n\r\nexport type UserPhotoType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type UserType = {\r\n    /**\r\n     * User name\r\n     */\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string | null\r\n    /**\r\n     * User photos\r\n     */\r\n    photos: UserPhotoType\r\n    /**\r\n     * User status\r\n     */\r\n    status: null | string,\r\n    /**\r\n     * Value that indicates if you are following this user\r\n     */\r\n    followed: boolean\r\n}\r\n\r\nexport type InitialStateUsersType = typeof initialState\r\n\r\nconst initialState = {\r\n    users: [] as UserType[],\r\n    usersTotalCount: 0,\r\n    pageSize: 12,\r\n    currentPage: 1,\r\n}\r\n\r\n\r\nexport const usersReducer = (state: InitialStateUsersType = initialState, action: ActionType): InitialStateUsersType => {\r\n    switch (action.type) {\r\n        case USERS_ACTIONS_TYPES.SET_USERS:\r\n            return {\r\n                ...state, users: action.payload.users\r\n            }\r\n        case USERS_ACTIONS_TYPES.FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id === action.payload.userID ? {...user, followed: true} : user)\r\n            }\r\n        case USERS_ACTIONS_TYPES.UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id === action.payload.userID ? {...user, followed: false} : user)\r\n            }\r\n        case USERS_ACTIONS_TYPES.SET_CURRENT_PAGE:\r\n        case USERS_ACTIONS_TYPES.SET_USERS_TOTAL_COUNT:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionType =\r\n    ReturnType<typeof followAC> |\r\n    ReturnType<typeof unfollowAC> |\r\n    ReturnType<typeof setUsersAC> |\r\n    ReturnType<typeof setCurrentPageAC> |\r\n    ReturnType<typeof setUsersTotalCountAC>\r\n\r\n\r\nexport const followAC = (userID: number) => ({type: USERS_ACTIONS_TYPES.FOLLOW, payload: {userID}} as const)\r\nexport const unfollowAC = (userID: number) => ({type: USERS_ACTIONS_TYPES.UNFOLLOW, payload: {userID}} as const)\r\nexport const setUsersAC = (users: UserType[]) => ({type: USERS_ACTIONS_TYPES.SET_USERS, payload: {users}} as const)\r\nexport const setCurrentPageAC = (currentPage: number) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_CURRENT_PAGE,\r\n    payload: {currentPage}\r\n} as const)\r\nexport const setUsersTotalCountAC = (usersTotalCount: number) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_USERS_TOTAL_COUNT,\r\n    payload: {usersTotalCount}\r\n} as const)\r\n","export type DialogType = {\r\n    id: number\r\n    /**\r\n     * Name of contact/friend\r\n     */\r\n    name: string\r\n    /**\r\n     * Image of contact/friend\r\n     */\r\n    image: string | null\r\n    /**\r\n     * Optional background color of component\r\n     */\r\n    background?: string\r\n    /**\r\n     * Optional color text of component\r\n     */\r\n    color?: string\r\n};\r\nexport type MessageType = {\r\n    id: number,\r\n    name: string,\r\n    message: string,\r\n    image: string | null,\r\n    time: string\r\n};\r\nexport type InitialStateDialogsType = typeof initialState\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album'\r\n        },\r\n        {id: 2, name: 'Dmitry', image: null},\r\n        {\r\n            id: 3,\r\n            name: 'Aleksey',\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album'\r\n        },\r\n        {id: 4, name: 'Ivan', image: null},\r\n        {id: 5, name: 'Mother', image: null}\r\n    ] as Array<DialogType>,\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. In, rem!',\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album',\r\n            time: '12:03'\r\n        },\r\n\r\n        {id: 13, name: 'Me', message: 'Lorem ipsum dolor !', image: null, time: '12:10'},\r\n        {id: 2, name: 'Dmitry', message: 'Lorem ipsum dolor sit amet', image: null, time: '13:01'},\r\n        {\r\n            id: 3,\r\n            name: 'Ivan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album',\r\n            time: '13:08'\r\n        },\r\n        {\r\n            id: 13,\r\n            name: 'Me',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',\r\n            image: null,\r\n            time: '13:49'\r\n        },\r\n        {id: 4, name: 'Mother', message: 'Lorem ipsum dolor !', image: null, time: '14:05'},\r\n        {id: 13, name: 'Me', message: 'Lorem ipsum dolor', image: null, time: '14:08'},\r\n        {\r\n            id: 13,\r\n            name: 'Me',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit dolor sit amet, consectetur.',\r\n            image: null,\r\n            time: '14:10'\r\n        },\r\n        {id: 4, name: 'Mother', message: 'Lorem  consectetur adipisicin ipsum dolor !', image: null, time: '14:23'},\r\n    ] as Array<MessageType>,\r\n    newMessageText: ''\r\n};\r\n\r\nexport const dialogsReducer = (state: InitialStateDialogsType = initialState, action: ActionType): InitialStateDialogsType => {\r\n    switch (action.type) {\r\n        case \"social/dialogs/ADD-MESSAGE\":\r\n            const newMessage: MessageType = {\r\n                id: 13,\r\n                name: 'Me',\r\n                message: state.newMessageText,\r\n                image: null,\r\n                time: new Date().toLocaleTimeString().slice(0, 5)\r\n            };\r\n            return {...state, messagesData: [...state.messagesData, newMessage], newMessageText: ''}\r\n        case \"social/dialogs/UPDATE-NEW-MESSAGE-TEXT\":\r\n            return {...state, newMessageText: action.payload.newMessageText}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport type ActionType =\r\n    ReturnType<typeof addMessageAC> |\r\n    ReturnType<typeof updateNewMessageTextAC>\r\n\r\nexport const addMessageAC = () => ({type: 'social/dialogs/ADD-MESSAGE'} as const);\r\nexport const updateNewMessageTextAC = (newMessageText: string) => ({\r\n    type: 'social/dialogs/UPDATE-NEW-MESSAGE-TEXT',\r\n    payload: {newMessageText}\r\n} as const);","import React from \"react\";\nimport styleModule from './Dialog.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport userLogo from '../../../usersAvatars/user.png'\nimport {DialogType} from \"../../../redux/redusers/dialogsReducer/dialogsReducer\";\nimport styled from \"styled-components\";\n\nexport type DialogPropsType = DialogType\n\nexport const Dialog = React.memo(({\n                           id,\n                           name,\n                           image,\n                           background,\n                           color, ...props\n                       }: DialogPropsType) => {\n    const DialogWrapper = styled.div`\n    & {\n    background: ${background ? background : '#FF6347'};\n    }\n    & a {\n    color: ${color ? color : '#ffffff'};\n    }\n    \n    `;\n    const ContactAvatar = styled.div`\n    & img {\n    border: 1px solid ${color ? color : '#ffffff'};\n    }\n    `\n\n    return (\n        <DialogWrapper className={styleModule.dialog}>\n            <ContactAvatar className={styleModule.contactAvatar}>\n                <img src={image ? image : userLogo}/>\n            </ContactAvatar>\n            <NavLink className={dialog => dialog.isActive ? styleModule.dialogActive : ''} to={`/dialogs/${id}`}>{name}</NavLink>\n        </DialogWrapper>\n    )\n})\n\n","import React, {useEffect} from \"react\";\nimport styleModule from './Message.module.css';\nimport messageAva from '../../../usersAvatars/user.png'\nimport styled from \"styled-components\";\n\nexport type MessagePropsType = {\n    id: number,\n    /**\n     * Name of the interlocutor\n     */\n    name: string,\n    /**\n     * Text of message\n     */\n    message: string,\n    /**\n     * Image of the interlocutor\n     */\n    image: string | null,\n    /**\n     * Time of sending message\n     */\n    time: string\n    background: string\n    color: string\n    meBackground: string\n    meColor: string\n}\n\nexport const Message = React.memo(({\n                                       id,\n                                       name,\n                                       message,\n                                       image,\n                                       time,\n                                       color,\n                                       background,\n                                       meBackground,\n                                       meColor,\n                                       ...props\n                                   }: MessagePropsType) => {\n\n    const MessageBlock = styled.div`\n    & {\n    background: ${id === 13 ? meBackground : background};\n    color: ${id === 13 ? meColor : color}\n    }\n    &:before {\n    background: radial-gradient(circle at top left, transparent 50%, ${id === 13 ? meBackground : background} 50%);\n    }\n    `;\n    const Avatar = styled.div`\n    & {\n    border-color: ${background}\n    }\n    `;\n\n    // if the message is mine, then one style, if not, then another\n    const messageWrapperStyle = id === 13 ?\n        `${styleModule.messageWrapper} ${styleModule.meMessageWrapper}` :\n        styleModule.messageWrapper\n    const messageBlockStyle = id === 13 ?\n        `${styleModule.messageBlock} ${styleModule.meMessageBlock}` :\n        styleModule.messageBlock\n    return (\n        <div className={messageWrapperStyle}>\n            <MessageBlock className={messageBlockStyle}>\n                <div className={styleModule.name}>\n                    {name}\n                </div>\n                <div className={styleModule.message}>\n                    {message}\n                </div>\n                <div className={styleModule.time}>\n                    {time}\n                </div>\n            </MessageBlock>\n            <Avatar className={styleModule.avatar}>\n                <img src={image ? image : messageAva}/>\n            </Avatar>\n\n        </div>\n    )\n})\n\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport {Dialog} from \"./Dialog/Dialog\";\nimport {Message} from \"./Mesage/Message\";\nimport styleModule from './Dialogs.module.css';\nimport {Button} from \"../generic/Button/Button\";\nimport {Textarea} from \"../generic/Textarea/Textarea\";\nimport {BUTTON_STYLE} from \"../Profile/MyPosts/MyPosts\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\n\n\nconst MESSAGE_STYLE = {\n    background: '#ffffff',\n    color: '#757575',\n    meBackground:'#FFE1A9',\n    meColor:'#757575',\n};\nconst DIALOG_STYLE = {\n    background: 'inherit',\n    color: '#ffffff'\n};\n\nexport const Dialogs = React.memo((props: DialogsPropsType) => {\n\n\n    const onAddMessageButton = () => {\n        props.addMessage(props.dialogsPage.newMessageText);\n    };\n    const onAddMessageWithEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        props.addMessageWithEnter(e, props.dialogsPage.newMessageText)\n    };\n    const onUpdateNewMessageText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updateNewMessageText(e.currentTarget.value)\n    };\n\n    return (\n        <div className={styleModule.dialogs}>\n            <div className={styleModule.heading}>\n                DIALOGS\n            </div>\n            <div className={styleModule.dialogs_items}>\n                {props.dialogsPage.dialogsData.map(dialog => <Dialog key={dialog.id}\n                                                                     background={DIALOG_STYLE.background}\n                                                                     color={DIALOG_STYLE.color}\n                                                                     {...dialog}/>)}\n            </div>\n            <div className={styleModule.messagesBlock}>\n                <div className={styleModule.messages}>\n                    {props.dialogsPage.messagesData.map(message => <Message key={message.id}\n                                                                            background={MESSAGE_STYLE.background}\n                                                                            color={MESSAGE_STYLE.color}\n                                                                            meBackground={MESSAGE_STYLE.meBackground}\n                                                                            meColor={MESSAGE_STYLE.meColor}\n                                                                            {...message}/>)}\n                </div>\n                <div className={styleModule.writeAndSendMessage}>\n                    <div className={styleModule.writeMessage}>\n                        <Textarea textareaValue={props.dialogsPage.newMessageText}\n                                  setTextareaValue={onUpdateNewMessageText}\n                                  onAddWithEnter={onAddMessageWithEnter}\n                                  placeholder={'Enter your message'}\n                                  background={'#ffffff'}\n                                  color={'#60575A'}/>\n\n                    </div>\n                    <div className={styleModule.sendMessage}>\n                        <Button name={'Send'}\n                                onClick={onAddMessageButton}\n                                backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                                background={BUTTON_STYLE.BACKGROUND}\n                                colorHover={BUTTON_STYLE.COLOR_HOVER}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n})\n\n","import React, {KeyboardEvent} from \"react\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {addMessageAC, InitialStateDialogsType, updateNewMessageTextAC} from \"../../redux/redusers/dialogsReducer/dialogsReducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\n\nexport type MapStateToPropsType = {\n    dialogsPage: InitialStateDialogsType\n}\n\nexport type MapDispatchToPropsType = {\n    addMessage: (newMessageText: string) => void\n    addMessageWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newMessageText: string) => void\n    updateNewMessageText: (newMessageText: string) => void\n}\n\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        addMessage: (newMessageText: string) => {\n            newMessageText.trim() && dispatch(addMessageAC())\n        },\n        addMessageWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>, newMessageText: string) => {\n            if (!e.shiftKey && e.key === 'Enter') {\n                e.preventDefault()\n                newMessageText.trim() && dispatch(addMessageAC())\n            }\n        },\n        updateNewMessageText: (newMessageText: string) => {\n            dispatch(updateNewMessageTextAC(newMessageText));\n        }\n    }\n}\n\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\n","import React from \"react\";\nimport styleModule from \"./User.module.css\";\nimport userPhotoDefault from \"./../../../usersAvatars/user.png\";\nimport {NavLink} from \"react-router-dom\";\nimport {UserType} from \"../../../redux/redusers/usersReducer/usersReducer\";\nimport {Button} from \"../../generic/Button/Button\";\nimport {BUTTON_STYLE} from \"../../Profile/MyPosts/MyPosts\";\nimport styled from \"styled-components\";\n\ntype UserPropsType = {\n    /**\n     * Callbock that add someone user in followers\n     */\n    becomeFollower: (userID: number) => void\n    /**\n     * Callbock that remove someone user from followers\n     */\n    stopBeingFollower: (userID: number) => void\n    background?:string\n    color?:string\n} & UserType\n\nexport const User = React.memo((props: UserPropsType) => {\n    const UserWrapper = styled.div`\n    & {\n    background: ${props.background ? props.background : 'tomato'};\n    color: ${props.color ? props.color : 'white'}\n    }\n    `\n    const Img = styled.img`\n    & {\n    border-color: ${props.color ? props.color : 'white'}\n    }\n    `\n    let onFollowClick = () => {\n        props.becomeFollower(props.id);\n    };\n    let onUnfollowClick = () => {\n        props.stopBeingFollower(props.id)\n    };\n    return (\n        <UserWrapper className={styleModule.userWrapper}>\n            <div className={styleModule.avatar}>\n                <NavLink to={`/profile/${props.id}`}>\n                    <Img src={props.photos.small !== null ? props.photos.small : userPhotoDefault} alt=\"\"/>\n                </NavLink>\n            </div>\n            <div className={styleModule.fullName}>\n                {props.name}\n            </div>\n            <div className={styleModule.status}>\n                <span>{props.status}</span>\n            </div>\n            <div className={styleModule.followed}>\n                {props.followed ?\n                    <Button name={'Unfollow'}\n                            onClick={onUnfollowClick}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}/> :\n                    <Button name={'Follow'}\n                            onClick={onFollowClick}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}/>\n                }\n            </div>\n        </UserWrapper>\n    )\n})\n","import React, {useMemo, useState} from \"react\";\nimport styleModule from './Paginator.module.css';\n\nexport type PaginatorPropsType = {\n    portionSize: number\n    currentPage: number\n    pageSize: number\n    totalItemsCount: number\n    onChangePage: (pageNumber: number) => void\n}\n\nexport const Paginator = React.memo(({portionSize = 12, ...props}: PaginatorPropsType) => {\n\n    const {pageCount, pages}: { pageCount: number, pages: Array<number> } = useMemo(() => {\n        const pageCount = Math.ceil(props.totalItemsCount / props.pageSize)\n        let pages: Array<number> = [];\n        for (let i = 1; i <= pageCount; i++) {\n            pages.push(i)\n        }\n        return {pageCount, pages}\n    }, [props.totalItemsCount, props.pageSize])\n\n\n    let [portionNumber, setPortionNumber] = useState<number>(1);\n    const portionCount: number = Math.ceil(pageCount / portionSize);\n\n    const leftPortionPageNumber: number = portionSize * (portionNumber - 1) + 1;\n    const rightPortionPageNumber: number = portionSize * portionNumber;\n    return (\n        <div className={styleModule.paginator}>\n            {portionNumber > 1 && <button className={styleModule.firstPage} onClick={() => {\n                setPortionNumber(1)\n            }}>{\"First\"}</button>}\n            {portionNumber > 1 && <button className={styleModule.pagesToBack} onClick={() => {\n                setPortionNumber(portionNumber - 1)\n            }}>{\"Prev\"}</button>}\n            {portionNumber > 1 && <span className={styleModule.threeDots}>{\". . .\"}</span>}\n\n            {pages.filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\n                .map(page => <span key={page} className={props.currentPage === page ? styleModule.selectedPage : ''}\n                                   onClick={() => {\n                                       props.onChangePage(page)\n                                   }}>{page}</span>\n                )}\n\n            {portionNumber < portionCount && <span className={styleModule.threeDots}>{\". . .\"}</span>}\n            {portionNumber < portionCount && <button className={styleModule.pagesToForward} onClick={() => {\n                setPortionNumber(portionNumber + 1)\n            }}>{\"Next\"}</button>}\n            {portionNumber < portionCount && <button className={styleModule.lastPage} onClick={() => {\n                setPortionNumber(portionNumber = portionCount)\n            }}>{\"Last\"}</button>}\n        </div>\n    );\n});\n","import React from \"react\";\nimport styleModule from './Users.module.css';\nimport {User} from \"./User/User\";\nimport {InitialStateUsersType, UserType} from \"../../redux/redusers/usersReducer/usersReducer\";\nimport {Paginator} from \"../generic/Paginator/Paginator\";\n\n\nexport type GetUsersDataType = {\n    error: string | null\n    items: Array<UserType>\n    totalCount: number\n}\n\ntype UsersPropsType = {\n    usersPage: InitialStateUsersType\n    becomeFollower: (userID: number) => void\n    stopBeingFollower: (userID: number) => void\n    currentPage: number\n    pageSize: number\n    usersTotalCount: number\n    onChangePage: (pageNumber: number) => void\n}\n\nexport const Users = (props: UsersPropsType) => {\n\n    const {\n        usersPage,\n        becomeFollower,\n        stopBeingFollower,\n        usersTotalCount,\n        pageSize,\n        currentPage,\n        onChangePage,\n    } = props\n\n    let userElements = usersPage.users.map(user => <User {...user}\n                                                         becomeFollower={becomeFollower}\n                                                         stopBeingFollower={stopBeingFollower}/>);\n    return (\n        <div className={styleModule.usersWrapper}>\n            <div>\n                <Paginator portionSize={10}\n                           currentPage={currentPage}\n                           pageSize={pageSize}\n                           totalItemsCount={usersTotalCount}\n                           onChangePage={onChangePage}/>\n            </div>\n            <div className={styleModule.usersBlock}>\n                {userElements}\n            </div>\n        </div>\n    )\n\n}\n\n\n\n","import {connect} from \"react-redux\";\nimport {GetUsersDataType, Users} from \"./Users\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {\n    followAC,\n    InitialStateUsersType,\n    setCurrentPageAC,\n    setUsersAC,\n    setUsersTotalCountAC,\n    unfollowAC,\n    UserType\n} from \"../../redux/redusers/usersReducer/usersReducer\";\nimport {Dispatch} from \"redux\";\nimport React from \"react\";\nimport axios from \"axios\";\n\n\nclass UsersApiContainer extends React.Component<UsersApiContainerPropsType> {\n\n    componentDidMount(): void {\n        const {usersPage, setUsers, setUsersTotalCount} = this.props\n        //get request for getting users\n        if (!usersPage.users.length) {\n            axios.get<GetUsersDataType>(`https://social-network.samuraijs.com/api/1.0/users?count=12`, {\n                withCredentials: true,\n                headers: {\n                    \"API-KEY\": \"10732160-f45a-4879-8e6f-b2819bc13c24\"\n                }\n            }).then(response => {\n                setUsers(response.data.items)\n                setUsersTotalCount(response.data.totalCount)\n            })\n        }\n    }\n\n    //optimization of unnecessary rendering. Alternative of React.memo\n    shouldComponentUpdate(nextProps: Readonly<UsersApiContainerPropsType>, nextState: Readonly<{}>): boolean {\n        return nextProps !== this.props || nextState !== this.state\n    }\n\n    // action for pressing on page number\n    onChangePage = (pageNumber: number) => {\n        const {setUsers} = this.props\n        this.props.setCurrentPage(pageNumber)\n        axios.get<GetUsersDataType>(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${pageNumber}`, {\n            withCredentials: true,\n            headers: {\n                \"API-KEY\": \"10732160-f45a-4879-8e6f-b2819bc13c24\"\n            }\n        }).then(response => {\n            setUsers(response.data.items)\n        })\n    }\n\n    render() {\n        const {\n            usersPage,\n            becomeFollower,\n            stopBeingFollower,\n            currentPage,\n            pageSize,\n            usersTotalCount,\n        } = this.props\n        return (\n            <Users usersPage={usersPage}\n                   becomeFollower={becomeFollower}\n                   stopBeingFollower={stopBeingFollower}\n                   currentPage={currentPage}\n                   pageSize={pageSize}\n                   usersTotalCount={usersTotalCount}\n                   onChangePage={this.onChangePage}/>\n        )\n    }\n}\n\n//functionality for redux\n\ntype MapStateToPropsType = {\n    usersPage: InitialStateUsersType,\n    usersTotalCount: number,\n    pageSize: number,\n    currentPage: number\n}\ntype MapDispatchToPropsType = {\n    becomeFollower: (userID: number) => void\n    stopBeingFollower: (userID: number) => void\n    setUsers: (users: UserType[]) => void\n    setCurrentPage: (page: number) => void\n    setUsersTotalCount: (usersTotalCount: number) => void\n}\n\nexport type UsersApiContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        usersPage: state.usersPage,\n        usersTotalCount: state.usersPage.usersTotalCount,\n        pageSize: state.usersPage.pageSize,\n        currentPage: state.usersPage.currentPage,\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        becomeFollower: (userID: number) => {\n            dispatch(followAC(userID))\n        },\n        stopBeingFollower: (userID: number) => {\n            dispatch(unfollowAC(userID))\n        },\n        setUsers: (users: UserType[]) => {\n            dispatch(setUsersAC(users))\n        },\n        setCurrentPage: (page: number) => {\n            dispatch(setCurrentPageAC(page))\n        },\n        setUsersTotalCount: (usersTotalCount: number) => {\n            dispatch(setUsersTotalCountAC(usersTotalCount))\n        },\n    }\n}\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersApiContainer)","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {HashRouter, Navigate, Route, Routes} from \"react-router-dom\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport logo from './main-logo.png';\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\n\n\nexport type PATHType = {\n    PROFILE: string\n    DIALOGS: string\n    MUSIC: string\n    NEWS: string\n    USERS: string\n    SETTINGS: string\n}\nconst PATH: PATHType = {\n    PROFILE: '/profile',\n    DIALOGS: '/dialogs/*',\n    MUSIC: '/music',\n    NEWS: '/news',\n    USERS: '/users',\n    SETTINGS: '/settings'\n};\n\nexport const HEADER_STYLE = {\n    background: '#7D823F',\n    color: '#ffffff',\n    logo: logo\n};\n\nfunction App() {\n    return (\n        <HashRouter>\n            <div className=\"app_wrapper\">\n                <Header title={'Cloudpaper'}\n                        description={'Connecting Network'}\n                        background={HEADER_STYLE.background}\n                        color={HEADER_STYLE.color}\n                        logo={HEADER_STYLE.logo}/>\n                <Navbar/>\n                <div className=\"app_wrapper_content\">\n                    <Routes>\n                        <Route path='/' element={<Navigate to={PATH.PROFILE}/>}/>\n                        <Route path={PATH.PROFILE} element={<Profile />}/>\n                        <Route path={PATH.DIALOGS} element={<DialogsContainer/>}/>\n                        <Route path={PATH.MUSIC} element={<Music/>}/>\n                        <Route path={PATH.NEWS} element={<News/>}/>\n                        <Route path={PATH.USERS} element={<UsersContainer/>}/>\n                        <Route path={PATH.SETTINGS} element={<Settings/>}/>\n                    </Routes>\n                </div>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import {profileReducer} from \"./redusers/profileReducer/profileReducer\";\r\nimport {dialogsReducer} from \"./redusers/dialogsReducer/dialogsReducer\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport {usersReducer} from \"./redusers/usersReducer/usersReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        usersPage: usersReducer\r\n    }\r\n);\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}