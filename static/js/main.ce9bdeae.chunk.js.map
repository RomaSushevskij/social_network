{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Dialogs/Mesage/Message.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialog/Dialog.module.css","components/generic/Button/Button.module.css","components/generic/Textarea/Textarea.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","top-wallpaper.jpg","usersAvatars/user.png","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/redusers/profileReducer.ts","components/Profile/MyPosts/Posts/Post.tsx","components/generic/Button/Button.tsx","components/generic/Textarea/Textarea.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","main-logo.png","redux/redusers/dialogsReducer.ts","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Mesage/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","App.tsx","redux/redux-store.ts","index.tsx"],"names":["module","exports","Header","title","description","background","color","logo","styled","header","TitleDescription","div","className","styleModule","logoAndDescription","src","main_logo","title_description","loginStatus","Navbar","props","nav","item","to","profile","isActive","active","icon","faUserAlt","dialogs","faCommentDots","news","faNewspaper","music","faHeadphonesAlt","users","faUsers","settings","faSlidersH","ProfileInfo","profileInfo","top_wallpaper","alt","avatar","image","logo_avatar","ADD_POST","UPDATE_NEW_POST_TEXT","REMOVE_POST","initialState","postsData","id","name","message","likeCount","newPostText","Post","removePost","PostWrapper","postWrapper","avaBlock","ava_post","faTimes","onClick","onCrossClick","messageBlock","likesBlock","Button","callback","ButtonWithBefore","button","backgroundHover","colorHover","style","Textarea","textareaValue","setTextareaValue","reference","placeholder","onAddWithEnter","styles","textarea","onChange","onKeyPress","value","ref","BUTTON_STYLE","POST_STYLE","MyPosts","myPosts","writePost","e","updatePostText","currentTarget","addPostWithEnter","addPostButton","addPost","posts","map","post","MyPostsContainer","trim","dispatch","type","shiftKey","key","preventDefault","updateNewPostTextAC","removePostAC","Profile","content","profilePage","Music","News","Settings","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","dialogsData","messagesData","time","newMessageText","Dialog","DialogWrapper","ContactAvatar","dialog","contactAvatar","userLogo","Message","MessageBlock","Avatar","messageWrapper","messageAva","MESSAGE_STYLE","DIALOG_STYLE","Dialogs","heading","dialogs_items","dialogsPage","messagesBlock","messages","writeAndSendMessage","writeMessage","updateNewMessageText","addMessageWithEnter","addMessage","DialogsContainer","updateNewMessageTextAC","PATH","HEADER_STYLE","App","store","path","element","getState","bind","rootReducer","combineReducers","state","action","newPost","length","push","filter","p","newMessage","Date","toJSON","slice","createStore","rerenderIntireTree","ReactDOM","render","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.ce9bdeae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2lBSZ\",\"item\":\"Navbar_item__Ozyip\",\"icon\":\"Navbar_icon__2lJWr\",\"active\":\"Navbar_active__34byn\",\"settings\":\"Navbar_settings__2WR45\",\"users\":\"Navbar_users__rOSsB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1o3_i\",\"heading\":\"Dialogs_heading__2LCaS\",\"dialogs_items\":\"Dialogs_dialogs_items__1CN3_\",\"messagesBlock\":\"Dialogs_messagesBlock___yNFN\",\"messages\":\"Dialogs_messages__174fl\",\"sendMessage\":\"Dialogs_sendMessage__2OMjS\",\"writeAndSendMessage\":\"Dialogs_writeAndSendMessage__3VXCn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__rKeBu\",\"logoAndDescription\":\"Header_logoAndDescription__36SJL\",\"main_logo\":\"Header_main_logo__227Ld\",\"title_description\":\"Header_title_description__3Sd-q\",\"logo\":\"Header_logo__Z7xS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__2v9vO\",\"messageBlock\":\"Message_messageBlock__3LBDi\",\"name\":\"Message_name__3Gp6r\",\"message\":\"Message_message__9Gaxr\",\"time\":\"Message_time__2pDBU\",\"avatar\":\"Message_avatar__1V7_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__7ylqO\",\"avatar\":\"ProfileInfo_avatar__2EIzC\",\"image\":\"ProfileInfo_image__19lBH\",\"top_wallpaper\":\"ProfileInfo_top_wallpaper__1_yd0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrapper\":\"Post_postWrapper__2dad-\",\"avaBlock\":\"Post_avaBlock__1eypn\",\"messageBlock\":\"Post_messageBlock__q4MKJ\",\"removePost\":\"Post_removePost__ZIsFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__14xNj\",\"addPostButton\":\"MyPosts_addPostButton__3kHYc\",\"writePost\":\"MyPosts_writePost__rmb23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2L0-V\",\"contactAvatar\":\"Dialog_contactAvatar__2NdvE\",\"active\":\"Dialog_active__1Firc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__egdZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Textarea_textarea__3tLx0\"};","import React from \"react\";\r\nimport styleModule from './Header.module.css';\r\nimport styled from \"styled-components\";\r\n\r\nexport type HeaderPropsType = {\r\n    title: string\r\n    description?: string\r\n    background: string\r\n    color: string\r\n    logo?: string\r\n}\r\n\r\nexport function Header({\r\n                           title,\r\n                           description,\r\n                           background,\r\n                           color,\r\n                           logo, ...props\r\n                       }: HeaderPropsType) {\r\n    const Header = styled.header`\r\n    & {\r\n    background: ${background}\r\n    `;\r\n    const TitleDescription = styled.div`\r\n    & p {\r\n    color: ${color}\r\n    }\r\n    `;\r\n    return (\r\n        <Header className={styleModule.header}>\r\n            <div className={styleModule.logoAndDescription}>\r\n                <div className={styleModule.logo}>\r\n                    <img src={logo} className={styleModule.main_logo}/>\r\n                </div>\r\n                <TitleDescription className={styleModule.title_description}>\r\n                    <p>{title}</p>\r\n                    <p>{description}</p>\r\n                </TitleDescription>\r\n            </div>\r\n            <div className={styleModule.loginStatus}>\r\n\r\n            </div>\r\n        </Header>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\nimport './Navbar.module.css';\nimport styleModule from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n    faCommentDots,\n    faHeadphonesAlt,\n    faNewspaper,\n    faSlidersH,\n    faUserAlt,\n    faUsers\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport function Navbar(props: any) {\n    return (\n        <>\n            <nav className={styleModule.nav}>\n                <div className={styleModule.item}>\n                    <NavLink to={'/profile'}\n                             className={profile => profile.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faUserAlt} className={styleModule.icon}/> Profile\n                    </NavLink>\n                </div>\n                <div className={styleModule.item}>\n                    <NavLink to={'/dialogs'}\n                             className={dialogs => dialogs.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faCommentDots} className={styleModule.icon}/> Messages\n                    </NavLink>\n                </div>\n                <div className={styleModule.item}>\n                    <NavLink to={'/news'} className={news => news.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faNewspaper} className={styleModule.icon}/> News\n                    </NavLink>\n                </div>\n                <div className={styleModule.item}>\n                    <NavLink to={'/music'} className={music => music.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faHeadphonesAlt} className={styleModule.icon}/> Music\n                    </NavLink>\n                </div>\n                <div className={`${styleModule.item} ${styleModule.users}`}>\n                    <NavLink to={'/users'} className={users => users.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faUsers} className={styleModule.icon}/> Users\n                    </NavLink>\n                </div>\n                <div className={`${styleModule.item} ${styleModule.settings}`}>\n                    <NavLink to={'/settings'}\n                             className={settings => settings.isActive ? styleModule.active : ''}>\n                        <FontAwesomeIcon icon={faSlidersH} className={styleModule.icon}/> Settings\n                    </NavLink>\n                </div>\n\n            </nav>\n        </>\n    )\n};\n","export default __webpack_public_path__ + \"static/media/top-wallpaper.47d6d9d7.jpg\";","export default __webpack_public_path__ + \"static/media/user.cb380ae4.png\";","import React from \"react\";\nimport styleModule from './ProfileInfo.module.css';\nimport top_wallpaper from \"../../../top-wallpaper.jpg\";\nimport logo_avatar from '../../../usersAvatars/user.png';\n\nexport function ProfileInfo(props: any) {\n\n\n    return (\n        <div className={styleModule.profileInfo}>\n            <div className={styleModule.top_wallpaper}>\n                <img src={top_wallpaper} alt=\"top_wallpaper\"/>\n            </div>\n            <div className={styleModule.avatar}>\n                <div className={styleModule.image}>\n                    <img src={logo_avatar}/>\n                </div>\n\n            </div>\n            <div className={styleModule.description}>\n\n            </div>\n        </div>\n    )\n};\n\n","import {ActionsTypes} from \"../redux-store\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst REMOVE_POST = 'REMOVE-POST';\r\n\r\nexport type PostType = {\r\n    id: number\r\n    name: string\r\n    message: string\r\n    likeCount: number\r\n    image: string | null\r\n    background?: string\r\n    color?: string\r\n}\r\nexport type PostsDataType = Array<PostType>\r\nexport type ProfilePageType = {\r\n    postsData: PostsDataType,\r\n    newPostText: string\r\n}\r\n\r\nexport type InitialStateType = ProfilePageType\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti, eum.',\r\n            likeCount: 9,\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Mariya',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur cumque harum illo inventore maiores minus mollitia, quaerat quis rem voluptatibus.',\r\n            likeCount: 3,\r\n            image: null\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ivan',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis est, et labore laborum nemo nisi.',\r\n            likeCount: 87,\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album'\r\n        }\r\n    ],\r\n    newPostText: ''\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    debugger\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: state.postsData.length + 1,\r\n                name: 'Someone',\r\n                message: state.newPostText,\r\n                likeCount: 0,\r\n                image: null\r\n            };\r\n            state.postsData.push(newPost);\r\n            state.newPostText = '';\r\n            return state;\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.newPostText = action.newPostText;\r\n            return state;\r\n        case REMOVE_POST:\r\n            return (\r\n                {...state, postsData: state.postsData.filter(p => p.id !== action.id)}\r\n            );\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const addPostAC = () => ({type: ADD_POST} as const);\r\nexport const updateNewPostTextAC = (newPostText: string) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newPostText\r\n} as const);\r\nexport const removePostAC = (id: number) => ({type: REMOVE_POST, id} as const);","import React from \"react\";\nimport styleModule from './Post.module.css'\nimport ava_post from '../../../../usersAvatars/user.png'\nimport {PostType} from \"../../../../redux/redusers/profileReducer\";\nimport styled from \"styled-components\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\n\ntype PostPropsType = PostType & {removePost: (id: number) => void};\n\nexport function Post({\n                         id,\n                         name,\n                         message,\n                         likeCount,\n                         image,\n                         background,\n                         color,\n                         removePost,\n                         ...props\n                     }: PostPropsType) {\n    const PostWrapper = styled.div`\n     & {\n        background: ${background ? background : '#FF6347'};\n        color:  ${color ? color : '#ffffff'};\n    }\n    `;\n\n    const onCrossClick = (id: number) => {\n        removePost(id);\n    };\n\n    return (\n        <PostWrapper className={styleModule.postWrapper}>\n            <div className={styleModule.avaBlock}>\n                <img src={image ? image : ava_post} alt=\"ava_post\"/>\n                <span>{name}</span>\n                <FontAwesomeIcon icon={faTimes} className={styleModule.removePost} onClick={() => onCrossClick(id)}/>\n            </div>\n            <div className={styleModule.messageBlock}>\n                {message}\n            </div>\n            <div className={styleModule.likesBlock}>\n                <span>❤</span> {likeCount}\n            </div>\n        </PostWrapper>\n\n    );\n};\n\n","import React from \"react\";\r\nimport style from './Button.module.css'\r\nimport styled from \"styled-components\";\r\n\r\ntype ButtonPropsType = {\r\n    name: string\r\n    callback: () => void\r\n    backgroundHover: string\r\n    background: string\r\n    colorHover: string\r\n}\r\n\r\n\r\nexport const Button = ({name, callback, ...props}: ButtonPropsType) => {\r\n    const ButtonWithBefore = styled.button`\r\n& {\r\nborder-color: ${props.backgroundHover};\r\ncolor: ${props.backgroundHover};\r\nbackground-color:${props.background}\r\n}\r\n&:before {\r\nbackground: ${props.backgroundHover};\r\n}\r\n&:hover {\r\ncolor: ${props.colorHover}\r\n}\r\n`;\r\n\r\n    const onClickButton = () => {\r\n        callback()\r\n    };\r\n\r\n    return (\r\n        <ButtonWithBefore onClick={onClickButton} className={style.button}>{name}</ButtonWithBefore>\r\n    )\r\n}","import React, {ChangeEvent, LegacyRef, KeyboardEvent} from \"react\";\r\nimport style from './Textarea.module.css'\r\n\r\ntype TextareaPropsType = {\r\n    textareaValue: string\r\n    setTextareaValue: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n    onAddWithEnter?: (e: KeyboardEvent<HTMLTextAreaElement>) => void\r\n    reference?: LegacyRef<HTMLTextAreaElement>\r\n    placeholder: string\r\n    background: string\r\n    color: string\r\n}\r\n\r\nexport const Textarea = ({\r\n                             textareaValue,\r\n                             setTextareaValue,\r\n                             reference,\r\n                             placeholder,\r\n                             onAddWithEnter,\r\n                             background,\r\n                             color,\r\n                             ...restProps\r\n                         }: TextareaPropsType) => {\r\n    const styles = {\r\n        background:background,\r\n        color: color\r\n    };\r\n    return (\r\n        <textarea placeholder={placeholder}\r\n                  className={style.textarea}\r\n                  onChange={setTextareaValue}\r\n                  onKeyPress={onAddWithEnter}\r\n                  value={textareaValue}\r\n                  ref={reference}\r\n                  style={styles}\r\n                  />\r\n    )\r\n};","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport styleModule from './MyPosts.module.css'\nimport {Post} from \"./Posts/Post\";\nimport {PostsDataType} from \"../../../redux/redusers/profileReducer\";\nimport {Button} from \"../../generic/Button/Button\";\nimport {Textarea} from \"../../generic/Textarea/Textarea\";\n\nexport const BUTTON_STYLE = {\n    BACKGROUND_HOVER: '#ffbf47',\n    BACKGROUND: '#ffe1a9',\n    COLOR_HOVER: '#ffffff'\n};\nexport const POST_STYLE = {\n    background: 'inherit',\n    color: '#ffffff'\n};\n\n\ntype MyPostsPropsType = {\n    postsData: PostsDataType\n    newPostText: string\n    addPost: () => void\n    addPostWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>) => any\n    updatePostText: (newPostText:string) => any\n    removePost:(id:number) => void\n}\n\nexport function MyPosts(props: MyPostsPropsType) {\n\n    const onAddPostButton = () => {\n        props.addPost();\n    };\n    const onAddPostWithEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        props.addPostWithEnter(e);\n    };\n    const onUpdatePostText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updatePostText(e.currentTarget.value);\n    };\n\n    return (\n        <div className={styleModule.myPosts}>\n            <p>My posts</p>\n            <div>\n                <div className={styleModule.writePost}>\n                    <Textarea setTextareaValue={onUpdatePostText}\n                              textareaValue={props.newPostText}\n                              onAddWithEnter={onAddPostWithEnter}\n                              placeholder={'Here you can leave your post'}\n                              background={'#ffffff'}\n                              color={'#60575A'}/>\n                </div>\n                <div className={styleModule.addPostButton}>\n                    <Button name={'Add post'}\n                            callback={onAddPostButton}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}/>\n                </div>\n            </div>\n            <div className={styleModule.posts}>\n                {props.postsData.map(post => <Post key={post.id}\n                                                   background={POST_STYLE.background}\n                                                   color={POST_STYLE.color}\n                                                   removePost={props.removePost}\n                                                   {...post}/>)}\n            </div>\n        </div>\n\n    )\n        ;\n};\n","import React, {KeyboardEvent} from \"react\";\nimport {ActionsTypes} from \"../../../redux/redux-store\";\nimport {PostsDataType, addPostAC, removePostAC, updateNewPostTextAC} from \"../../../redux/redusers/profileReducer\";\nimport {MyPosts} from \"./MyPosts\";\n\ntype MyPostsContainerPropsType = {\n    postsData: PostsDataType\n    newPostText: string\n    dispatch: (action: ActionsTypes) => void\n}\n\nexport function MyPostsContainer(props: MyPostsContainerPropsType) {\n\n    const addPost = () => {\n        props.newPostText.trim() && props.dispatch(addPostAC());\n    };\n    const addPostWithEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (!e.shiftKey && e.key === 'Enter') {\n            e.preventDefault();\n            addPost()\n        }\n    };\n    const updatePostText = (newPostText: string) => {\n        props.dispatch(updateNewPostTextAC(newPostText));\n    };\n    const removePost = (id: number) => {\n        props.dispatch(removePostAC(id))\n    };\n\n    return (\n        <MyPosts postsData={props.postsData}\n                 newPostText={props.newPostText}\n                 addPost={addPost}\n                 addPostWithEnter={addPostWithEnter}\n                 updatePostText={updatePostText}\n                 removePost={removePost}/>\n\n    )\n        ;\n};\n","import React from \"react\";\nimport styleModule from './Profile.module.css';\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\nimport {ProfilePageType} from \"../../redux/redusers/profileReducer\";\nimport {ActionsTypes} from \"../../redux/redux-store\";\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\n\ntype ProfilePropsType = {\n    profilePage: ProfilePageType\n    dispatch: (action: ActionsTypes) => void\n}\n\nexport function Profile(props: ProfilePropsType) {\n    return (\n        <div className={styleModule.content}>\n            <ProfileInfo/>\n            <MyPostsContainer postsData={props.profilePage.postsData}\n                              newPostText={props.profilePage.newPostText}\n                              dispatch={props.dispatch}\n            />\n        </div>\n    );\n}\n\n\n","import React from \"react\";\nimport styleModule from './Music.module.css';\n\n\nexport function Music(props:any) {\n    return (\n        <div>\n           Music\n        </div>\n    );\n}\n\n\n\n","import React from \"react\";\nimport styleModule from './News.module.css';\n\n\nexport function News(props:any) {\n    return (\n        <div>\n           News\n        </div>\n    );\n}\n\n","import React from \"react\";\nimport styleModule from './Settings.module.css';\n\n\nexport function Settings() {\n    return (\n        <div>\n            Settings\n        </div>\n    );\n}\n\n","export default __webpack_public_path__ + \"static/media/main-logo.8de3ea88.png\";","import {ActionsTypes} from \"../redux-store\";\r\n\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    /**\r\n     * Name of contact/friend\r\n     */\r\n    name: string\r\n    /**\r\n     * Image of contact/friend\r\n     */\r\n    image: string | null\r\n    /**\r\n     * Optional background color of component\r\n     */\r\n    background?: string\r\n    /**\r\n     * Optional color text of component\r\n     */\r\n    color?: string\r\n};\r\nexport type MessageType = {\r\n    id: number,\r\n    name: string,\r\n    message: string,\r\n    image: string | null,\r\n    time: string\r\n};\r\n\r\nexport type DialogsDataType = Array<DialogType>\r\nexport type MessagesDataType = Array<MessageType>\r\n\r\nexport type DialogsPageType = {\r\n    dialogsData: DialogsDataType\r\n    messagesData: MessagesDataType\r\n    newMessageText: string\r\n}\r\n\r\nexport type InitialStateType = DialogsPageType;\r\n\r\nconst initialState: InitialStateType = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album'\r\n        },\r\n        {id: 2, name: 'Dmitry', image: null},\r\n        {\r\n            id: 3,\r\n            name: 'Aleksey',\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album'\r\n        },\r\n        {id: 4, name: 'Ivan', image: null},\r\n        {id: 5, name: 'Mother', image: null}\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            name: 'Ruslan',\r\n            message: 'Hi',\r\n            image: 'https://sun9-15.userapi.com/impg/O_LNAi5kKsq4-ViNecim4rUQkihvDLuTnXfL2w/BSAIvsvBviM.jpg?size=863x1080&quality=96&sign=8c552a2a19907e2e040b0475efdb6b85&type=album',\r\n            time: '12:03'\r\n        },\r\n        {id: 2, name: 'Dmitry', message: 'Hi, how are you?', image: null, time: '13:01'},\r\n        {\r\n            id: 3,\r\n            name: 'Ivan',\r\n            message: 'Yo',\r\n            image: 'https://sun9-53.userapi.com/impf/c623626/v623626744/19d9c/KBDd8fH-BOg.jpg?size=1280x960&quality=96&sign=03d1a85127b8411ce8b5b0b4118f78f6&type=album',\r\n            time: '13:08'\r\n        },\r\n        {id: 4, name: 'Mother', message: 'Why yo?', image: null, time: '14:05'}\r\n    ],\r\n    newMessageText: ''\r\n};\r\n\r\nexport const dialogsReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage: MessageType = {\r\n                id: state.messagesData.length + 1,\r\n                name: 'Someone',\r\n                message: state.newMessageText,\r\n                image: null,\r\n                time: new Date().toJSON().slice(11, 16)\r\n\r\n            };\r\n            state.messagesData.push(newMessage);\r\n            state.newMessageText = '';\r\n            return state;\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            state.newMessageText = action.newMessageText;\r\n            return state;\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const addMessageAC = () => ({type: ADD_MESSAGE} as const);\r\nexport const updateNewMessageTextAC = (newMessageText: string) => ({\r\n    type: UPDATE_NEW_MESSAGE_TEXT,\r\n    newMessageText\r\n} as const);","import React from \"react\";\nimport styleModule from './Dialog.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport userLogo from '../../../usersAvatars/user.png'\nimport {DialogType} from \"../../../redux/store\";\nimport styled from \"styled-components\";\n\nexport type DialogPropsType = DialogType\n\nexport function Dialog({\n                           id,\n                           name,\n                           image,\n                           background,\n                           color, ...props\n                       }: DialogPropsType) {\n    const DialogWrapper = styled.div`\n    & {\n    background: ${background ? background : '#FF6347'};\n    }\n    & a {\n    color: ${color ? color : '#ffffff'};\n    }\n    \n    `;\n    const ContactAvatar = styled.div`\n    & img {\n    border: 1px solid ${color ? color : '#ffffff'};\n    }\n    `\n\n    return (\n        <DialogWrapper className={styleModule.dialog}>\n            <ContactAvatar className={styleModule.contactAvatar}>\n                <img src={image ? image : userLogo}/>\n            </ContactAvatar>\n            <NavLink to={`/dialogs/ ${id}`}>{name}</NavLink>\n        </DialogWrapper>\n    )\n}\n\n","import React from \"react\";\nimport styleModule from './Message.module.css';\nimport messageAva from '../../../usersAvatars/user.png'\nimport styled from \"styled-components\";\n\nexport type MessagePropsType = {\n    id: number,\n    name: string,\n    message: string,\n    image: string | null,\n    time: string\n    background:string\n    color:string\n}\n\nexport function Message({\n                            name,\n                            message,\n                            image,\n                            time,\n                            color,\n                            background, ...props\n                        }: MessagePropsType) {\n    const MessageBlock = styled.div`\n    & {\n    background: ${background};\n    color: ${color}\n    }\n    &:before {\n    background: radial-gradient(circle at top left, transparent 50%, ${background} 50%);\n    }\n    `;\n    const Avatar = styled.div`\n    & {\n    border-color: ${background}\n    }\n    `;\n    return (\n        <div className={styleModule.messageWrapper}>\n            <Avatar className={styleModule.avatar}>\n                <img src={image ? image : messageAva}/>\n            </Avatar>\n            <MessageBlock className={styleModule.messageBlock}>\n                <div className={styleModule.name}>\n                    {name}\n                </div>\n                <div className={styleModule.message}>\n                    {message}\n                </div>\n                <div className={styleModule.time}>\n                    {time}\n                </div>\n            </MessageBlock>\n        </div>\n    )\n}\n\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport {Dialog} from \"./Dialog/Dialog\";\nimport {Message} from \"./Mesage/Message\";\nimport styleModule from './Dialogs.module.css';\nimport {DialogsPageType} from \"../../redux/redusers/dialogsReducer\";\nimport {Button} from \"../generic/Button/Button\";\nimport {Textarea} from \"../generic/Textarea/Textarea\";\nimport {BUTTON_STYLE} from \"../Profile/MyPosts/MyPosts\";\n\nexport type DialogsPropsType = {\n    dialogsPage: DialogsPageType\n    addMessage: () => void\n    addMessageWithEnter: (e: KeyboardEvent<HTMLTextAreaElement>) => void\n    updateNewMessageText: (newMessageText: string) => void\n}\n\nconst MESSAGE_STYLE = {\n    background: '#ffffff',\n    color: '#757575'\n};\nconst DIALOG_STYLE = {\n    background: 'inherit',\n    color: '#ffffff'\n};\n\nexport function Dialogs(props: DialogsPropsType) {\n\n\n    const onAddMessageButton = () => {\n        props.addMessage();\n    };\n    const onAddMessageWithEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        props.addMessageWithEnter(e)\n    };\n    const onUpdateNewMessageText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updateNewMessageText(e.currentTarget.value)\n    };\n\n    return (\n        <div className={styleModule.dialogs}>\n            <div className={styleModule.heading}>\n                DIALOGS\n            </div>\n            <div className={styleModule.dialogs_items}>\n                {props.dialogsPage.dialogsData.map(dialog => <Dialog key={dialog.id}\n                                                                     background={DIALOG_STYLE.background}\n                                                                     color={DIALOG_STYLE.color}\n                                                                     {...dialog}/>)}\n            </div>\n            <div className={styleModule.messagesBlock}>\n                <div className={styleModule.messages}>\n                    {props.dialogsPage.messagesData.map(message => <Message key={message.id}\n                                                                            background={MESSAGE_STYLE.background}\n                                                                            color={MESSAGE_STYLE.color}\n                                                                            {...message}/>)}\n                </div>\n                <div className={styleModule.writeAndSendMessage}>\n                    <div className={styleModule.writeMessage}>\n                        <Textarea textareaValue={props.dialogsPage.newMessageText}\n                                  setTextareaValue={onUpdateNewMessageText}\n                                  onAddWithEnter={onAddMessageWithEnter}\n                                  placeholder={'Enter your message'}\n                                  background={'#ffffff'}\n                                  color={'#60575A'}/>\n\n                    </div>\n                    <Button name={'Send'}\n                            callback={onAddMessageButton}\n                            backgroundHover={BUTTON_STYLE.BACKGROUND_HOVER}\n                            background={BUTTON_STYLE.BACKGROUND}\n                            colorHover={BUTTON_STYLE.COLOR_HOVER}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n","import React, {KeyboardEvent} from \"react\";\nimport {ActionsTypes} from \"../../redux/redux-store\";\nimport {DialogsPageType, addMessageAC, updateNewMessageTextAC} from \"../../redux/redusers/dialogsReducer\";\nimport {Dialogs} from \"./Dialogs\";\n\nexport type DialogsContainerPropsType = {\n    dialogsPage: DialogsPageType\n    dispatch: (action: ActionsTypes) => void\n}\n\n\nexport function DialogsContainer(props: DialogsContainerPropsType) {\n\n\n    const addMessage = () => {\n        props.dispatch(addMessageAC());\n    };\n    const addMessageWithEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (!e.shiftKey && e.key === 'Enter') {\n            e.preventDefault();\n            addMessage()\n        }\n    };\n    const updateNewMessageText = (newMessageText: string) => {\n        props.dispatch(updateNewMessageTextAC(newMessageText));\n    };\n\n    return (\n        <Dialogs dialogsPage={props.dialogsPage}\n                 addMessage={addMessage}\n                 addMessageWithEnter={addMessageWithEnter}\n                 updateNewMessageText={updateNewMessageText}/>\n    );\n}\n\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {HashRouter, Navigate, Route, Routes} from \"react-router-dom\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {StoreType} from \"./redux/redux-store\";\nimport logo from './main-logo.png';\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\n\n\nexport type AppPropsType = {\n    store: StoreType\n}\n\nexport type PATHType = {\n    PROFILE: string\n    DIALOGS: string\n    MUSIC: string\n    NEWS: string\n    SETTINGS: string\n}\nconst PATH: PATHType = {\n    PROFILE: '/profile',\n    DIALOGS: '/dialogs/*',\n    MUSIC: '/music',\n    NEWS: '/news',\n    SETTINGS: '/settings'\n};\n\nexport const HEADER_STYLE = {\n    background: '#7D823F',\n    color: '#ffffff',\n    logo: logo\n};\n\nfunction App({store, ...restProps}: AppPropsType) {\n    return (\n        <HashRouter>\n            <div className=\"app_wrapper\">\n                <Header title={'Cloudpaper'}\n                        description={'Connecting Network'}\n                        background={HEADER_STYLE.background}\n                        color={HEADER_STYLE.color}\n                        logo={HEADER_STYLE.logo}/>\n                <Navbar/>\n                <div className=\"app_wrapper_content\">\n                    <Routes>\n                        <Route path='/' element={<Navigate to={PATH.PROFILE}/>}/>\n                        <Route path={PATH.PROFILE} element={<Profile profilePage={store.getState().profilePage}\n                                                                     dispatch={store.dispatch.bind(store)}/>}/>\n                        <Route path={PATH.DIALOGS} element={<DialogsContainer dialogsPage={store.getState().dialogsPage}\n                                                                     dispatch={store.dispatch.bind(store)}\n                        />}/>\n                        <Route path={PATH.MUSIC} element={<Music/>}/>\n                        <Route path={PATH.NEWS} element={<News/>}/>\n                        <Route path={PATH.SETTINGS} element={<Settings/>}/>\n                    </Routes>\n                </div>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import {addPostAC, profileReducer, removePostAC, updateNewPostTextAC} from \"./redusers/profileReducer\";\r\nimport {addMessageAC, dialogsReducer, updateNewMessageTextAC} from \"./redusers/dialogsReducer\";\r\nimport {combineReducers, createStore} from \"redux\";\r\n\r\n\r\nexport type ActionsTypes =\r\n    ReturnType<typeof addPostAC> |\r\n    ReturnType<typeof updateNewPostTextAC> |\r\n    ReturnType<typeof addMessageAC> |\r\n    ReturnType<typeof updateNewMessageTextAC> |\r\n    ReturnType<typeof removePostAC>\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer\r\n    }\r\n);\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport const store = createStore(rootReducer);\r\nexport type StoreType = typeof store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from \"./redux/redux-store\";\n\n\nconst rerenderIntireTree = () => {\n    ReactDOM.render(\n        <App store={store}/>,\n        document.getElementById('root')\n    );\n};\nstore.subscribe(rerenderIntireTree);\nrerenderIntireTree();\n\n\n"],"sourceRoot":""}