{"version":3,"sources":["components/Users/Users.module.css","components/Users/User/User.module.css","../node_modules/@fortawesome/free-solid-svg-icons/faUserMinus.js","../node_modules/@fortawesome/free-solid-svg-icons/faUserPlus.js","components/generic/SearchInputText/SearchInputText.module.css","components/forms/SearchUsersForm/SearchUsersForm.module.scss","components/Users/User/User.tsx","components/generic/SearchInputText/SearchInputText.tsx","components/forms/SearchUsersForm/utils/utils.ts","components/forms/SearchUsersForm/SearchUsersForm.tsx","components/Users/Users.tsx"],"names":["module","exports","Object","defineProperty","value","iconName","aliases","unicode","svgPathData","definition","prefix","icon","faUserMinus","width","height","ligatures","faUserPlus","User","React","memo","props","isFollowingButtonDisabled","followingInProcessUsersId","includes","id","className","styleModule","userWrapper","avatar","to","Avatar","style","photo","photos","small","followed","disabled","onClick","stopBeingFollower","becomeFollower","fullName","name","SearchInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","customStyle","title","restProps","form","finalSpanClassName","s","finalInputClassName","errorInput","superInput","inputWrapper","faMagnifyingGlass","searchLogo","e","currentTarget","key","CSSTransition","in","timeout","classNames","unmountOnExit","mountOnEnter","convertSearchSelectValue","optionValue","convertSearchSelectValueBack","SearchUsersForm","dispatch","useDispatch","useSearchParams","setSearchParams","pageSize","useAppSelector","getPageSizeSelector","currentPage","getCurrentPageSelector","getSearchUsersFilterSelector","term","friend","formik","useFormik","initialValues","onSubmit","values","correctValues","getUsers","enableReinitialize","useEffect","newSearchParams","String","page","handleSubmit","placeholder","getFieldProps","selectBlock","Select","onChangeOption","options","Button","Users","users","getUsersSelector","searchUsersFilter","usersPageSize","isFetching","getIsFetchingSelector","usersTotalCount","getUsersTotalCountSelector","getFollowingInProcessUsersIdSelector","useState","setPageSize","searchParams","actualSearchUsersFilter","actualCurrentPage","get","Number","onBecomeFollower","userId","onStopBeingFollower","onToggleFollowingInProcess","followingInProcess","toggleFollowingInProcess","userElements","map","user","usersWrapper","searchFormBlock","Preloader","size","color","usersBlock","paginatorBlock","Paginator","portionSize","totalItemsCount","pageSizeRange","onChangePage","pageNumber","repeatGetUsers","onChangePageSize","pageSizeValue"],"mappings":"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","file":"static/js/3.949e8417.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"Users_usersWrapper__2gv8N\",\"searchFormBlock\":\"Users_searchFormBlock__1bUIB\",\"usersBlock\":\"Users_usersBlock__2PNX-\",\"paginatorBlock\":\"Users_paginatorBlock__cYDZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"User_userWrapper__2pbxa\",\"avatar\":\"User_avatar__27DBJ\",\"followed\":\"User_followed__L1kan\",\"fullName\":\"User_fullName__2LysJ\"};","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'user-minus';\nvar width = 640;\nvar height = 512;\nvar aliases = [];\nvar unicode = 'f503';\nvar svgPathData = 'M274.7 304H173.3C77.61 304 0 381.6 0 477.3C0 496.5 15.52 512 34.66 512h378.7C432.5 512 448 496.5 448 477.3C448 381.6 370.4 304 274.7 304zM224 256c70.7 0 128-57.31 128-128S294.7 0 224 0C153.3 0 96 57.31 96 128S153.3 256 224 256zM616 200h-144C458.8 200 448 210.8 448 224s10.75 24 24 24h144C629.3 248 640 237.3 640 224S629.3 200 616 200z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    aliases,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faUserMinus = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = aliases;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;\nexports.aliases = aliases;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'user-plus';\nvar width = 640;\nvar height = 512;\nvar aliases = [];\nvar unicode = 'f234';\nvar svgPathData = 'M224 256c70.7 0 128-57.31 128-128S294.7 0 224 0C153.3 0 96 57.31 96 128S153.3 256 224 256zM274.7 304H173.3C77.61 304 0 381.6 0 477.3C0 496.5 15.52 512 34.66 512h378.7C432.5 512 448 496.5 448 477.3C448 381.6 370.4 304 274.7 304zM616 200h-48v-48C568 138.8 557.3 128 544 128s-24 10.75-24 24v48h-48C458.8 200 448 210.8 448 224s10.75 24 24 24h48v48C520 309.3 530.8 320 544 320s24-10.75 24-24v-48h48C629.3 248 640 237.3 640 224S629.3 200 616 200z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    aliases,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faUserPlus = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = aliases;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;\nexports.aliases = aliases;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"SearchInputText_inputWrapper__1scSR\",\"superInput\":\"SearchInputText_superInput__BrCWc\",\"errorInput\":\"SearchInputText_errorInput__2vGn2\",\"searchLogo\":\"SearchInputText_searchLogo__jXRhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchUsersForm_form__2OPgB\",\"selectBlock\":\"SearchUsersForm_selectBlock__1VArX\"};","import React from \"react\";\nimport styleModule from \"./User.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport {UserType} from \"../../../redux/redusers/usersReducer/usersReducer\";\nimport {Avatar} from '../../generic/Avatar/Avatar';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faUserMinus} from '@fortawesome/free-solid-svg-icons/faUserMinus';\nimport {faUserPlus} from '@fortawesome/free-solid-svg-icons/faUserPlus';\n\n\ntype UserPropsType = {\n    /**\n     * Callbock that add someone user in followers\n     */\n    becomeFollower: (userID: number) => void\n    /**\n     * Callbock that remove someone user from followers\n     */\n    stopBeingFollower: (userID: number) => void\n    followingInProcessUsersId: number[]\n    toggleFollowingInProcess: (userId: number, followingInProcess: boolean) => void\n    background?: string\n    color?: string\n} & UserType\n\nexport const User = React.memo((props: UserPropsType) => {\n\n    //is follow button disabled?\n    const isFollowingButtonDisabled = props.followingInProcessUsersId.includes(props.id)\n\n    return (\n        <div className={styleModule.userWrapper}>\n            <div className={styleModule.avatar}>\n                <NavLink to={`/profile/${props.id}`}>\n                    <Avatar style={{width: '90px', height: '90px'}} photo={props.photos.small}/>\n                </NavLink>\n                <div className={styleModule.followed}>\n                    {props.followed ?\n                        <button disabled={isFollowingButtonDisabled}\n                                onClick={() => props.stopBeingFollower(props.id)}>\n                            <FontAwesomeIcon icon={faUserMinus}/>\n                        </button> :\n                        <button disabled={isFollowingButtonDisabled}\n                                onClick={() => props.becomeFollower(props.id)}>\n                            <FontAwesomeIcon icon={faUserPlus}/>\n                        </button>\n                    }\n                </div>\n            </div>\n            <p className={styleModule.fullName}>\n                {props.name}\n            </p>\n        </div>\n    )\n})\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, memo} from 'react'\nimport s from './SearchInputText.module.css'\nimport {CSSTransition} from 'react-transition-group';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faMagnifyingGlass} from \"@fortawesome/free-solid-svg-icons/faMagnifyingGlass\";\n\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype InputTextPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    customStyle?: string\n}\n\nconst SearchInputText: React.FC<InputTextPropsType> = memo((\n    {\n        type,\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName, title,\n        customStyle, form,\n\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeText && onChangeText(e.currentTarget.value)\n    };\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n        onEnter && e.key === 'Enter' && onEnter()\n    };\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\n    const finalInputClassName = `${error ? `${s.errorInput} ${s.superInput}` : s.superInput} ${className ? s[className] : className}`;\n    return (\n        <div className={customStyle ? `${customStyle} ${s.inputWrapper}` : s.inputWrapper}>\n            <FontAwesomeIcon icon={faMagnifyingGlass} className={s.searchLogo}/>\n            <input type={type}\n                   onChange={onChangeCallback}\n                   onKeyPress={onKeyPressCallback}\n                   className={finalInputClassName}\n                   {...restProps}\n            />\n            <CSSTransition in={!!error}\n                           timeout={300}\n                           classNames={s}\n                           unmountOnExit\n                           mountOnEnter>\n                <div className={finalSpanClassName}>{error}</div>\n            </CSSTransition>\n        </div>\n    )\n});\n\nexport default SearchInputText\n","export const convertSearchSelectValue = (optionValue: string): null | false | true => {\n    switch (optionValue) {\n        case(\"All\"): {\n            return null\n        }\n        case(\"Followers\"): {\n            return true\n        }\n        case(\"Not followers\"): {\n            return false\n        }\n        default:\n            return null\n    }\n};\n\nexport const convertSearchSelectValueBack = (optionValue: null | false | true): string => {\n    switch (optionValue) {\n        case(null): {\n            return \"All\"\n        }\n        case(true): {\n            return \"Followers\"\n        }\n        case(false): {\n            return \"Not followers\"\n        }\n        default:\n            return \"All\"\n    }\n};\n","import SearchInputText from \"../../generic/SearchInputText/SearchInputText\";\nimport {Button} from \"../../generic/Button/Button\";\nimport React, {memo, useEffect} from \"react\";\nimport {useFormik} from \"formik\";\nimport style from \"./SearchUsersForm.module.scss\"\nimport Select from \"../../generic/Select/Select\";\nimport {\n    getCurrentPageSelector,\n    getPageSizeSelector,\n    getSearchUsersFilterSelector\n} from \"../../../redux/selectors/usersSelectors\";\nimport {useSearchParams} from \"react-router-dom\";\nimport {useAppSelector} from \"../../../redux/hooks\";\nimport {SearchUsersFilterType} from \"../../../redux/redusers/usersReducer/usersReducer\";\nimport {useDispatch} from \"react-redux\";\nimport {convertSearchSelectValue, convertSearchSelectValueBack} from \"./utils/utils\";\nimport {getUsers} from \"../../../redux/sagas/users/usersSagas\";\n\nexport type FormValuesType = {\n    term: string,\n    friend: string\n};\nexport type  QueryParamsType = {\n    term?: string;\n    page?: string;\n    friend?: string;\n}\n\nexport const SearchUsersForm = memo(() => {\n    const dispatch = useDispatch();\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const pageSize = useAppSelector(getPageSizeSelector);\n    const currentPage = useAppSelector(getCurrentPageSelector);\n    const {term, friend} = useAppSelector(getSearchUsersFilterSelector);\n    const searchedUsers = [\"All\", \"Followers\", \"Not followers\"];\n\n    const formik = useFormik({\n        initialValues: {\n            term,\n            friend: convertSearchSelectValueBack(friend),\n        },\n        onSubmit: (values: FormValuesType) => {\n            const correctValues = {...values, friend: convertSearchSelectValue(values.friend)};\n            dispatch(getUsers(pageSize, 1, correctValues));\n        },\n        enableReinitialize: true,\n    });\n    const onSelectChange = (optionValue: string) => {\n        const values: SearchUsersFilterType = {\n            term: formik.values.term,\n            friend: convertSearchSelectValue(optionValue),\n        }\n        dispatch(getUsers(pageSize, 1, values))\n    }\n    useEffect(() => {\n        const newSearchParams: QueryParamsType = {};\n        if (!!term) newSearchParams.term = term;\n        if (friend !== null) newSearchParams.friend = String(friend);\n        if (currentPage !== 1) newSearchParams.page = String(currentPage);\n        setSearchParams(newSearchParams);\n    }, [term, friend, currentPage])\n\n    return (\n        <form onSubmit={formik.handleSubmit} className={style.form}>\n            <SearchInputText placeholder=\"Search users...\" {...formik.getFieldProps(\"term\")}/>\n            <div className={style.selectBlock}>\n                <Select onChangeOption={onSelectChange} options={searchedUsers} {...formik.getFieldProps(\"friend\")}/>\n            </div>\n            <Button type=\"submit\" name=\"Search\"/>\n        </form>\n    )\n});","import React, {useEffect, useState} from \"react\";\nimport styleModule from './Users.module.css';\nimport {User} from \"./User/User\";\nimport {Paginator} from \"../generic/Paginator/Paginator\";\nimport {Preloader} from \"../generic/Preloader/Preloader\";\nimport {useAppSelector} from \"../../redux/hooks\";\nimport {\n    getCurrentPageSelector,\n    getFollowingInProcessUsersIdSelector,\n    getIsFetchingSelector,\n    getPageSizeSelector,\n    getSearchUsersFilterSelector,\n    getUsersSelector,\n    getUsersTotalCountSelector\n} from \"../../redux/selectors/usersSelectors\";\nimport {\n    toggleFollowingInProcess\n} from \"../../redux/redusers/usersReducer/usersReducer\";\nimport {useDispatch} from \"react-redux\";\nimport {SearchUsersForm} from \"../forms/SearchUsersForm/SearchUsersForm\";\nimport {useSearchParams} from \"react-router-dom\";\nimport {becomeFollower, getUsers, repeatGetUsers, stopBeingFollower} from \"../../redux/sagas/users/usersSagas\";\n\nconst Users = React.memo(() => {\n    const dispatch = useDispatch();\n\n    const users = useAppSelector(getUsersSelector);\n    const searchUsersFilter = useAppSelector(getSearchUsersFilterSelector);\n    const usersPageSize = useAppSelector(getPageSizeSelector);\n    const currentPage = useAppSelector(getCurrentPageSelector);\n    const isFetching = useAppSelector(getIsFetchingSelector);\n    const usersTotalCount = useAppSelector(getUsersTotalCountSelector);\n    const followingInProcessUsersId = useAppSelector(getFollowingInProcessUsersIdSelector);\n\n    const [pageSize, setPageSize] = useState(20);\n    const pageSizeRange = [20, 30, 40, 50, 100];\n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        let actualSearchUsersFilter = searchUsersFilter;\n        let actualCurrentPage = currentPage;\n\n        const term = searchParams.get('term');\n        const friend = searchParams.get('friend');\n        const page = searchParams.get('page');\n        if (!!page) actualCurrentPage = Number(page);\n        if (!!term) actualSearchUsersFilter.term = term;\n        switch (friend) {\n            case 'null':\n                actualSearchUsersFilter = {...searchUsersFilter, friend: null};\n                break;\n            case 'true':\n                actualSearchUsersFilter = {...searchUsersFilter, friend: true};\n                break;\n            case 'false':\n                actualSearchUsersFilter = {...searchUsersFilter, friend: false};\n                break;\n        }\n        dispatch(getUsers(pageSize, actualCurrentPage, actualSearchUsersFilter));\n    }, [])\n\n\n    const onChangePage = (pageNumber: number) => {\n        dispatch(repeatGetUsers(usersPageSize, pageNumber, searchUsersFilter))\n    };\n    const onChangePageSize = (pageSizeValue: number) => {\n        setPageSize(pageSizeValue)\n        dispatch(repeatGetUsers(Number(pageSize), currentPage, searchUsersFilter));\n    };\n    const onBecomeFollower = (userId: number) => {\n        dispatch(becomeFollower(userId))\n    };\n    const onStopBeingFollower = (userId: number) => {\n        dispatch(stopBeingFollower(userId))\n    };\n    const onToggleFollowingInProcess = (userId: number, followingInProcess: boolean) => {\n        dispatch(toggleFollowingInProcess(userId, followingInProcess))\n    }\n\n    const userElements = users.map(user => <User key={user.id}\n                                                 {...user}\n                                                 becomeFollower={onBecomeFollower}\n                                                 stopBeingFollower={onStopBeingFollower}\n                                                 followingInProcessUsersId={followingInProcessUsersId}\n                                                 toggleFollowingInProcess={onToggleFollowingInProcess}/>);\n\n\n    return (\n        <div className={styleModule.usersWrapper}>\n            <div className={styleModule.searchFormBlock}>\n                <SearchUsersForm/>\n            </div>\n            {isFetching ? <Preloader size={'30px'} color={'#5B48E3'}/> :\n                <div className={styleModule.usersBlock}>\n                    {userElements}\n                </div>}\n            <div className={styleModule.paginatorBlock}>\n                <Paginator portionSize={5}\n                           currentPage={currentPage}\n                           pageSize={pageSize}\n                           totalItemsCount={usersTotalCount}\n                           pageSizeRange={pageSizeRange}\n                           onChangePage={onChangePage}\n                           onChangePageSize={onChangePageSize}/>\n            </div>\n        </div>\n    )\n})\n\nexport default Users;\n\n\n"],"sourceRoot":""}